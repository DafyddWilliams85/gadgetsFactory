[{"id":"9b47808b.46fed8","type":"tab","label":"Revotio api","disabled":true,"info":""},{"id":"a2b40f09.d18fd8","type":"tab","label":"SystemFlows / cron jobs","disabled":false,"info":""},{"id":"508957a1.dd5398","type":"tab","label":"Local app API","disabled":false,"info":""},{"id":"aec22158.fe4e38","type":"tab","label":"User oAuth flows","disabled":false,"info":""},{"id":"2294209a.0c95b","type":"tab","label":"users","disabled":false,"info":""},{"id":"7ba47ea5.e51c4","type":"tab","label":"Applications","disabled":false,"info":""},{"id":"e5822137.be45d","type":"tab","label":"Organization","disabled":false,"info":""},{"id":"4c633fc.7d56fc","type":"tab","label":"Pages","disabled":false,"info":""},{"id":"671d608a.039ad","type":"tab","label":"Items","disabled":false,"info":""},{"id":"f8594dbe.be6f8","type":"tab","label":"Forms ","disabled":false,"info":""},{"id":"d8703926.e2eca","type":"tab","label":"Generic","disabled":false,"info":""},{"id":"e15a0fdb.64cc38","type":"tab","label":"chat","disabled":false,"info":""},{"id":"51f1d48a.bfebf4","type":"tab","label":"Data manipulation flow","disabled":false,"info":""},{"id":"45759581.11da84","type":"subflow","name":"Topbar","info":"","category":"","in":[{"x":1520,"y":1620,"wires":[{"id":"704d4000.20aee"}]}],"out":[{"x":1800,"y":1620,"wires":[{"id":"704d4000.20aee","port":0}]}],"env":[]},{"id":"39834eee.0dd5a2","type":"subflow","name":"Flow session mgt ","info":"","category":"System flows","in":[{"x":20,"y":80,"wires":[{"id":"a16ff674.24bb78"}]}],"out":[{"x":280,"y":80,"wires":[{"id":"a16ff674.24bb78","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"5e9b9c1d.bbe4a4","type":"subflow","name":"Redirect","info":"","category":"System flows","in":[{"x":480,"y":140,"wires":[{"id":"79d28e11.52934"}]}],"out":[],"env":[]},{"id":"a55f7aee.572be","type":"subflow","name":"Prepair flow","info":"","category":"System flows","in":[{"x":40,"y":80,"wires":[{"id":"2927f5ef.05639a"}]}],"out":[{"x":540,"y":80,"wires":[{"id":"4e19b9ea.51eff8","port":0}]},{"x":540,"y":140,"wires":[{"id":"4e19b9ea.51eff8","port":1}]},{"x":560,"y":200,"wires":[{"id":"4e19b9ea.51eff8","port":2}]}],"env":[]},{"id":"152aab03.7a806d","type":"subflow","name":"menu call","info":"","category":"System flows","in":[{"x":320,"y":380,"wires":[{"id":"b4440fc5.ad787"}]}],"out":[{"x":920,"y":440,"wires":[{"id":"6fec3c3b.ef2c44","port":2}]}],"env":[]},{"id":"3170c4ab.fadb9c","type":"subflow","name":"Form call","info":"","category":"System flows","in":[{"x":420,"y":260,"wires":[{"id":"301d64c9.14362c"}]}],"out":[{"x":1140,"y":360,"wires":[{"id":"3ca50242.9fc416","port":1}]}],"env":[]},{"id":"4cbbc60.828563c","type":"subflow","name":"Global context","info":"","category":"System flows","in":[{"x":220,"y":140,"wires":[{"id":"ce4931e.2eadfd"},{"id":"4468c444.53ac84"}]}],"out":[],"env":[],"color":"#DDAA99"},{"id":"e25f5e2d.45871","type":"subflow","name":"Generate response Object","info":"","category":"System flows","in":[{"x":20,"y":220,"wires":[{"id":"e343bb91.2fe0a8"},{"id":"91d23ba1.ffd018"}]}],"out":[],"env":[],"color":"#DDAA99"},{"id":"2ef93158.ae5276","type":"subflow","name":"TB design","info":"","category":"System flows","in":[{"x":-20,"y":80,"wires":[{"id":"2780dc99.05adfc"}]}],"out":[{"x":400,"y":80,"wires":[{"id":"2780dc99.05adfc","port":0}]}],"env":[]},{"id":"19457c3b.7f3ba4","type":"subflow","name":"Generic breadcrumb post","info":"","category":"","in":[{"x":-20,"y":80,"wires":[{"id":"75a214b5.1247dc"}]}],"out":[],"env":[],"color":"#DDAA99"},{"id":"73dff3ad.4e7f84","type":"subflow","name":"convert IDs","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"820eb5ef.100fd8"}]}],"out":[{"x":340,"y":80,"wires":[{"id":"820eb5ef.100fd8","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"5c6b8786.2f63d","type":"subflow","name":"Init org level","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"c456991.34d5368"}]}],"out":[{"x":340,"y":80,"wires":[{"id":"c456991.34d5368","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"8db3b81a.693fd","type":"subflow","name":"BreadCrumbsAction","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"e4b702f8.2026a"}]}],"out":[{"x":460,"y":40,"wires":[{"id":"e4b702f8.2026a","port":0}]},{"x":640,"y":180,"wires":[{"id":"f2f17cd0.7f59a8","port":0},{"id":"e4b702f8.2026a","port":2}]}],"env":[],"color":"#DDAA99"},{"id":"53926ffd.c5a74","type":"subflow","name":"Validate token","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"3eaaac4f.be9de4"}]}],"out":[{"x":340,"y":80,"wires":[{"id":"3eaaac4f.be9de4","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"c2e73722.28eeb8","type":"websocket-listener","path":"/ws/chat","wholemsg":"false"},{"id":"594fbb51.16039c","type":"catch","z":"e5822137.be45d","name":"","scope":null,"x":60,"y":160,"wires":[["ae14566f.c06d9"]]},{"id":"ae14566f.c06d9","type":"debug","z":"e5822137.be45d","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":178.33332443237305,"y":159.99999618530273,"wires":[]},{"id":"90b9b2bb.71e9","type":"catch","z":"aec22158.fe4e38","name":"","scope":null,"x":60,"y":20,"wires":[["968e2324.e80b"]]},{"id":"968e2324.e80b","type":"debug","z":"aec22158.fe4e38","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":160,"y":20,"wires":[]},{"id":"a86d336c.1e032","type":"comment","z":"aec22158.fe4e38","name":"User authentication","info":"","x":90,"y":153.99999618530273,"wires":[]},{"id":"bc6ac440.7a7d78","type":"comment","z":"aec22158.fe4e38","name":"User authentication gagdet actions","info":"","x":1155,"y":219.99999618530273,"wires":[]},{"id":"d92220ce.df2c7","type":"comment","z":"aec22158.fe4e38","name":"User authentication gadgets","info":"","x":781.166748046875,"y":212.49999618530273,"wires":[]},{"id":"3fb52bc8.66088c","type":"debug","z":"aec22158.fe4e38","name":"debug - User authentication INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":395,"y":339.99999618530273,"wires":[]},{"id":"ffb8ad05.fe04","type":"link in","z":"aec22158.fe4e38","name":"UserAuthentication INIT","links":["ad478a5b.bb35a","a46d6d89.0ff6a8","e130563c.567048"],"x":250,"y":379.99999618530273,"wires":[["3fb52bc8.66088c","e80a67d5.4cc398"]]},{"id":"dd911c3e.69ac98","type":"comment","z":"aec22158.fe4e38","name":"User account activation","info":"","x":95,"y":719.9999961853027,"wires":[]},{"id":"603f053d.277bd4","type":"comment","z":"aec22158.fe4e38","name":"User account activation gagdet actions","info":"","x":2385,"y":799.9999961853027,"wires":[]},{"id":"9fde6397.653cf8","type":"comment","z":"aec22158.fe4e38","name":"User account activation gadgets","info":"","x":1365,"y":799.9999961853027,"wires":[]},{"id":"dd631978.387b18","type":"debug","z":"aec22158.fe4e38","name":"debug - User account activation INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":345,"y":919.9999961853027,"wires":[]},{"id":"f08a12de.bf0fd","type":"link in","z":"aec22158.fe4e38","name":"UserAccountActivation INIT","links":["75463c50.ea35e4","9b9de128.140c3","6537bec2.9226e8"],"x":130,"y":979.9999961853027,"wires":[["dd631978.387b18","cb573448.22b968"]]},{"id":"4f5a2540.8fc0c4","type":"debug","z":"aec22158.fe4e38","name":"debug - User account activation Gadget Post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":2635,"y":899.9999961853027,"wires":[]},{"id":"cb573448.22b968","type":"link out","z":"aec22158.fe4e38","name":"","links":["28fbb602.bac6a2"],"x":548.5000076293945,"y":978.0000095367432,"wires":[]},{"id":"986822a8.580788","type":"comment","z":"aec22158.fe4e38","name":"two step authentication","info":"","x":100,"y":1177.9999961853027,"wires":[]},{"id":"f23132e9.5e6e58","type":"comment","z":"aec22158.fe4e38","name":"two step authentication gagdet actions","info":"","x":2085,"y":1279.9999961853027,"wires":[]},{"id":"ac4fc122.89ea9","type":"comment","z":"aec22158.fe4e38","name":"two step authentication gadgets","info":"","x":1085,"y":1239.9999961853027,"wires":[]},{"id":"4ddc1f0b.3d3f68","type":"function","z":"aec22158.fe4e38","name":"Trigger email","func":"\nvar emailTemplate = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> <html xmlns=\"http://www.w3.org/1999/xhtml\"> <head> <meta name=\"viewport\" content=\"width=device-width\"/> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/> <title>Academic Projects User invitation</title> <style type=\"text/css\"> *{margin:0; padding:0;}*{font-family: Roboto-Regular,Helvetica,Arial,sans-serif;}body{-webkit-font-smoothing:antialiased; -webkit-text-size-adjust:none; width: 100%!important; height: 100%;}a{color: #2BA6CB;}. btn{text-decoration:none; color: #FFF; background-color: #1991EB; margin-top: 5px; padding:10px 16px; font-weight:bold; margin-right:10px; text-align:center; cursor:pointer; display: inline-block; border-radius: 2px;}table.body- wrap{width: 100%;}h2{font-size: 24px; line-height: 28px; margin-bottom:15px; color:#000;}h2 small{color: #6f6f6f; text-transform:none; font-size: 20px;}p{margin-bottom: 10px; font-weight: normal; font-size:14px; line-height:1.4;}p small{font-size: 13px; line-height: 24px;}p.lead{font-size:17px;}. container{display:block!important; max-width:600px!important; margin:0 auto!important; clear:both!important;}.content{padding: 35px 20px; max-width:600px; margin:0 auto; display:block;}.content table{width: 100%;}@media only creen and (max-width: 600px){a[class=\"btn\"]{display:block!important; margin-bottom:10px!important; background-image:none!important; margin-right:0!important;}}</style> </head> <body bgcolor=\"#FFFFFF\"> <table class=\"body-wrap\"> <tr> <td></td><td class=\"container\" bgcolor=\"#FFFFFF\"> <div class=\"content\"> <table> <tr> <td> <h2><small>Hi,</small> msg.payload.firstname msg.payload.lastname </h2> <br/> <p class=\"lead\">Welcome to the project management application for the University of Leiden!</p><br/> <p class=\"lead\">Cheerfully yours,<br/>Team Academic projects.</p><br/> <p><small>You can activate your account by clicking on this link:</small></p><a class=\"btn\" href=\" currentDomain /api/app/#/confirmation?activate=msg.payload.user_id \">Click Me to Activate!</a> <br/> <br/> </td></tr></table> </div></td><td></td></tr></table> </body> </html>';\n\nmsg.payload = {\n                   \"apiKey\": global.get(\"mailgun.apiKey\"),\n                   \"domain\":global.get(\"mailgun.domain\"), \n                   \"emailHeaders\":{\n                      \"from\":global.get(\"mailgun.from\"),\n                      \"to\":msg.RevotioData.session.userData.email,\n                      \"subject\":\"Two step authentication\",\n                      \"body\":\"\",\n                   },\n                   \"emailData\":{\n                      \"optional key-one\":\"some value\",\n                      \"optional key-two\":\"some other value !!!\"\n                   },\n                   \"emailTemplate\":\"Hi \" + msg.RevotioData.session.userData.firstname +  \", please enter this token : \" + msg.RevotioData.FlowData.Token + \" into the app. Thanks!!!\"\n                };\n                \n                \n              \n                \n                \nreturn msg;","outputs":1,"noerr":0,"x":1190,"y":1320,"wires":[[]]},{"id":"8eda4890.cca5e8","type":"catch","z":"d8703926.e2eca","name":"","scope":null,"x":118.75,"y":33.75,"wires":[["b2e8d966.2f42b"]]},{"id":"b2e8d966.2f42b","type":"debug","z":"d8703926.e2eca","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":260,"y":40,"wires":[]},{"id":"3ab682ae.10e656","type":"link in","z":"aec22158.fe4e38","name":"UserAuthentication ACTION","links":["88cb22fd.2938c","6dbb7fd6.2f51d","82e73790.6bba78"],"x":1070,"y":299.99999618530273,"wires":[["cde0b321.b9d5c","aed8c006.3bdf3"]]},{"id":"579313d7.2430dc","type":"link in","z":"aec22158.fe4e38","name":"UserAccountActivation ACTION","links":["28cd6ef4.fc46fa","60f9add0.f0070c","e8682458.5b8fb"],"x":2370,"y":859.9999961853027,"wires":[["4f5a2540.8fc0c4","a6610d0a.93f8e"]]},{"id":"77606d92.eb8adc","type":"comment","z":"d8703926.e2eca","name":"Calendar","info":"","x":80,"y":2000,"wires":[]},{"id":"16a644c7.d56c3b","type":"comment","z":"d8703926.e2eca","name":"Calendar Gagdet actions","info":"","x":2670,"y":2140,"wires":[]},{"id":"f588d14d.988978","type":"comment","z":"d8703926.e2eca","name":"Calendar gadgets","info":"","x":4870,"y":2040,"wires":[]},{"id":"be82be0b.e244e8","type":"link in","z":"d8703926.e2eca","name":"Calendar INIT","links":["1278e8c1.1446af","3e2f795a.a4fa8e","99062bf1.b4f22"],"x":835,"y":2360,"wires":[["253ef7f3.4173","7e57e82a.62b6a8"]]},{"id":"253ef7f3.4173","type":"debug","z":"d8703926.e2eca","name":"Calendar INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":1000,"y":2300,"wires":[]},{"id":"713de56c.6ef084","type":"link in","z":"d8703926.e2eca","name":"Calendar Action","links":["522ef07e.dfdb7","e02dbd22.30d868","16cc9821.fb3bf"],"x":3555,"y":2300,"wires":[["316a4bfb.b922fc","80d70a50.7c48"]]},{"id":"316a4bfb.b922fc","type":"debug","z":"d8703926.e2eca","name":"Calendar Action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":3638.5712928771973,"y":2167.6431846618652,"wires":[]},{"id":"70fea837.efd9f8","type":"comment","z":"d8703926.e2eca","name":"file management INIT","info":"var listAll         = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full/utok\",\"fsop\":\"listAll\"}\nvar listDir         = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"listDir\", \"listPath\":\"/test-folder-full/SystemFiles/Icons\"}\nvar createDir       = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full\",\"fsop\":\"createDir\", \"dirPath\":\"newfolder\"}\nvar removeObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full\",\"fsop\":\"removeObject\", \"removePath\":\"newfolder\"}\nvar renameObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"renameObject\", \"renameFrom\":\"test-folder-full/newfolder\", \"renameTo\":\"newfolderCHANGED\"}\nvar moveObject      = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"moveObject\", \"moveFrom\":\"/test-folder-full/newfolderCHANGED\", \"moveTo\":\"test-folder-full/utok/newfolderCHANGED\"}\nvar uploadObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full/utok\",\"fsop\":\"uploadObject\", \"uploadPath\":\"Folder\"}\nvar downloadObject  = {\"fileSystemPath\" : \"/home\",\"fsop\":\"downloadObject\", \"downloadPath\":\"path/to/file\"}\n","x":100,"y":3420,"wires":[]},{"id":"4b0e50d3.eda75","type":"comment","z":"d8703926.e2eca","name":"File manage Gagdet actions","info":"var listAll         = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full/utok\",\"fsop\":\"listAll\"}\nvar listDir         = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"listDir\", \"listPath\":\"/test-folder-full/SystemFiles/Icons\"}\nvar createDir       = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full\",\"fsop\":\"createDir\", \"dirPath\":\"newfolder\"}\nvar removeObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full\",\"fsop\":\"removeObject\", \"removePath\":\"newfolder\"}\nvar renameObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"renameObject\", \"renameFrom\":\"test-folder-full/newfolder\", \"renameTo\":\"newfolderCHANGED\"}\nvar moveObject      = {\"fileSystemPath\" : \"/Users/dafyddwilliams\",\"fsop\":\"moveObject\", \"moveFrom\":\"/test-folder-full/newfolderCHANGED\", \"moveTo\":\"test-folder-full/utok/newfolderCHANGED\"}\nvar uploadObject    = {\"fileSystemPath\" : \"/Users/dafyddwilliams/test-folder-full/utok\",\"fsop\":\"uploadObject\", \"uploadPath\":\"Folder\"}\nvar downloadObject  = {\"fileSystemPath\" : \"/home\",\"fsop\":\"downloadObject\", \"downloadPath\":\"path/to/file\"}\n","x":3795,"y":3693.333646774292,"wires":[]},{"id":"b32092dd.fe7c28","type":"link in","z":"d8703926.e2eca","name":"File manager INIT","links":["81664c81.99cd3","e7ee6d75.dbf5c8","3faaafe4.5d305"],"x":575,"y":3880,"wires":[["df0800a4.a92448","44b902cb.1d920c"]]},{"id":"df0800a4.a92448","type":"debug","z":"d8703926.e2eca","name":"File manager INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":670,"y":3820,"wires":[]},{"id":"c11e0879.f54c68","type":"link in","z":"d8703926.e2eca","name":"File manager Action","links":["213ad5db.7ab652","32fad275.0ac2d6","b8ffa12.8f00be"],"x":3730,"y":3813.333646774292,"wires":[["10c7801f.85c348","713e5201.5d7e04"]]},{"id":"10c7801f.85c348","type":"debug","z":"d8703926.e2eca","name":"File manager Action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":3835,"y":3753.333646774292,"wires":[]},{"id":"124338fe.1d179f","type":"comment","z":"d8703926.e2eca","name":"File manager gadgets","info":"","x":4060.475830078125,"y":3664.643217086792,"wires":[]},{"id":"a06272bd.e32538","type":"comment","z":"aec22158.fe4e38","nameinfo":"","x":2425,"y":759.9999961853027,"wires":[]},{"id":"be1f9240.8525","type":"comment","z":"aec22158.fe4e38","nameinfo":"","x":2430,"y":1207.9999961853027,"wires":[]},{"id":"fb87369c.23e","type":"comment","z":"aec22158.fe4e38","nameinfo":"","x":2430,"y":180,"wires":[]},{"id":"44b902cb.1d920c","type":"function","z":"d8703926.e2eca","name":"INIT FLOW","func":"var source = msg.RevotioData.FlowData.Source\nvar fs = global.get('fsextra');\n\nvar Non,organization,  project, employee;\n\nif (msg.RevotioData.FlowData.hasOwnProperty(\"project_id\") ) {\n       msg.RevotioData.FlowData.entity = 'project';\n       msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.project_id;\n       \n       \n       msg.RevotioData.FlowData.FileSystemData = {\n            entity: msg.RevotioData.FlowData.entity,\n            entityId : msg.RevotioData.FlowData.entityId,\n            rootFolder: global.get(\"DomainProperties.rootPath\")+  msg.RevotioData.FlowData.entity + \"/\" + msg.RevotioData.FlowData.entityId + \"/files\",\n            currentFolder : \"/\"\n        }\n\n\n       project = msg;\n    } else if ( msg.RevotioData.FlowData.hasOwnProperty(\"employee_id\")) {\n       msg.RevotioData.FlowData.entity = 'employee';\n       msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.employee_id;\n       \n        msg.RevotioData.FlowData.FileSystemData = {\n            entity: msg.RevotioData.FlowData.entity,\n            entityId : msg.RevotioData.FlowData.entityId,\n            rootFolder: global.get(\"DomainProperties.rootPath\") + \"organization/\" + msg.RevotioData.FlowData.organization_id+ \"/\" +  msg.RevotioData.FlowData.entity + \"/\" + msg.RevotioData.FlowData.entityId + \"/files\",\n            currentFolder : \"/\"\n        \n            \n        }\n    \n    \n       employee = msg;\n    } else if ( msg.RevotioData.FlowData.hasOwnProperty(\"organization_id\")) {\n       msg.RevotioData.FlowData.entity = 'organization';\n       msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.organization_id;\n       \n        msg.RevotioData.FlowData.FileSystemData = {\n            entity: msg.RevotioData.FlowData.entity,\n            entityId : msg.RevotioData.FlowData.entityId,\n            rootFolder: global.get(\"DomainProperties.rootPath\") +  msg.RevotioData.FlowData.entity + \"/\" + msg.RevotioData.FlowData.entityId + \"/files\",\n            currentFolder : \"/\"\n        }\n    \n    \n       organization = msg;\n    } else {\n        \n      \n       Non = msg; \n    }\n\nfs.ensureDir(global.get(\"DomainProperties.rootPath\")+  msg.RevotioData.FlowData.entity + \"/\" + msg.RevotioData.FlowData.entityId + \"/files\")\n      \n\nreturn [Non, organization , project, employee];\n\n\n\n","outputs":4,"noerr":0,"x":690,"y":3880,"wires":[["9f5effff.357bd8"],["2bd16e9e.7c8812"],["2de08b73.f7fefc"],["bc1e82d3.0e56d"]],"outputLabels":["Non","organization","project","employee"]},{"id":"9f5effff.357bd8","type":"link out","z":"d8703926.e2eca","name":"","links":["12ee5fc7.99b8a8","3835b64a.b8e03a"],"x":815,"y":3820,"wires":[]},{"id":"12ee5fc7.99b8a8","type":"link in","z":"d8703926.e2eca","name":"File manager gadget","links":["9f5effff.357bd8","ca886c6d.434ae","ac3b5006.c58438","3bfadf51.f71d78","311cf4a9.a162cc","7526219.bce576","72265e38.ac80e8","78113a71.978a04","cfc77b66.96d3c8","cbbdb354.3aebc","f7d81350.6151e8","15c79a10.01a706"],"x":2935,"y":3960,"wires":[["945fe0ab.50bb4"]]},{"id":"945fe0ab.50bb4","type":"function","z":"d8703926.e2eca","name":"Get all files","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif(msg.RevotioData.FlowData.FileSystemData.currentFolder === \"\"){\n    msg.RevotioData.FlowData.FileSystemData.currentFolder = \"/\"\n}\n\n// fs.ensureDirSync(msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder)\n// msg.payload = fs.readdirSync(msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder)\n \nmsg.payload = global.get(\"functions.syncDirlist\")(msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder)\nreturn msg;\n  ","outputs":1,"noerr":0,"x":3010,"y":3960,"wires":[["43cebe8b.430e2"]]},{"id":"43cebe8b.430e2","type":"function","z":"d8703926.e2eca","name":"Prepair gadget payload","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nNewlist = []\npayload = {\n    list: msg.payload,\n   \n}\n// _.each(msg.payload, function(Item, Index){\n//     childItem = {name : Item}\n//     // if (Item.type === 'dir'){\n//     //     // Item.absolutePath = msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder + \"/\" +  Item.name\n//     // } else {\n        \n//     //     Item.publicUrl =   global.get(\"functions.fileManagement\")(msg.RevotioData.FlowData.FileSystemData.rootFolder +msg.RevotioData.FlowData.FileSystemData.currentFolder + \"/\" + Item.name , msg.RevotioData.FlowData.FileSystemData.rootFolder + \"/\" +Item.name ,msg.RevotioData.session._id, \"copySync\") // source, destination, operation global.get(\"DomainProperties.url\") + msg.RevotioData.session.UserData.avatar,\n//     //   } \n    \n//     if ( msg.RevotioData.FlowData.FileSystemData.currentFolder.endsWith(\"/\") === false ){\n//       msg.RevotioData.FlowData.FileSystemData.currentFolder = msg.RevotioData.FlowData.FileSystemData.currentFolder + \"/\" \n//     }\n//     childItem.filePath =   msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder +   childItem.name\n//     childItem.absolutePath =   msg.RevotioData.FlowData.FileSystemData.rootFolder +msg.RevotioData.FlowData.FileSystemData.currentFolder + childItem.name \n//     payload.list.children.push(childItem)\n// })\n\n// msg.payload.list.absolutePath = msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder\n// msg.payload.list.filePath = msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder\n\nFSpayload = {gadgetsList : [{\n\n            \"gadgetId\":  \"6b2837e2-0018-667d-5bbb-666fce1f792e\",\n            \"gadgetName\": \"file management\",\n            \"gadgetType\": \"revotio-file-manager\",\n            \"gadgetData\": {\n                path : payload.list.path,\n                parent : payload.list.parent,\n                child : payload.list.child,\n              \"listColumnData\": {\n                        \"columnHead\": [\n                          {\n                            \"title\": \"filePath\",\n                            \"allowSort\": false,\n                            \"headKey\": \"filePath\",\n                            \"hidden\": false,\n                            \"displayType\": \"string\"\n                          }\n                        ],\n                        \"columnOptions\": {\n                          \"columnStyle\": {\n                            \"color\": \"red\",\n                            \"font-size\": \"12px\"\n                          },\n                          \"cellStyle\": {\n                            \"color\": \"red\",\n                            \"font-size\": \"12px\"\n                          },\n                          \"allowSort\": false\n                        }\n                      },\n            }\n                }]};\n\n\n\nmsg.payload = FSpayload\nreturn msg;","outputs":1,"noerr":0,"x":3290,"y":3960,"wires":[["70af7f8.2d8678","68f1df62.efc99"]]},{"id":"70af7f8.2d8678","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":3455,"y":3960,"wires":[]},{"id":"615eea0b.763ce4","type":"function","z":"d8703926.e2eca","name":"Get projectData","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                '$match': {_id: new ObjectID(msg.RevotioData.FlowData.project_id)},\n                                },\n                    \n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"funding_scheme\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"funding_scheme_data\"\n                                }\n                              },\n                             \n                              {\n                                $unwind: {\n                                  \"path\": \"$funding_scheme_data\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.RevotioData.FlowData.Data.ProjectData = res[0]\n                    // msg.payload = res\n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1420,"y":3800,"wires":[["cbbdb354.3aebc"]]},{"id":"ae22ca70.a31c18","type":"function","z":"d8703926.e2eca","name":"Get employeeData","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nfindOneObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.RevotioData.FlowData.employee_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1190,"y":3860,"wires":[["ad0ac4d8.4f6318"]]},{"id":"ad0ac4d8.4f6318","type":"function","z":"d8703926.e2eca","name":"Set EmployeeData && ensure dir","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.RevotioData.FlowData.Data.EmployeeData = msg.payload;\nfs.ensureDirSync(global.get(\"DomainProperties.rootFolder\")+ \"/organization/\"+ msg.RevotioData.FlowData.organization_id )\n  \nreturn msg;","outputs":1,"noerr":0,"x":1560,"y":3860,"wires":[["c472049e.6ca8b"]]},{"id":"713e5201.5d7e04","type":"function","z":"d8703926.e2eca","name":"Route POST","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  menu, FileManager,RevotioBreadCrumbs, FormAction, Redirect, tabsSelect;\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n           menu = msg;\n        } else if (PostData.gadgetType=== \"revotio-file-manager\"){\n            FileManager = msg;\n        }else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n            RevotioBreadCrumbs  = msg;\n        }else if (PostData.gadgetType=== \"custom-form\"){\n            FormAction = msg;\n        }    else if (PostData.gadgetType === \"revotio-tabs-select\"){\n            tabsSelect = msg\n\n    }\n\n\n        \n}\n\nreturn [menu, FileManager, RevotioBreadCrumbs, FormAction, Redirect, tabsSelect];\n\n\n\n","outputs":6,"noerr":0,"x":3805,"y":3813.333646774292,"wires":[["d80c0979.2ffed"],["4a6bc6ec.aaed18"],[],["c4bd527f.ba6138"],["7fefc455.ea5a3c"],[]],"outputLabels":["menu","FileManager","RevotioBreadCrumbs, ","FormAction","Redirect","tabsSelect"]},{"id":"4a6bc6ec.aaed18","type":"function","z":"d8703926.e2eca","name":"Route based on msg.FSPayload.ActionType","func":"var Load, Upload, Rename, Remove,  Move, Create, Order;\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\nif (PostData.gadgetData.actionType === \"Load\"){\n    Load = msg;\n} else if (PostData.gadgetData.actionType === \"Upload\"){\n    Upload = msg;\n} else if (PostData.gadgetData.actionType === \"Rename\"){\n    Rename = msg;\n} else if (PostData.gadgetData.actionType === \"Remove\"){\n    Remove = msg;\n} else if (PostData.gadgetData.actionType === \"Move\"){\n    Move = msg;\n} else if (PostData.gadgetData.actionType === \"Create\"){\n    Create = msg;\n} else if (PostData.gadgetData.actionType === \"Order\"){\n    Order = msg;\n}    \n\n \nreturn [Load, Upload, Rename, Remove,  Move, Create, Order];","outputs":7,"noerr":0,"x":4145,"y":3813.333646774292,"wires":[["4add76ad.0678"],["3bfadf51.f71d78"],["79756e1e.91ee6"],["d990d8a1.5615b"],["8f3505e6.46fa"],["465c7fe9.a5077"],[]],"outputLabels":["Load","Upload","Rename","Remove","Move","Create","Order","Redirect"]},{"id":"79756e1e.91ee6","type":"function","z":"d8703926.e2eca","name":"Rename file / folder","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\nfs.renameSync(msg.RevotioData.PostData.gadgetData.renameFrom, msg.RevotioData.PostData.gadgetData.renameTo)\n\n\n// msg.payload = \n// {\"fileSystemPath\" : msg.RevotioData.FlowData.FileSystemData.rootFolder,\n// \"fsop\":\"renameObject\", \n// \"renameFrom\":msg.RevotioData.PostData.gadgetData.renameFrom,\n// \"renameTo\":msg.RevotioData.PostData.gadgetData.renameTo}\nreturn msg;","outputs":1,"noerr":0,"x":4470,"y":3820,"wires":[["3bfadf51.f71d78"]]},{"id":"d990d8a1.5615b","type":"function","z":"d8703926.e2eca","name":"Remove file / folder","func":"// var PostData    = msg.RevotioData.PostData;\n// var Page        = msg.RevotioData.session.Page;\n\n// msg.payload = \n\n// {\"fileSystemPath\" :msg.RevotioData.FlowData.FileSystemData.rootFolder , \n// \"openOnFolder\" : msg.RevotioData.FlowData.FileSystemData.rootFolder , \n// \"fsop\":\"removeObject\", \n// \"removePath\": PostData.gadgetData.Item.absolutePath \n    \n// }\n\nvar fs = global.get('fsextra');\n\nfs.removeSync(msg.RevotioData.PostData.gadgetData.Item.absolutePath)\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4470,"y":3860,"wires":[["3bfadf51.f71d78"]]},{"id":"8f3505e6.46fa","type":"function","z":"d8703926.e2eca","name":"Move file to correct location","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nfs.copyFileSync(PostData.gadgetData.moveFrom.absolutePath, PostData.gadgetData.moveTo.absolutePath + \"/\" + PostData.gadgetData.moveFrom.name)\n\nfs.removeSync(PostData.gadgetData.moveFrom.absolutePath)\n\n\n// msg.payload = {\n//     fileSystemPath:\"/\",\n//     \"fsop\":\"moveObject\", \n//      moveFrom:PostData.gadgetData.moveFrom.absolutePath,\n//      moveTo: PostData.gadgetData.moveTo.absolutePath + \"/\" + PostData.gadgetData.moveFrom.name\n// };\n\n// msg.RevotioData.PostData.gadgetData.moveFrom\nreturn msg;","outputs":1,"noerr":0,"x":4500,"y":3900,"wires":[["3bfadf51.f71d78"]]},{"id":"465c7fe9.a5077","type":"function","z":"d8703926.e2eca","name":"Create file / folder","func":"var fs = global.get('fsextra');\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\nfs.mkdirSync(msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder +\"/\"+PostData.gadgetData.name)\n// msg.payload = {\n//     \"fsop\":\"createDir\", \n//     dirPath: PostData.gadgetData.name,\n//     fileSystemPath : msg.RevotioData.FlowData.FileSystemData.rootFolder + msg.RevotioData.FlowData.FileSystemData.currentFolder\n//     // {\"\" : \"/home\",\"fsop\":\"createDir\", \"dirPath\":\"path/to/newfolder\"}\n// };\n\n// {\"fileSystemPath\" : \"/home\",\"fsop\":\"createDir\", \"dirPath\":\"path/to/newfolder\"}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4470,"y":3940,"wires":[["3bfadf51.f71d78"]]},{"id":"cd8c7f3.154188","type":"link out","z":"aec22158.fe4e38","name":"","links":["fdeb0a33.b80658","ac130025.b78d4","8f317f74.8f0218","7063f25b.94df04"],"x":490,"y":379.99999618530273,"wires":[]},{"id":"fdeb0a33.b80658","type":"link in","z":"aec22158.fe4e38","name":"user authentication - Custom login form Gadget","links":["cd8c7f3.154188"],"x":650,"y":259.99999618530273,"wires":[["f6cfd796.ef5268"]]},{"id":"f6cfd796.ef5268","type":"function","z":"aec22158.fe4e38","name":"Login user Form","func":"\n    \ngadgetsList =[{\n            \"gadgetId\":  \"349a509d-e145-33a6-7888-e8906915b223\",\n            \"gadgetName\":  \"Login form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": {\n      id: 'Login',\n      canceled: false, // false\n      submitButtonText: 'Login',\n    //   prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      title: 'Login',\n      steps: [\n        {\n          title: '',\n          subtitle: '',\n          fields: [\n              {\n              name: 'username',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Email address',\n                placeholder: 'John',\n                type: 'email', // default: text | button | checkbox | date | email | number | password | radio | submit\n                required: true // false by default\n              }\n            },\n              {\n              name: 'password',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Password',\n                type: 'password', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: true, // false by default\n                maxlength: 50\n              }\n            },\n        //  {\n        //               name: 'twostep',\n        //               htmlTag: 'input',  // button | select | textarea\n        //               options: {\n        //                 value: 'yes',\n        //                 label: 'twostep',\n        //                 type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n        //                 placeholder: '',\n        //                 required: true, // false by default\n        //                 maxlength: 50\n        //               }\n        //             },\n\n        ]}\n      ]\n    }},\n    // {\n    //         \"gadgetId\":  \"e54b2885-1a8e-3e58-0314-c2a388e2b8bc\",\n    //         \"gadgetName\": \"dashboard - involvement\",\n    //         \"gadgetType\": \"dynamic-modal\",\n    //         \"gadgetData\": {\"modalStatus\":'show'}}\n            ]\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":735,"y":259.99999618530273,"wires":[["ad59d764.8f538"]]},{"id":"cde0b321.b9d5c","type":"debug","z":"aec22158.fe4e38","name":"debug - User authentication Gagdet Post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1475,"y":399.99999618530273,"wires":[]},{"id":"ad59d764.8f538","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":830,"y":259.99999618530273,"wires":[]},{"id":"aed8c006.3bdf3","type":"function","z":"aec22158.fe4e38","name":"Route POST ","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  Menu , LoginForm,ResetPassword ;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n            Menu = msg;\n        }\n\n         else if (PostData.gadgetName === \"Login form\"){\n            LoginForm = msg;\n        }\n  \n     else if (PostData.gadgetName === \"reset password\"){\n            ResetPassword = msg;\n        }\n}\n\n\nreturn [ Menu, LoginForm, ResetPassword ];","outputs":3,"noerr":0,"x":1145,"y":299.99999618530273,"wires":[["a4311a51.a3b6d"],["2fafffb5.4b7cf8"],["e9d1128b.31c918"]],"outputLabels":["Menu","LoginForm","ResetPassword"]},{"id":"a4311a51.a3b6d","type":"link out","z":"aec22158.fe4e38","name":"","links":["8e48eec2.dcffb","47fe9e1a.f0bb9","f1a071ae.735c6","cd80bf04.26b1c","14418773.9dfa29"],"x":1270,"y":259.99999618530273,"wires":[]},{"id":"fa86daf5.84f458","type":"comment","z":"aec22158.fe4e38","name":"Menu","info":"","x":1350,"y":220,"wires":[]},{"id":"2fafffb5.4b7cf8","type":"function","z":"aec22158.fe4e38","name":"check if user exists","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('username')){\n    msg.RevotioData.PostData.gadgetData.formData.username = msg.RevotioData.PostData.gadgetData.formData.username.toLowerCase()\n}\n\naggregateObj = {\n       query: { query : [ { \n            \"$match\" : {\n                username : msg.RevotioData.PostData.gadgetData.formData.username\n            }\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"user_accounts\", \n                \"localField\" : \"_id\", \n                \"foreignField\" : \"user\", \n                \"as\" : \"UserAccountData\"\n            }\n        }, \n        \n        \n         {    $lookup: {\n            from: \"user_permissions\",\n            localField: \"_id\",\n            foreignField: \"user\",\n            as: \"AppUserPermissionInfo\"\n        }},\n                ],},\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'users',\n        operation:'aggregate',\n        }\n        \nmongodbTools.resolveAsync(aggregateObj, node, function(res){\n        msg.payload = res\n        node.send(msg) \n}) \n            \n            \n// msg.payload =  [\n       \n//         //   { \n//         //     \"$unwind\" : {\n//         //         \"path\" : \"$UserAccountData\", \n//         //         \"preserveNullAndEmptyArrays\" : false\n//         //     }\n//         // },    \n\n//     ]; \n\n\n// msg.operation = 'aggregate.toArray';\n\n\n\n\n\n// return msg;\n\n\n\n","outputs":1,"noerr":0,"x":1405,"y":319.99999618530273,"wires":[["d99c562c.a79378"]]},{"id":"d99c562c.a79378","type":"function","z":"aec22158.fe4e38","name":"Check if user exists","func":"var NoUser, User;\n// msg.RevotioData.userData = msg.payload[0];\n\n\n\nif (typeof msg.payload[0] === 'object' && msg.payload[0]._id){\n    \n    user_accounts = msg.payload[0].user_accounts\n    payload =   msg.payload[0]\n    \n    payload.user_accounts = user_accounts;\n    \n    msg.payload = payload\n     User = msg;\n}else{\n    NoUser = msg;\n}\n\nreturn [NoUser, User];","outputs":2,"noerr":0,"x":1705,"y":319.99999618530273,"wires":[["19945af0.650975"],["c260b609.a9b02"]],"outputLabels":["NoUser, ","User"]},{"id":"19945af0.650975","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].error =  {\n                                                                    msg: \"user does not exists\"\n                                                                    };\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"349a509d-e145-33a6-7888-e8906915b223\",\n            \"gadgetName\":  \"Login form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":1935,"y":299.99999618530273,"wires":[["237dc0d6.55ce58"]]},{"id":"237dc0d6.55ce58","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2050,"y":299.99999618530273,"wires":[]},{"id":"c260b609.a9b02","type":"function","z":"aec22158.fe4e38","name":"Check if password is correct","func":"// var crypto = require('crypto');\n\nvar invalid, valid;\nvar crypto = global.get('crypto');\nvar password = String(msg.RevotioData.PostData.gadgetData.formData.password)\n\nvar dhash = crypto.pbkdf2Sync(password, msg.payload.salt, 1000, 64, 'sha1').toString('hex');\n\nif(msg.payload.hash === dhash){\n\n   valid = msg;\n}\nelse{\n   invalid =  msg;\n}\n\n\n\nreturn [invalid, valid];","outputs":2,"noerr":0,"x":1955,"y":339.99999618530273,"wires":[["2f69da72.60f79e"],["115dbd4f.d83e53"]],"outputLabels":["invalid, ","valid"]},{"id":"2f69da72.60f79e","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\npayload = msg.payload;\n\nif (payload.hasOwnProperty(\"loginAttempts\") && isNaN(payload.loginAttempts) === false ){\n    payload.loginAttempts = payload.loginAttempts + 1\n} else {\n    payload.loginAttempts =  1\n}\n// payload.loginAttempts = payload.loginAttempts + 1\n\n\nif (payload.loginAttempts  < 4 ){\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[1].error =  {\n                                                                    msg: \"Incorrect password, you have \" + ( 3 -  payload.loginAttempts ) + \" attempts left\"\n                                                                    };\nmsg.query = [\n    {_id: new ObjectID(payload._id)},\n    {\"$set\": {loginAttempts: payload.loginAttempts},},\n    {upsert: true}\n    ]\n} else {\n  msg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].error =  {\n                                                                    msg: \"Incorrect password, this account is blocked, please contact your administrator\"\n                                                                    };\n  msg.query = [\n    {_id: new ObjectID(payload._id)},\n    {\"$set\": {blockAccount:true}},\n    {upsert: true}\n    ]\n}\n\n\n\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\": \"349a509d-e145-33a6-7888-e8906915b223\",\n            \"gadgetName\":  \"Login form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n    \n    \n\nreturn msg;","outputs":1,"noerr":0,"x":2195,"y":299.99999618530273,"wires":[["6b7d9d4c.4f7de4","ff257da5.7a778"]]},{"id":"6b7d9d4c.4f7de4","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2330,"y":299.99999618530273,"wires":[]},{"id":"e954696c.c9cc1","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":1985,"y":259.99999618530273,"wires":[]},{"id":"49ad2fe3.46de68","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":2430,"y":280,"wires":[]},{"id":"c8628eb6.6a32a8","type":"function","z":"aec22158.fe4e38","name":"Activate user Form","func":"msg.RevotioData.FlowData.Data.UserData = msg.payload\ngadgetsList =[{\n            \"gadgetId\":  \"2041a5fe-e808-6a23-da7b-5421d34c4bbf\",\n            \"gadgetName\":  \"activate account form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": {\n                  id: 'Login',\n                  canceled: true, // false\n                  submitButtonText: 'Submit',\n                  prevButtonText: 'Previous',\n                  nextButtonText: 'Next',\n                  showPrevious: true, //false\n                  title: 'Account activation',\n                  steps: [\n                    {\n                      title: '',\n                      subtitle: '',\n                      fields: [\n                          {\n                          name: 'first_name',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: msg.RevotioData.FlowData.Data.UserData.first_name,\n                            label: 'First name',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: true, // false by default\n                            editable: true\n                          }\n                        },\n                         {\n                          name: 'last_name',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: msg.RevotioData.FlowData.Data.UserData.last_name,\n                            label: 'Last name',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: true, // false by default\n                            editable: true\n                          }\n                        },\n                        {\n                          name: 'username',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: msg.RevotioData.FlowData.Data.UserData.username,\n                            label: 'User name',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: true, // false by default\n                            editable: false\n                          }\n                        },\n                        {\n                          name: 'passwordOne',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: '',\n                            label: 'Password',\n                            placeholder: '',\n                            type: 'password', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: true, // false by default\n                            // editable: false\n                          }\n                        }, \n                        {\n                          name: 'passwordTwo',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: '',\n                            label: 'Password again',\n                            placeholder: '',\n                            type: 'password', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: true, // false by default\n                            // editable: false\n                          }\n                        },\n                        {\n                          name: 'phone_number',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: '',\n                            label: 'Phone number',\n                            placeholder: '',\n                            type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            required: false, // false by default\n                            editable: true\n                          }\n                        },\n                        {\n                          name: 'email',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: msg.RevotioData.FlowData.Data.UserData.email,\n                            label: 'Email address',\n                            placeholder: '',\n                            type: 'email', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: false // false by default\n                          }\n                        },\n                        {\n                            name: 'avatar',\n                            label: 'Avatar',\n                            htmlTag: 'button',\n                            options: {\n                                type: 'upload',\n                                folder: global.get(\"DomainProperties.filesFolder\")+ \"users/\"+msg.RevotioData.FlowData.Data.UserData._id  ,\n                                classes: 'md-icon-button md-primary',\n                                preview: 'inside', // inside , outside\n                                previewPosition: 'right',\n                                icon: 'fas fa-upload',\n                                // previewUrl: global.get(\"DomainProperties.url\") + msg.RevotioData.FlowData.Data.UserData.avatar,\n                                editable: true\n                            }\n                        },\n                    ]}\n                  ]\n                }},\n            ]\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1745,"y":879.9999961853027,"wires":[["22600218.5f17ce"]]},{"id":"28fbb602.bac6a2","type":"link in","z":"aec22158.fe4e38","name":"user account activation form","links":["cb573448.22b968"],"x":910,"y":839.9999961853027,"wires":[["f3baa581.b4119"]]},{"id":"48979864.699d78","type":"function","z":"aec22158.fe4e38","name":"Create error msg","func":"msg.payload = \"Error - token generation issue\"\nreturn msg;","outputs":1,"noerr":0,"x":4525,"y":359.99999618530273,"wires":[["2d570acc.402cee"]]},{"id":"2d570acc.402cee","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":4630,"y":359.99999618530273,"wires":[]},{"id":"7d4e09a6.9a835","type":"function","z":"aec22158.fe4e38","name":"Check if BrowserId is present **TwoStep**","func":"var present, notPresent; \n\nif (msg.RevotioData.SessionData.BrowserId && typeof msg.RevotioData.SessionData.BrowserId === 'object'){\n    present = msg;\n} else {\n    notPresent = msg;\n}\n\nreturn [present, notPresent];","outputs":2,"noerr":0,"x":3855,"y":379.99999618530273,"wires":[["124f6b5b.e9925d"],["f2fc87a2.44bf68"]],"outputLabels":["present","notPresent"]},{"id":"5e088157.862158","type":"function","z":"aec22158.fe4e38","name":"Create error msg","func":"msg.payload = \"Error - token generation issue\"\nreturn msg;","outputs":1,"noerr":0,"x":4525,"y":439.99999618530273,"wires":[["4d2f5f49.74d588"]]},{"id":"4d2f5f49.74d588","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":4630,"y":439.99999618530273,"wires":[]},{"id":"a27da0ef.7fe0c8","type":"link in","z":"aec22158.fe4e38","name":"two step authentication - INIT","links":["f9c11c94.800ed","aa063ab.0c16648","839b0669.2a35d"],"x":150,"y":1439.9999961853027,"wires":[["ff593a75.391dc8","459f52fa.fc087c"]]},{"id":"e8c424c8.a91d3","type":"link in","z":"aec22158.fe4e38","name":"two step authentication - Action","links":["d366fdbc.eb5658","756461b6.504a38","e84a1d06.e6f258"],"x":1990,"y":1359.9999961853027,"wires":[["b7f1c28a.2b2b2","144a230b.917dfd"]]},{"id":"ff593a75.391dc8","type":"debug","z":"aec22158.fe4e38","name":"debug -two step authentication INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":345,"y":1399.9999961853027,"wires":[]},{"id":"b7f1c28a.2b2b2","type":"debug","z":"aec22158.fe4e38","name":"debug - INIT two step action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":2095,"y":1319.9999961853027,"wires":[]},{"id":"f2fc87a2.44bf68","type":"function","z":"aec22158.fe4e38","name":"Generate new token && prepair update query","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar OK, NOK;\n\nif (msg.token !== \"Error\"){\n// create new token string\ntokenString = {\n    hash : msg.payload.hash,\n    user_id :msg.RevotioData.session.UserData._id,\n    deviceId : msg.RevotioData.session.deviceId,\n    key:new ObjectID(),\n    type : \"unauthorized\"}\nmsg.RevotioData.session.token =  jsonwebtoken.sign(tokenString, global.get(\"SystemVars.secret\"))\n\n// msg.RevotioData.session.userData = msg.payload;\n\nmsg.payload = [{\n        deviceId: msg.RevotioData.session.deviceId\n        },\n        {\"$set\": {token: msg.RevotioData.session.token, UserData:  msg.RevotioData.session.UserData }},\n        {upsert:1}]\n\nmsg.operation = \"updateMany\"\nOK = msg;\n}else {\nNOK = msg;\n}\nreturn [OK, NOK];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":4225,"y":399.99999618530273,"wires":[["ab3ed11a.d5793"],["5e088157.862158"]],"outputLabels":["OK","NOK"]},{"id":"124f6b5b.e9925d","type":"function","z":"aec22158.fe4e38","name":"Generate new token && prepair update query","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar OK, NOK;\n\nif (msg.token !== \"Error\"){\n// create new token string\ntokenString = {\n    BrowserId : msg.RevotioData.SessionData.BrowserId,\n    hash : msg.payload.hash,\n    key:new ObjectID(),\n    user_id :msg.RevotioData.session.UserData._id,\n    deviceId : msg.RevotioData.session.deviceId,\n    type : \"authorized\"}\nmsg.RevotioData.session.token =  jsonwebtoken.sign(tokenString, global.get(\"SystemVars.secret\"))\n\n// msg.RevotioData.session.userData = msg.payload;\n\nmsg.payload = [{\n        deviceId: msg.RevotioData.session.deviceId\n        },\n        {\"$set\": {token: msg.RevotioData.session.token, UserData:  msg.RevotioData.session.UserData }},\n        {upsert:true}]\n\nmsg.operation = \"updateMany\"\nmsg.RevotioData.session.user_id = new ObjectID(msg.RevotioData.session.UserData._id)\nOK = msg;\n}else {\nNOK = msg;\n}\nreturn [OK, NOK];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":4225,"y":359.99999618530273,"wires":[["2df202d2.7f9f2e","2c8a0c62.86d694"],["48979864.699d78"]],"outputLabels":["OK","NOK"]},{"id":"ed52f54.32f3488","type":"function","z":"aec22158.fe4e38","name":"Activate user Form","func":"\n    \ngadgetsList =[{\n            \"gadgetId\":  \"2a6f80a3-790b-cbd6-01cd-ea9bbf222993\",\n            \"gadgetName\":  \"two step authentication form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": {\n                  id: 'Login',\n                  canceled: true, // false\n                  submitButtonText: 'Submit',\n                  prevButtonText: 'Previous',\n                  nextButtonText: 'Next',\n                  showPrevious: true, //false\n                  title: 'Two step authentication',\n                  steps: [\n                    {\n                      title: '',\n                      subtitle: '',\n                      fields: [\n                        {\n                          name: 'token',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:\"\" ,\n                            label: 'Enter token',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: true ,// false by default\n                           required: true\n                            \n                          }\n                        },\n                    ]}\n                  ]\n                }},\n            ]\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1125,"y":1279.9999961853027,"wires":[["7bd715c1.48678c"]]},{"id":"61a146dd.2d076","type":"link out","z":"aec22158.fe4e38","name":"TwoStepAuthentication INIT - out","links":["fadf22a9.e1d53","fff10a71.935b1","7335c039.8347a8"],"x":350,"y":1439.9999961853027,"wires":[]},{"id":"fadf22a9.e1d53","type":"link in","z":"aec22158.fe4e38","name":"TwoStepAuthentication form","links":["61a146dd.2d076"],"x":1030,"y":1279.9999961853027,"wires":[["ed52f54.32f3488"]]},{"id":"22600218.5f17ce","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1850,"y":879.9999961853027,"wires":[]},{"id":"7bd715c1.48678c","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1230,"y":1279.9999961853027,"wires":[]},{"id":"459f52fa.fc087c","type":"function","z":"aec22158.fe4e38","name":"generate first token","func":"var crypto = global.get('crypto');\n\nmsg.RevotioData.FlowData.Token = crypto.randomBytes(10).toString('hex');\nmsg.RevotioData.FlowData.TokenAttempts = 0\nreturn msg;","outputs":1,"noerr":0,"x":245,"y":1439.9999961853027,"wires":[["61a146dd.2d076"]]},{"id":"fff10a71.935b1","type":"link in","z":"aec22158.fe4e38","name":"TwoStepAuthentication Email trigger","links":["61a146dd.2d076"],"x":1030,"y":1319.9999961853027,"wires":[["4d7aeb07.6c37fc"]]},{"id":"144a230b.917dfd","type":"function","z":"aec22158.fe4e38","name":"Route POST ","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  Menu , LoginForm;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n            Menu = msg;\n        }\n\n         else if (PostData.gadgetName === \"two step authentication form\"){\n            LoginForm = msg;\n        }\n  \n}\n\n\nreturn [ Menu, LoginForm ];","outputs":2,"noerr":0,"x":2085,"y":1359.9999961853027,"wires":[["3c2ea246.1ea72e"],["fc29b32.594fc5"]],"outputLabels":["Menu","LoginForm"]},{"id":"3c2ea246.1ea72e","type":"link out","z":"aec22158.fe4e38","name":"","links":["8e48eec2.dcffb","47fe9e1a.f0bb9","f1a071ae.735c6","cd80bf04.26b1c","14418773.9dfa29"],"x":2210,"y":1339.9999961853027,"wires":[]},{"id":"aa56ecbf.9881d","type":"comment","z":"aec22158.fe4e38","name":"Menu","info":"","x":2265,"y":1339.9999961853027,"wires":[]},{"id":"fc29b32.594fc5","type":"function","z":"aec22158.fe4e38","name":"Form post check","func":"var validToken, invalidToken, TokenAttemptsExceeded  ;\n\n// update token attempts\n\nmsg.RevotioData.FlowData.TokenAttempts = msg.RevotioData.FlowData.TokenAttempts + 1;\n\n\n\nif (msg.RevotioData.PostData.gadgetData.formData.token === msg.RevotioData.FlowData.Token ) {\n    validToken = msg;\n} else {\n    \n    if (msg.RevotioData.FlowData.TokenAttempts > 3){\n        TokenAttemptsExceeded = msg;\n    } else {\n        invalidToken = msg;\n    }\n    \n}\nreturn [validToken, invalidToken, TokenAttemptsExceeded ];","outputs":3,"noerr":0,"x":2285,"y":1399.9999961853027,"wires":[["2730383.453ef48"],["7ca740d.fc825c"],[]],"outputLabels":["validToken, ","invalidToken","TokenAttemptsExceeded"]},{"id":"2730383.453ef48","type":"function","z":"aec22158.fe4e38","name":"Generate new token && prepair redirect","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// create new token string\ntokenString = {\n    hash : msg.RevotioData.session.UserData.hash,\n    user_id : msg.RevotioData.session.UserData._id,\n    deviceId : msg.RevotioData.session.deviceId,\n    key:new ObjectID(),\n    type : \"authorized\"}\nmsg.RevotioData.session.token =  jsonwebtoken.sign(tokenString, global.get(\"SystemVars.secret\"))\n\n msg.payload = {\n        setToken : true,\n    };\n\n    if (msg.RevotioData.UserData.UserAccountData[0].user_type && msg.RevotioData.UserData.UserAccountData[0].user_type === \"Client_User\" ){\n        msg.payload.Page =  global.get(\"DomainProperties.ClientDefaultPage\");\n        msg.payload.RevotioData = {organization_id : new ObjectID(msg.RevotioData.UserData.organization_id)}\n    }else {\n        msg.payload.Page =  global.get(\"DomainProperties.PNODefaultPage\");\n    }\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2615,"y":1339.9999961853027,"wires":[["4a4fa343.c95144"]]},{"id":"7ca740d.fc825c","type":"function","z":"aec22158.fe4e38","name":"Prepair error response && gen new token","func":"var crypto = global.get('crypto');\n\n    \n    \nmsg.RevotioData.FlowData.Token = crypto.randomBytes(10).toString('hex');\n\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].error =  {\n                                                                    msg: \"Incorrect token\"\n                                                                    };\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].options.value =    msg.RevotioData.FlowData.Token ;\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"f858890a-1caf-8900-8279-7add8451c3c7\",\n            \"gadgetName\":  \"Login form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n    \n    \n    \n\nreturn msg;","outputs":1,"noerr":0,"x":2615,"y":1419.9999961853027,"wires":[["4f069602.986148","ef7031df.f8f2b"]]},{"id":"4f069602.986148","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2870,"y":1439.9999961853027,"wires":[]},{"id":"3d53ecc3.d23364","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":2925,"y":1439.9999961853027,"wires":[]},{"id":"42b3aebc.e049d","type":"function","z":"aec22158.fe4e38","name":"Check if password has correct syntax","func":"// var crypto = require('crypto');\n\nvar invalid, valid;\nvar crypto = global.get('crypto');\n\nvar strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\n\n// msg.test = strongRegex.test(msg.RevotioData.PostData.gadgetData.formData.password)\n\n\nif(String(strongRegex.test(msg.RevotioData.PostData.gadgetData.formData.password))){\n\n  valid = msg;\n}\nelse{\n  invalid =  msg;\n}\n\nreturn [invalid, valid];","outputs":2,"noerr":0,"x":3225,"y":899.9999961853027,"wires":[["3314d296.d3a246"],["5a96f6f0.517e4"]],"outputLabels":["invalid, ","valid"]},{"id":"a6610d0a.93f8e","type":"function","z":"aec22158.fe4e38","name":"Route POST ","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  Menu , Form;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n            Menu = msg;\n        }\n\n         else if (PostData.gadgetName === \"activate account form\"){\n            Form = msg;\n        }\n  \n}\n\n\nreturn [ Menu, Form ];","outputs":2,"noerr":0,"x":2525,"y":859.9999961853027,"wires":[["c17c74ab.5523f8"],["30a67121.5f2ade"]],"outputLabels":["Menu","Form"]},{"id":"c17c74ab.5523f8","type":"link out","z":"aec22158.fe4e38","name":"","links":["8e48eec2.dcffb","47fe9e1a.f0bb9","f1a071ae.735c6","cd80bf04.26b1c","14418773.9dfa29"],"x":2710,"y":819.9999961853027,"wires":[]},{"id":"a42d5ed4.a7045","type":"comment","z":"aec22158.fe4e38","name":"Menu","info":"","x":2773.333297729492,"y":818.3333034515381,"wires":[]},{"id":"5a96f6f0.517e4","type":"function","z":"aec22158.fe4e38","name":"finalize user account","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar crypto = global.get('crypto');\n\n// var atararchange, NoAvatarChange\nvar hash = crypto.pbkdf2Sync(String(msg.RevotioData.PostData.gadgetData.formData.passwordOne), msg.RevotioData.FlowData.Data.UserData.salt, 1000, 64, 'sha1').toString('hex');\n\nmsg.RevotioData.FlowData.Data.UserData.hash = hash\n\n\nObj = {\n    hash : hash,\n    active : true,\n    activationToken: \"\",\n    first_name: msg.RevotioData.PostData.gadgetData.formData.first_name,\n    last_name: msg.RevotioData.PostData.gadgetData.formData.last_name,\n}\n\nif ( msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"avatar\")){\n  Obj.avatar=  msg.RevotioData.PostData.gadgetData.formData.avatar.path  \n}\n\n\n\nmsg.payload = [{_id: new ObjectID(msg.RevotioData.FlowData.Data.UserData._id)},\n               {\"$set\" : Obj},\n               {upsert:true}\n               \n               ];\nmsg.operation = \"update\"\n\n\nmsg.RevotioData.FlowData.UserObj = Obj\n\nreturn msg;","outputs":1,"noerr":0,"x":3535,"y":919.9999961853027,"wires":[["2329b1df.ff9cde"]],"outputLabels":["invalid, "]},{"id":"3314d296.d3a246","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[3].error =  {\n                                                                    msg: \"Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character (@$!%*?&)\"\n                                                                    };\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"2041a5fe-e808-6a23-da7b-5421d34c4bbf\",\n            \"gadgetName\":  \"activate account form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":3495,"y":879.9999961853027,"wires":[["fb679d51.f23358"]]},{"id":"fb679d51.f23358","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":3630,"y":879.9999961853027,"wires":[]},{"id":"87f911f9.4f5a7","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":3685,"y":879.9999961853027,"wires":[]},{"id":"c8100bdd.6522b8","type":"comment","z":"aec22158.fe4e38","name":"Reset password","info":"","x":95,"y":1979.9999961853027,"wires":[]},{"id":"eb91fac0.295fd8","type":"comment","z":"aec22158.fe4e38","name":"Reset password gagdet actions","info":"","x":1945,"y":2039.9999961853027,"wires":[]},{"id":"52faac69.11c514","type":"comment","z":"aec22158.fe4e38","name":"Reset password","info":"","x":95,"y":2039.9999961853027,"wires":[]},{"id":"480f6e06.8ebe5","type":"comment","z":"aec22158.fe4e38","nameinfo":"","x":2445,"y":2009.9999961853027,"wires":[]},{"id":"201c5cde.9b6f44","type":"comment","z":"aec22158.fe4e38","nameinfo":"","x":2425,"y":2439.9999961853027,"wires":[]},{"id":"d431a2e4.6d283","type":"link in","z":"aec22158.fe4e38","name":"reset password - INIT","links":["8a3da463.b1e34","7ac9b7b9.35adf8","8b9609e7.cfa4c8"],"x":110,"y":2239.9999961853027,"wires":[["249a8713.6784","5b61eb52.bcc75c"]]},{"id":"249a8713.6784","type":"debug","z":"aec22158.fe4e38","name":"debug - Reset password INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":245,"y":2199.9999961853027,"wires":[]},{"id":"25e60b9d.f35b14","type":"function","z":"aec22158.fe4e38","name":"Get username form","func":"if (msg.RevotioData.FlowData.user){\n    \n   userName = {\n                          name: 'username',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:msg.payload.username ,\n                            label: 'Email address',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: true ,// false by default\n                           required: true,\n                          disabled : true\n                            \n                          }\n                        };\n    \n} else {\n    userName = {\n                          name: 'username',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:\"\",\n                            label: 'User name',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            // editable: true ,// false by default\n                           required: true,\n                        //   disabled : true\n                            \n                          }\n                        };\n}\n    \ngadgetsList =[{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"username\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": {\n                  id: 'Login',\n                  canceled: false, // false\n                  submitButtonText: 'Submit',\n                  prevButtonText: 'Previous',\n                  nextButtonText: 'Next',\n                  showPrevious: true, //false\n                  title: 'Step 1 password reset',\n                  steps: [\n                    {\n                      title: '',\n                      subtitle: '',\n                      fields: [\n                         userName,\n                    ]}\n                  ]\n                }},\n            ]\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":2260,"wires":[["6b8fb4fa.663c8c"]]},{"id":"6b8fb4fa.663c8c","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":775,"y":2260,"wires":[]},{"id":"5d5b80cb.b815c","type":"function","z":"aec22158.fe4e38","name":"Reset password BTN","func":"// Admin buttons\n\nmsg.payload = {\n    gadgetsList : [{            \n       \"gadgetId\": \"56c483a5-735e-9f55-c7a6-4a92bd67ebcd\",\n            \"gadgetName\":\"reset password\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-success\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Reset password\"},\n                // \"gadgetData\":\"create_project\"\n       \n   }]\n}\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":755,"y":339.99999618530273,"wires":[["ba29073e.8adb"]]},{"id":"ac130025.b78d4","type":"link in","z":"aec22158.fe4e38","name":"user authentication - Custom login form Gadget","links":["cd8c7f3.154188"],"x":650,"y":339.99999618530273,"wires":[["5d5b80cb.b815c"]]},{"id":"ba29073e.8adb","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":870,"y":339.99999618530273,"wires":[]},{"id":"e9d1128b.31c918","type":"function","z":"aec22158.fe4e38","name":"Redirect to reset password","func":"// Prepair redirect to chosen project\n\n           msg.payload = { \n               Page:'reset password', \n               RevotioData:{\n                   \n               } \n            };\n        \n\n\nreturn msg;","outputs":1,"noerr":0,"x":1435,"y":359.99999618530273,"wires":[["aee578b.d1a4a88"]]},{"id":"e298dd8d.cbd328","type":"link in","z":"aec22158.fe4e38","name":"reset password - Action","links":["d366fdbc.eb5658","a95f9492.bf8098","756461b6.504a38","b0dce74d.09db9","32198700.e5b5b8"],"x":1830,"y":2159.9999961853027,"wires":[["d9bcd251.2ea468","4aa2d425.db2074"]]},{"id":"d9bcd251.2ea468","type":"debug","z":"aec22158.fe4e38","name":"debug - Reset password action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":2000,"y":2081.9999961853027,"wires":[]},{"id":"2e14c717.416758","type":"function","z":"aec22158.fe4e38","name":"Check if password has correct syntax","func":"// var crypto = require('crypto');\n\nvar invalid, valid;\nvar crypto = global.get('crypto');\n// Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\nvar strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\n// msg.test = strongRegex.test(msg.RevotioData.PostData.gadgetData.formData.passwordOne)\n\nif(String(strongRegex.test(msg.RevotioData.PostData.gadgetData.formData.passwordOne))){\n\n\n  valid = msg;\n}\nelse{\n  invalid =  msg;\n}\n\nreturn [invalid, valid];","outputs":2,"noerr":0,"x":2565,"y":2319.9999961853027,"wires":[["d43d088f.c70298"],["86f7d2bb.4375f8"]],"outputLabels":["invalid, ","valid"]},{"id":"4aa2d425.db2074","type":"function","z":"aec22158.fe4e38","name":"Route POST ","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  Menu, UsernameForm,  PasswordForm , CancelReset;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n            Menu = msg;\n        }\n\n         else if (PostData.gadgetName ===  \"Reset password form\"){\n            PasswordForm = msg;\n        }\n         else if (PostData.gadgetName ===   \"username\"){\n            UsernameForm = msg;\n        }\n        else if (PostData.gadgetType ===   \"CancelReset\"){\n            CancelReset = msg;\n        }\n  \n}\n\n\nreturn [ Menu, UsernameForm,  PasswordForm, CancelReset];","outputs":4,"noerr":0,"x":1930,"y":2157.9999961853027,"wires":[["7bc8a353.17418c"],["b3153c28.f9eb78"],["166d34e4.0920ab"],["ba5ecdcd.97009"]],"outputLabels":["Menu","UsernameForm","PasswordForm","CancelReset"]},{"id":"86f7d2bb.4375f8","type":"function","z":"aec22158.fe4e38","name":"finalize user account","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar hash = crypto.pbkdf2Sync(String(msg.RevotioData.PostData.gadgetData.formData.passwordOne), msg.RevotioData.FlowData.Data.UserData.salt, 1000, 64, 'sha1').toString('hex');\n\nmsg.payload.hash = hash\n               \n               \n// update    \n    updateObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.Data.UserData._id)}, \n                            update :  {\"$set\" : {\n                                                   hash : hash,\n                                                   resetPassword : false,\n                                                  resetToken: \"\"\n                                               }},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.result = res\n                     msg.payload = {\n                                    Page :  global.get(\"DomainProperties.NonAuthDefaultPage\"),\n                                    // setToken : true,\n                                    RevotioData: {\n                                    }\n                                };\n                    node.send(msg) \n            })  \n            \n","outputs":1,"noerr":0,"x":2855,"y":2359.9999961853027,"wires":[["74c995c2.07940c"]],"outputLabels":["invalid, "]},{"id":"d43d088f.c70298","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[1].error =  {\n                                                                    msg: \"Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character (@$!%*?&)\"\n                                                                    };\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[2].error =  {\n                                                                    msg: \"Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character (@$!%*?&)\"\n                                                                    };\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"Reset password form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":2855,"y":2279.9999961853027,"wires":[["98c425c5.4b0328"]]},{"id":"98c425c5.4b0328","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2970,"y":2279.9999961853027,"wires":[]},{"id":"e585444.02f5db8","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":3025,"y":2279.9999961853027,"wires":[]},{"id":"7bc8a353.17418c","type":"link out","z":"aec22158.fe4e38","name":"","links":["8e48eec2.dcffb","47fe9e1a.f0bb9","f1a071ae.735c6","cd80bf04.26b1c","14418773.9dfa29"],"x":2130,"y":2099.9999961853027,"wires":[]},{"id":"e91706b2.256508","type":"comment","z":"aec22158.fe4e38","name":"Menu","info":"","x":2193.333297729492,"y":2098.333303451538,"wires":[]},{"id":"166d34e4.0920ab","type":"function","z":"aec22158.fe4e38","name":"Check if passwords match","func":"var invalid, valid;\n\nif(String(msg.RevotioData.PostData.gadgetData.formData.passwordOne) === String(msg.RevotioData.PostData.gadgetData.formData.passwordTwo)  ){\n\n  valid = msg;\n}\nelse{\n  invalid =  msg;\n}\n\nreturn [invalid, valid];","outputs":2,"noerr":0,"x":2215,"y":2259.9999961853027,"wires":[["343505e.c6a70fa"],["2e14c717.416758"]],"outputLabels":["invalid, ","valid"]},{"id":"343505e.c6a70fa","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[1].error =  {\n                                                                    msg: \"Passwords dont match\"\n                                                                    };\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[2].error =  {\n                                                                    msg: \"Passwords dont match\"\n                                                                    };\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"Reset password form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":2515,"y":2219.9999961853027,"wires":[["7d81d17c.aaecb8"]]},{"id":"7d81d17c.aaecb8","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2630,"y":2219.9999961853027,"wires":[]},{"id":"46b860cf.93db28","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":2685,"y":2219.9999961853027,"wires":[]},{"id":"85f2e522.8b14d","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].error =  {\n                                                                    msg: \"User does not exist\"\n                                                                    };\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"username\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":2860,"y":2120,"wires":[["a9e514e2.43afa8"]]},{"id":"a9e514e2.43afa8","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2975,"y":2120,"wires":[]},{"id":"ef4632a4.8742c8","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":2425,"y":2199.9999961853027,"wires":[]},{"id":"b3153c28.f9eb78","type":"function","z":"aec22158.fe4e38","name":"check if user exists","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('username')){\n    msg.RevotioData.PostData.gadgetData.formData.username = msg.RevotioData.PostData.gadgetData.formData.username.toLowerCase()\n}\n\n// aggregate\n\n\n            aggregateObj = {\n                    query : { query : [ { \n                                        \"$match\" : {\n                                            username : msg.RevotioData.PostData.gadgetData.formData.username\n                                        }\n                                    }, \n                                    { \n                                        \"$lookup\" : {\n                                            \"from\" : \"user_accounts\", \n                                            \"localField\" : \"_id\", \n                                            \"foreignField\" : \"user\", \n                                            \"as\" : \"user_accounts\"\n                                        }\n                                    }, \n                                    { \n                                        \"$unwind\" : {\n                                            \"path\" : \"$user_accounts\", \n                                            \"preserveNullAndEmptyArrays\" : false\n                                        }\n                                    },\n                         \n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n            \n            \n       \n\n// return msg;","outputs":1,"noerr":0,"x":2305,"y":2139.9999961853027,"wires":[["2f1a3e82.d43b12"]]},{"id":"2f1a3e82.d43b12","type":"function","z":"aec22158.fe4e38","name":"Check if user exists","func":"var NoUser, User;\n// msg.RevotioData.userData = msg.payload[0];\n\n\n\nif (typeof msg.payload[0] === 'object' && msg.payload[0]._id){\n    \n    user_accounts = msg.payload[0].user_accounts\n    payload =   msg.payload[0]\n    \n    payload.user_accounts = user_accounts;\n    \n    msg.payload = payload\n    \n    msg.RevotioData.FlowData.Data.UserData = payload\n     User = msg;\n}else{\n    NoUser = msg;\n}\n\nreturn [NoUser, User];","outputs":2,"noerr":0,"x":2605,"y":2139.9999961853027,"wires":[["85f2e522.8b14d"],["3311b64e.a40e82"]],"outputLabels":["NoUser, ","User"]},{"id":"e54d16bc.54e4f","type":"function","z":"aec22158.fe4e38","name":"check if account is active === true","func":"var accountActive,accountInactive, LinkExpired;\n\nif (typeof msg.payload !== 'object' || msg.payload === null){\n    LinkExpired = msg;\n} else {\n    if (msg.payload.active === true){\n    accountActive = msg;\n    } else {\n         accountInactive = msg;\n    }\n}\n\n\nreturn [accountActive,accountInactive, LinkExpired];","outputs":3,"noerr":0,"x":1435,"y":859.9999961853027,"wires":[["a98198f0.0c996"],["c8628eb6.6a32a8"],["494991a.a3d73f"]],"outputLabels":["accountActive","accountInactive","LinkExpired"]},{"id":"a98198f0.0c996","type":"function","z":"aec22158.fe4e38","name":"redirect user","func":"\n msg.payload = {\n            Page :  global.get(\"DomainProperties.NonAuthDefaultPage\"),\n            RevotioData: {\n            }\n        };\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1725,"y":839.9999961853027,"wires":[["c374e685.14751"]]},{"id":"af88346b.2dfd","type":"function","z":"aec22158.fe4e38","name":"Reset password form Form","func":"\n    \ngadgetsList =[{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"Reset password form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": {\n                  id: 'Login',\n                  canceled: false, // false\n                  submitButtonText: 'Submit',\n                  prevButtonText: 'Previous',\n                  nextButtonText: 'Next',\n                  showPrevious: false, //false\n                  title: 'Reset password',\n                  steps: [\n                    {\n                      title: '',\n                      subtitle: '',\n                      fields: [\n                          {\n                          name: 'username',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:msg.RevotioData.FlowData.Data.UserData.username ,\n                            label: 'Email address',\n                            placeholder: '',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: false ,// false by default\n                           required: true,\n                           disabled:true\n                            \n                          }\n                        },\n                        {\n                          name: 'passwordOne',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:\"\" ,\n                            label: 'New password',\n                            placeholder: '',\n                            type: 'password', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: true ,// false by default\n                           required: true\n                            \n                          }\n                        },\n                        {\n                          name: 'passwordTwo',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value:\"\" ,\n                            label: 'New password (again)',\n                            placeholder: '',\n                            type: 'password', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            editable: true ,// false by default\n                           required: true\n                            \n                          }\n                        },\n                    ]}\n                  ]\n                }},\n            ]\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1100,"y":2200,"wires":[["881d9107.af00e"]]},{"id":"881d9107.af00e","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1235,"y":2200,"wires":[]},{"id":"3311b64e.a40e82","type":"function","z":"aec22158.fe4e38","name":"Generate and update appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.RevotioData.FlowData.Data.UserData.resetToken = crypto.randomBytes(25).toString('hex');\n\n// update    \n    updateObj = {\n                    query : {\n                            query : { _id : new ObjectID(msg.RevotioData.FlowData.Data.UserData._id)}, \n                            update :  { \"$set\" :{resetToken : msg.RevotioData.FlowData.Data.UserData.resetToken}},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.result = res\n                    node.send(msg) \n            })  \n            ","outputs":1,"noerr":0,"x":2890,"y":2160,"wires":[["16731a52.126fe6","78e9ce03.4f11c"]]},{"id":"5b61eb52.bcc75c","type":"function","z":"aec22158.fe4e38","name":"check if resetToken is present","func":"var present, notPresent; \n\nif (msg.RevotioData.FlowData.resetToken){\n    present = msg;\n} else {\n    notPresent = msg;\n}\nreturn [present, notPresent];","outputs":2,"noerr":0,"x":245,"y":2239.9999961853027,"wires":[["d554894d.135478","249a8713.6784"],["fbfb1b97.df21f8"]],"outputLabels":["present","notPresent"]},{"id":"8f35e986.f06c78","type":"function","z":"aec22158.fe4e38","name":"Check if user is found and if resetToken is valid","func":"var ValidToken, InvalidToken;\n\nif (typeof msg.payload === 'object' || msg.payload === null){\n    msg.RevotioData.FlowData.Data = {UserData : msg.payload}\n    ValidToken = msg;\n} else {\n    InvalidToken = msg;\n}\n\nreturn [ValidToken, InvalidToken];","outputs":2,"noerr":0,"x":760,"y":2220,"wires":[["af88346b.2dfd","71332273.c1870c"],["d97eeec5.bf9518"]],"outputLabels":["ValidToken, ","InvalidToken"]},{"id":"494991a.a3d73f","type":"function","z":"aec22158.fe4e38","name":"prepair redirect to NonAuthDefaultPage","func":"msg.payload  = {\n    Page :global.get(\"DomainProperties.NonAuthDefaultPage\"),\n}\nreturn msg;","outputs":1,"noerr":0,"x":1815,"y":919.9999961853027,"wires":[["fa60834f.7ab0f"]]},{"id":"d97eeec5.bf9518","type":"function","z":"aec22158.fe4e38","name":"prepair redirect to NonAuthDefaultPage","func":"msg.payload  = {\n    Page :global.get(\"DomainProperties.NonAuthDefaultPage\"),\n}\nreturn msg;","outputs":1,"noerr":0,"x":1140,"y":2240,"wires":[["5e3c68e9.35887"]]},{"id":"1ec340b3.482ec7","type":"link in","z":"e5822137.be45d","name":"OrganizationOverview - INIT FLOW","links":["d609b87f.7e619","6171b7c5.44b0b","b5fb4d7e.2e87f8","b55357f7.301158"],"x":975,"y":840,"wires":[["a38dd37b.1a2f8"]]},{"id":"1804645c.8cc514","type":"function","z":"e5822137.be45d","name":"Route userAction","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar EditOrganization, FormAction, MenuAction,  CreateApplicationTrigger , RemoveOrganizationTrigger, RemoveOrganizationActions, CreateItemTrigger, CreateUserTrigger,Redirect, breadcrumbs;\n\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"){\n    \n    // if ( msg.RevotioData.GadgetPost.gadgetName === \"Add organization to project\"){\n    if (PostData.gadgetName === \"Remove organization btn\"){\n        RemoveOrganizationTrigger = msg;\n    } else if ( PostData.gadgetName === \"Edit organization\"){\n        \n        EditOrganization = msg;\n    } else if (PostData.gadgetName === \"Cancel remove organization btn\" || PostData.gadgetName === \"Conform remove organization btn\"){\n        RemoveOrganizationActions = msg;\n    } \n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n}  else if (PostData.gadgetType=== \"data-table\" ){\n    if (msg.RevotioData.PostData.gadgetName === \"apps DT\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreateApplicationTrigger = msg;\n    } else {\n        msg.payload = { \n                Page : \"application overview\",\n                RevotioData: {\n                    application_id :new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                    organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id)\n                }            \n            };\n\n         Redirect = msg;\n    }} else if (msg.RevotioData.PostData.gadgetName === \"users DT\"){\n            if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n                CreateUserTrigger = msg;\n            } else {\n                msg.payload = { \n                            Page : \"users global\",\n                            RevotioData: {\n                               appUserId : new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                                organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id)\n                            }            \n                        };\n                Redirect = msg;\n            }\n    } else {\n            if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n                CreateItemTrigger = msg;\n            } else {\n                msg.payload = { \n                        Page : \"item overview\",\n                        RevotioData: {\n                            item_id :new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                            organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id)\n                        }            \n                    };\n                                    Redirect = msg;\n            }\n    }\n}  else if ( PostData.gadgetType === \"revotio-breadcrumbs\"){ \n    breadcrumbs = msg;\n}\n\nreturn [EditOrganization, FormAction, MenuAction,  CreateApplicationTrigger , RemoveOrganizationTrigger, RemoveOrganizationActions, CreateItemTrigger, CreateUserTrigger,Redirect, breadcrumbs]\n","outputs":10,"noerr":0,"x":3410,"y":860,"wires":[["b648d226.19fb8"],["93a415ec.687618"],["695fb9e3.b1aad8"],["1686362a.5bd45a"],["f675dbae.2e60b8"],["9f1f3867.1f1958"],["9e8e3a62.9ad95"],["c40ec1db.2c50d"],["d4e822a6.d28f38"],["3697fd3b.4de2b2"]],"outputLabels":["EditOrganization","FormAction","MenuAction","CreateApplicationTrigger","RemoveOrganizationTrigger","RemoveOrganizationActions","CreateItemTrigger","CreateUserTrigger","Redirect","breadcrumbs"]},{"id":"ed7fc388.352d28","type":"link out","z":"e5822137.be45d","name":"Trigger gadgets","links":["326e03fa.b881cc","447c8b0f.66f08c","56bf5158.fb4898","768de0c.d609f2","7a3f690f.580ea8","883c7cee.db8a6","9e2dc14e.78fe38","ba4ff609.18c878","bb7d751c.1c7ac8","dcbbc1c8.dfd168","f32152b8.b14bf8","bbeef07d.cea3f8","2d5db789.b218c","97fe6585.9a1a6","574da7a4.73af18","25f6c989.bf5976"],"x":1495,"y":840,"wires":[]},{"id":"7b811de.dca6864","type":"comment","z":"e5822137.be45d","name":"INIT FLOW","info":"","x":960,"y":800,"wires":[]},{"id":"4aac01eb.aa4fb","type":"function","z":"e5822137.be45d","name":"Remove organization btn","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"7536d205-807d-3372-f9e0-943c242486db\",\n            \"gadgetName\":\"Remove organization btn\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Remove organization\" },\n                \"gadgetData\":{}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2010,"y":600,"wires":[["44b32d37.175e74"]]},{"id":"768de0c.d609f2","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1895,"y":600,"wires":[["4aac01eb.aa4fb"]]},{"id":"b648d226.19fb8","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Organization\",\n        FormActionType : \"Edit\",\n        FormData: msg.RevotioData.FlowData.Data.OrganizationData,\n        organization_id : msg.RevotioData.FlowData.organization_id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":560,"wires":[["450c8292.150aa4"]]},{"id":"93a415ec.687618","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":"     msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n msg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":600,"wires":[["450c8292.150aa4"]]},{"id":"f26d3a89.b883e","type":"function","z":"e5822137.be45d","name":"Create applications DT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nvar columnStyles = [] ;\nvar headerStyles = [] ;\n\n\nvar tableColumnData  =  {\n         columnHead : [\n                  {\n                    \"title\": \"Name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                ],\n          \"columnOptions\": {\n            \"columnStyle\": {\n            //   \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\nvar tableRowData = [];\n_.each(msg.payload,function(appItem, appItemIndex){\n      obj = {\n           \"rowData\" :[\n                 {\n                           \"data\": appItem._id,\n                           \"type\": \"string\",\n                           \"headKey\":\"_id\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                            \n                           {\n                           \"data\": appItem.name,\n                           \"type\": \"string\",\n                           \"headKey\": \"Name\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           \n                       ],\n                   \"rowOptions\": {\n                   //   \"state\": \"warning\",\n                     \"globalClick\": true,\n                     \"style\": {\n                    //   \"width\": \"20%\"\n                     }\n                   },\n                //   \"rowSourceData\":orgItem\n           }\n\n\n      \n\n    tableRowData.push(obj);\n});\n\ntableButton = [\n          {\n            \"buttonData\":\n              {\n                \"title\": \"Create\",\n                // \"allowSearch\": false,\n                // \"searchPlaceholder\": \"Search\",\n                \"design\":\n                  {\n                   \"file\": \"\",\n                    \"icon\":global.get(\"icons.fas.create\") ,\n                    // \"width\": \"\",\n                    size:\"small\",\n                    \"embossed\": true,\n                    \"linebox\": true,\n                    \"gradient\": false,\n                    // \"color\": \"green\",\n                    // padding : \"10px\"\n                  },\n              \n                  \"disabled\": false,\n                // \"type\": \"success\",\n                 action: 'create',\n                //   clickType: \"row\"\n\n              },\n            \"buttonOptions\":\n              {\n                \"dataType\": \"single\",\n                \"displayType\": \"text\",\n                \"selectionType\": \"global\"\n              }\n          }\n      ]\n\n\n\n\n\nif (tableRowData.length > 10 ){\n    paged = 10;\n} else {\n    paged = tableRowData.length;\n}\n\n//////  Button permissions ************************\n\n\nmsg.payload = { \n    user_id : msg.RevotioData.FlowData.user_id,\n    gadgetsList: \n    [ {\n                 \"gadgetId\": 'c31185f7-9031-d821-2eab-f6ec9a8427fa',\n            \"gadgetName\": \"apps DT\",\n            \"gadgetType\": \"data-table\",\n            \n    \"gadgetOptions\": {\n      \"allowSearch\": true,\n      \"maxItems\": paged,\n      \"striped\": true,\n      \"export\": true\n    },\n    \"gadgetData\": {\n      \"tableColumnData\": tableColumnData,\n      \"tableTitle\": \"Applications\",\n      \"tableRowData\": tableRowData ,\n      \"tableButton\": tableButton,\n    //   \"tableOptions\": {\n    //     \"mainOption\": \"global\"\n    //   }\n    }\n  }]}\n\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":2420,"y":800,"wires":[["5f1a385c.edb14"]]},{"id":"57d0471c.00c988","type":"function","z":"e5822137.be45d","name":"get All applications","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n// Get UserData\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [\n                                        { \n                                            \"$match\" : {\n                                                \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                                             \n                                            }\n                                        }, \n                                       \n                                    ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n            \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":2030,"y":800,"wires":[["f26d3a89.b883e"]]},{"id":"9e2dc14e.78fe38","type":"link in","z":"e5822137.be45d","name":"Org overview - DT & Tabs & Card","links":["ed7fc388.352d28","b47978b8.e72108"],"x":1895,"y":800,"wires":[["57d0471c.00c988"]]},{"id":"a84bcead.243018","type":"function","z":"e5822137.be45d","name":"Erid organization Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"5343ce4a-7abd-6f7f-2b01-93e745d69713\",\n            \"gadgetName\":\"Edit organization\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-warning\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Edit organization\"},\n                \"gadgetData\":\"\"\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2000,"y":640,"wires":[["f94c825a.6795a"]]},{"id":"dcbbc1c8.dfd168","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1895,"y":640,"wires":[["a84bcead.243018"]]},{"id":"1686362a.5bd45a","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Application\",\n        FormActionType : \"Create\",\n        FormData:{\n            organization_id: msg.RevotioData.FlowData.organization_id\n        },\n        organization_id: msg.RevotioData.FlowData.organization_id\n        \n        \n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":680,"wires":[["98fd19a9.c086"]]},{"id":"30f56518.695ab2","type":"link in","z":"e5822137.be45d","name":"OrganizationOverview - GadgetAction","links":["7a97faf2.da1704","988606f9.ca8a78","4e5ae1ce.872488"],"x":3275,"y":860,"wires":[["1804645c.8cc514","c2d79198.64d03"]]},{"id":"3e328437.3790a4","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Project\",\n        FormActionType : \"Create\",\n        organization_id : msg.RevotioData.FlowData.organization_id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":720,"wires":[["ee736c73.bbaa2"]]},{"id":"f675dbae.2e60b8","type":"function","z":"e5822137.be45d","name":"Remove organization modal","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove organization modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'show'}}];\n\n\n    \ngadgetsList.push({            \n       \"gadgetId\": \"db2252fd-9e1a-44ae-b00c-47ac1fdf4c11\",\n            \"gadgetName\":\"Conform remove organization btn\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Yes\"},//, remove \" + msg.RevotioData.FlowData.Data.OrganizationData.name},\n                \"gadgetData\":{action : \"remove\", _id: msg.RevotioData.FlowData.Data.OrganizationData._id}\n       \n   })\n\ngadgetsList.push({            \n       \"gadgetId\": \"47975d37-c5e4-bd28-d0b6-e09d2276bb44\",\n            \"gadgetName\":\"Cancel remove organization btn\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Cancel\"},\n                \"gadgetData\":{action : \"cancel\"}\n       \n   })\n   \n   \ndata =  [{\nlabel: \"You are about to delete \" + msg.RevotioData.FlowData.Data.OrganizationData.name + \", are you sure?\", \nvalue: \"\",//+ \" \" +  + \" - GO team \" + msg.RevotioData.FlowData.Data.MembershipsData.TeamData[0].name\noptions: {\n'text-align': 'center', // left | center | right\n'font-size': 25,\n'font-weight': 700,\n'font-family': 'roboto',\n'color': '#003580',\n'value-color': '#003580',\n// 'label-margin-bottom': 20,\n}\n}]\n\n\n\ngadgetsList.push({\n\"gadgetId\": \"1062d5ff-d470-c77c-46a8-68fe55cf6153\",\n\"gadgetName\":\"Remove modal conformation text\",\ngadgetType: 'dynamic-text-area',\ngadgetData: {\ndata: data,\noptions: {\n'display': 'flex', // block | inline-block | flex\n'field-display': 'flex', // block | inline-block | flex\n'text-align': 'center', // left | center | right\n'font-size': 12,\n'font-weight': 400,\n'font-family': 'arial',\n'color': '#ccc',\n'label-font-size': 16,\n'label-font-weight': 400,\n'label-font-family': 'arial',\n'label-color': 'red',\n'label-margin-top': 0,\n'label-margin-right': 10,\n'label-margin-bottom': 10,\n'label-margin-left': 0,\n'label-padding-top': 0,\n'label-padding-right': 0,\n'label-padding-bottom': 0,\n'label-padding-left': 0,\n'value-font-size': 14,\n'value-font-weight': 400,\n'value-family': 'verdana',\n'value-color': '#18a689',\n'value-margin-top': 0,\n'value-margin-right': 0,\n'value-margin-bottom': 0,\n'value-margin-left': 0,\n'value-padding-top': 0,\n'value-padding-right': 0,\n'value-padding-bottom': 0,\n'value-padding-left': 0,\n'label-position': 'left', // top | left | right | bottom\n'margin-top': 0,\n'margin-right': 20,\n'margin-bottom': 0,\n'margin-left': 0,\n'number-columns': 1\n}}});\n\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3840,"y":760,"wires":[["9a43c1cc.c7e6a8"]]},{"id":"9f1f3867.1f1958","type":"function","z":"e5822137.be45d","name":"Route based on action","func":"var Remove, Cancel;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n\nif (PostData.gadgetData.action === 'remove'){\n    msg.organization_id = msg.RevotioData.PostData.gadgetData._id\n    Remove = msg;\n} else if (PostData.gadgetData.action === 'cancel'){\n    Cancel = msg;\n}\nreturn [Remove, Cancel];","outputs":"2","noerr":0,"x":3820,"y":880,"wires":[["d002a220.42ff4","dffb3629.a3865"],["d002a220.42ff4"]],"outputLabels":["Remove","Cancel"]},{"id":"d002a220.42ff4","type":"function","z":"e5822137.be45d","name":"Hide Remove project modal","func":"\nvar gadgetsList =[ {\n                  \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove organization modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'hide'}}];\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4080,"y":900,"wires":[["5b59ec64.44982c"]]},{"id":"5b59ec64.44982c","type":"link out","z":"e5822137.be45d","name":"Push gagdets to frontend","links":["ed29e924.d84018","b84e6833.04603","643ec9be.afe5c8","9fa3437a.32fc28","2ef38e9f.9b1652","ff374233.426928","35994986.0c2f46","714d3f49.3cb3c8","77f50e6a.257ba8","e07ac5c9.329c2","e80a4ee8.bc6cc8","91b0d636.30c0a","8f8af900.2d5568","636af534.63fd94","67fafb7c.d55fdc","ceb7cb22.46d6d","62354ab5.8af784","192a7e40.ba47a2","634060be.86e828","42ee5df0.7ac9b4","1f46b80e.c3e75","e9345d01.5c8fb","8378522a.50d3a","8b0389ee.3adf1","6c564fdb.5ca2f8","19d38825.da0488","50b6680f.064ea","dfd0a08e.b83258"],"x":4215,"y":900,"wires":[]},{"id":"7bb21709.53314","type":"function","z":"e5822137.be45d","name":"Redirect user to organizations global","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.payload = { \n    Page : \"organizations global\",\n    RevotioData: {\n        // organization_id:new ObjectID(msg.RevotioData.GadgetPost.gadgetData.data.organization_id)\n    }            \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":4530,"y":860,"wires":[["cf53d7bc.4c3468"]]},{"id":"3a480753.582f88","type":"comment","z":"e5822137.be45d","nameinfo":"","x":2430,"y":520,"wires":[]},{"id":"f1379788.32919","type":"comment","z":"e5822137.be45d","name":"Organization overview","info":"","x":160,"y":580,"wires":[]},{"id":"50135ae2.848ac4","type":"comment","z":"e5822137.be45d","name":"Organization overview gadgets","info":"","x":1430,"y":540,"wires":[]},{"id":"1d1fb4eb.9e1563","type":"comment","z":"e5822137.be45d","name":"Organization overview gagdet actions","info":"","x":3290,"y":740,"wires":[]},{"id":"6bba7999.73091","type":"comment","z":"e5822137.be45d","name":"organizations global","info":"","x":90,"y":240,"wires":[]},{"id":"4c98a046.12853","type":"comment","z":"e5822137.be45d","name":"Organization global gadgets","info":"","x":1420,"y":240,"wires":[]},{"id":"ad43cd91.431cc8","type":"comment","z":"e5822137.be45d","name":"Organization global gagdet actions","info":"","x":3280,"y":240,"wires":[]},{"id":"2593799.dd12e06","type":"comment","z":"e5822137.be45d","nameinfo":"","x":2430,"y":200,"wires":[]},{"id":"90f055d0.958ee8","type":"link in","z":"e5822137.be45d","name":"organization global - INIT FLOW","links":["5d57bad4.0cdff4","9a050e9a.e90288","3b858951.2c8d86","febed477.696398","e6c8f68c.3a8fd"],"x":735,"y":420,"wires":[["2cc71536.88996a","c7460c54.ee33b"]]},{"id":"5ff89a19.327a54","type":"function","z":"e5822137.be45d","name":"Route userAction","func":"var CreateOrganizationTrigger, FormAction, OpenOrganization, MenuAction ,RevotioBreadCrumbs\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"&& PostData.gadgetName === \"create organization\"){\n    CreateOrganizationTrigger = msg;\n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"data-table\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreateOrganizationTrigger = msg;\n    } else {\n         OpenOrganization = msg;\n    }\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n} else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n    RevotioBreadCrumbs  = msg;\n}\n\n\n\nreturn [CreateOrganizationTrigger, FormAction, OpenOrganization, MenuAction, RevotioBreadCrumbs];","outputs":"5","noerr":0,"x":3270,"y":340,"wires":[["42ba8494.e47aec"],["62533240.e8b54c"],["4d3d3f17.7ceb2"],["b4232b59.fc3c9"],["860d2caf.36873"]],"outputLabels":["CreateOrganizationTrigger","FormAction","OpenOrganization","MenuAction","RevotioBreadCrumbs"]},{"id":"a3d15c2e.a18008","type":"debug","z":"e5822137.be45d","name":"Organiozation Global Gadget post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3320,"y":280,"wires":[]},{"id":"2cc71536.88996a","type":"link out","z":"e5822137.be45d","name":"Trigger gadgets","links":["1198ab94.12521c","76bbdec4.14e998","58327abd.8edce4","a04c82ab.77936","e714ad41.62fe18","a00aba6e.69bb58","26c29dda.6daf62","cd9f1d1b.bf34"],"x":1115,"y":420,"wires":[]},{"id":"73fab343.93d92c","type":"comment","z":"e5822137.be45d","name":"INIT FLOW","info":"","x":700,"y":380,"wires":[]},{"id":"a04c82ab.77936","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["2cc71536.88996a"],"x":1375,"y":280,"wires":[["41fcbe10.63615"]]},{"id":"c7460c54.ee33b","type":"debug","z":"e5822137.be45d","name":"Organiozation Global INIT post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":910,"y":380,"wires":[]},{"id":"41fcbe10.63615","type":"function","z":"e5822137.be45d","name":"Get org records","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n\nvar OrgIds = [];\nindex = -1\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index ){\n    // if (Item.type_id === global.get(\"MasterOrganizationData._id\")){\n  if (String(Item.type_id) === String(global.get(\"MasterOrganizationData._id\")) ){\n//   if (new ObjectID(Item.type_id) === new ObjectID(global.get(\"MasterOrganizationData._id\")) ){\n       index =  Index\n    }\n})\nif (index > -1 || msg.RevotioData.session.UserData.UserAccountData.user_type === \"Admin_Users\" ){\n//   match = {\"_id\": {\"$ne\": new ObjectID(global.get(\"MasterOrganizationData._id\"))}};\n    // msg.operation = \"find.toArray\";\n    \n    msg.payload = { parent_id: { $exists: false} , _id: {\"$ne\": new ObjectID(global.get(\"MasterOrganizationData._id\"))}};\n    msg.operation = \"find.toArray\";\n} else {\n    // get organization ID's\n    \n    var ids = [];\n    \n    _.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index){\n        if (Item.type === \"organization\"){\n            ids.push(Item.type_id)\n        }\n        msg.payload = { parent_id: { $exists: false} , _id: {\"$in\": ids}};\n        msg.operation = \"find.toArray\";\n    })\n    \n}\n\n// find  \nfindObj = {\n                    query : {\n                            query : msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n\n\n\n// return msg;","outputs":1,"noerr":0,"x":1460,"y":280,"wires":[["2505354a.38e0ca","a7691843.e08928","e1288258.b5e2a"]]},{"id":"4d3d3f17.7ceb2","type":"function","z":"e5822137.be45d","name":"Open org.","func":"msg.payload = {\n    Page :   'organization overview',\n    RevotioData: {\n        organization_id : msg.RevotioData.PostData.gadgetData.data._id\n    }\n};\nreturn msg;","outputs":1,"noerr":0,"x":3640,"y":360,"wires":[["6f35ce9c.ca2728"]]},{"id":"42ba8494.e47aec","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":"    msg.RevotioData.FlowData.Form = {\n        FormType : \"Organization\",\n        FormActionType : \"Create\",\n        // Type : \"Create\",\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3620,"y":260,"wires":[["229e849a.2b771c"]]},{"id":"62533240.e8b54c","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":"// if (msg.RevotioData.FlowData.Form.hasOnwFormActionType)\n    // msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\nmsg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":3620,"y":320,"wires":[["229e849a.2b771c"]]},{"id":"a7691843.e08928","type":"function","z":"e5822137.be45d","name":"Count Organizations Card","func":"\n\n\nvar cardData = { \"cardType\":\"success\", \"cardTitle\":\"Organizations : \" , cardContentValue:  msg.payload.length,\"cardBottonValue\":\"\" } ;\n\n// Create GadgetList message\nmsg.payload = {gadgetsList:[{\n\n            \"gadgetId\":  \"448ba930-0610-ddc3-f8d7-bd9050e475aa\",\n            \"gadgetName\": \"Count Organizations\",\n            \"gadgetType\": \"data-card\",\n            \"gadgetData\": cardData\n            \n                     \n}]};\n\nreturn msg;","outputs":1,"noerr":0,"x":1690,"y":280,"wires":[["4ae71785.1c5fc"]]},{"id":"2505354a.38e0ca","type":"function","z":"e5822137.be45d","name":"Create Organizations DT","func":"var _ = global.get('underscore');\nvar lodash = global.get('lodash');\nvar columnStyles = [] ;\nvar headerStyles = [] ;\n\nvar tableColumnData  =  {\n         columnHead : [\n                  {\n                    \"title\": \"Name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                            {\n                    \"title\": \"Legal entity\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Legal entity\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                  {\n                    \"title\": \"Type\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Type\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                //   {\n                //     \"title\": \"Multiple entity\",\n                //     \"allowSort\": true,\n                //     \"headKey\": \"Multiple entity\",\n                //     \"hidden\": false,\n                //     \"editable\": false\n                //   }\n                ],\n          \"columnOptions\": {\n            \"columnStyle\": {\n              \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\n\n// var columns = [\n//                   {\n//                     \"title\": \"Name\",\n//                     \"allowSort\": true,\n//                     \"headKey\": \"name\",\n//                     \"hidden\": false,\n//                     \"editable\": false\n//                   },\n//                             {\n//                     \"title\": \"Legal entity\",\n//                     \"allowSort\": true,\n//                     \"headKey\": \"legal_entity\",\n//                     \"hidden\": false,\n//                     \"editable\": false\n//                   },\n//                   {\n//                     \"title\": \"Type\",\n//                     \"allowSort\": true,\n//                     \"headKey\": \"type\",\n//                     \"hidden\": false,\n//                     \"editable\": false\n//                   },\n//                   {\n//                     \"title\": \"Multiple entity\",\n//                     \"allowSort\": true,\n//                     \"headKey\": \"multiple_entity\",\n//                     \"hidden\": false,\n//                     \"editable\": false\n//                   },\n//                   {\n//                     \"title\": \"_id\",\n//                     \"allowSort\": true,\n//                     \"headKey\": \"_id\",\n//                     \"hidden\": true,\n//                     \"editable\": false\n//                   }\n                  \n//                 ]\n// commen buttons\n// var buttons = [ 'export'];  \nvar tableRowData = [];\n_.each(lodash.orderBy(msg.payload, [\"name\"],[\"asc\"]),function(orgItem, orgItemIndex){\n\n    obj = {\n            \"rowData\":[\n                  {\n                  \n              \n                            \"data\":  orgItem.name,\n                             \"type\": \"string\",\n                           \n                            \"headKey\":\"Name\",\n                            \"hidden\": false,\n                            \"editable\": false\n                          },\n                            {\n                            \"data\":  orgItem.legal_entity,\n                            \"type\": \"string\",\n                            \"headKey\": \"Legal entity\",\n                            \"hidden\": false,\n                            \"editable\": false\n                          },\n                            {\n                            \"data\": orgItem.type,\n                            \"type\": \"string\",\n                            \"headKey\":\"Type\",  \n                            \"hidden\": false,\n                            \"editable\": false\n                          },\n                            {\n                            \"data\": orgItem.multiple_entity,\n                             \"type\": \"string\",\n                            \"headKey\": \"Multiple entity\", \n                            \"hidden\": false,\n                            \"editable\": false\n                          },\n                          {\n                            \"data\":  orgItem._id,\n                            \"type\": \"string\",\n                            \"headKey\": \"_id\",\n                            \"hidden\": false,\n                            \"editable\": false\n                          },\n                        ],\n                    \"rowOptions\": {\n                    //   \"state\": \"warning\",\n                      \"globalClick\": true,\n                      \"style\": {\n                        \"width\": \"20%\"\n                      }\n                    },\n                    \"rowSourceData\":orgItem\n            }\n    \n    tableRowData.push(obj);\n})\n\ntableButton = [\n    {\n       \"buttonData\":\n          {\n           \"title\": \"Create\",\n            \"design\": {\n               \"file\": \"\",\n                \"icon\":global.get(\"icons.fas.create\") ,\n                // \"width\": \"\",\n                size :\"small\",\n                \"embossed\": true,\n                \"linebox\": true,\n                \"gradient\": false,\n                // \"color\": \"green\",\n                // padding : \"10px\"\n              },\n          \n              \"disabled\": false,\n            // \"type\": \"success\",\n                action: 'create',\n\n          },\n        \"buttonOptions\": {\n            \"dataType\": \"single\",\n            \"displayType\": \"text\",\n            \"selectionType\": \"global\"\n          }\n         }\n      \n      ]\n\n\n \nmsg.payload = {\n     gadgetsList :[ {\n        \"gadgetId\": \"5682828f-6f71-730f-6058-a1bd588add37\",\n        \"gadgetName\": \"Organizations DT\",\n        \"gadgetType\": \"data-table\",\n            \n    \"gadgetOptions\": {\n      \"allowSearch\": true,\n      \"maxItems\": tableRowData.length,\n      \"striped\": true,\n      \"export\": true\n    },\n    \"gadgetData\": {\n      \"tableColumnData\": tableColumnData,\n      \"tableTitle\": \"Organizations\",\n      \"tableRowData\": tableRowData ,\n      \"tableButton\": tableButton,\n      \"tableOptions\": {\n        \"mainOption\": \"global\"\n      }\n    }\n  }]}\n  \n  \n// msg.payload = {\n//      gadgetsList : [global.get(\"functions.dataTableObject\")(GadgetObject, columns, msg.payload)] \n\n//  } \nreturn msg;\n","outputs":1,"noerr":0,"x":1690,"y":240,"wires":[["5002c494.80c03c"]]},{"id":"91850e71.061e1","type":"link in","z":"e5822137.be45d","name":"organization global - GadgetAction","links":["ca484bde.d6efc8","b636d429.212c48","c44b4bde.0df218"],"x":2935,"y":320,"wires":[["a3d15c2e.a18008","5ff89a19.327a54"]]},{"id":"4ae71785.1c5fc","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","ded62554.44e988"],"x":1815,"y":280,"wires":[]},{"id":"5002c494.80c03c","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","ded62554.44e988"],"x":1835,"y":240,"wires":[]},{"id":"b7978fa4.f54cb","type":"function","z":"e5822137.be45d","name":"create organization btn","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"092dc49e-14ce-a387-f97b-e65d303faf86\",\n            \"gadgetName\":\"create organization\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\n                //  url:   \"http://localhost:1881/#/pageBuilder/5bacdd9fb9bf1c120bef1088/page/5bc987181e040202e7b74589\",\n                //  target: \"_blank\",\n                \"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Create new organization\"},\n                \"gadgetData\":{}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1500,"y":360,"wires":[["fb03028f.7d0f4"]]},{"id":"fb03028f.7d0f4","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","ded62554.44e988"],"x":1835,"y":360,"wires":[]},{"id":"76bbdec4.14e998","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["2cc71536.88996a"],"x":1375,"y":360,"wires":[["b7978fa4.f54cb"]]},{"id":"44b32d37.175e74","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2135,"y":600,"wires":[]},{"id":"f94c825a.6795a","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2115,"y":640,"wires":[]},{"id":"5f1a385c.edb14","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2515,"y":800,"wires":[]},{"id":"c2d79198.64d03","type":"debug","z":"e5822137.be45d","name":"Organization overview ACTION","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3450,"y":1020,"wires":[]},{"id":"9a43c1cc.c7e6a8","type":"link out","z":"e5822137.be45d","name":"","links":["f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":3975,"y":760,"wires":[]},{"id":"f1af0e7a.eb9998","type":"comment","z":"e5822137.be45d","name":"Push gadget to frontend","info":"","x":4090,"y":760,"wires":[]},{"id":"62867a86.49ad5c","type":"function","z":"aec22158.fe4e38","name":"Prepair redirect","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar PNO , Client, update;\n\nmsg.RevotioData.session.UserData =  msg.payload;\n\n// set login Date info\n\nmsg.RevotioData.session.UserData.previousLogin = new Date(msg.RevotioData.session.UserData.login)\nmsg.RevotioData.session.UserData.login = new Date()\n\nupdate = msg;\nmsg.RevotioData.session.UserData.type = \"NonPNOAdmin\"\n\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index){\n    \n    if (Item.type === \"organization\"){\n        \n        if (String(Item.type_id) === String(global.get(\"MasterOrganizationData._id\")) && Item.permission === 0){\n            msg.RevotioData.session.UserData.type = \"PNOAdmin\"\n        }\n        \n        \n    }\n    \n})\n\n\nif (msg.RevotioData.FlowData.hasOwnProperty(\"Page\") === false){\n    // check if user is a PNO user\n    \n    if (msg.RevotioData.session.UserData.UserAccountData.user_type === \"Admin_Users\"){\n    msg.RevotioData.FlowData.Page = global.get(\"DomainProperties.PNODefaultPage\")\n    msg.payload = {\n                Page  :   msg.RevotioData.FlowData.Page\n    }\nPNO = msg;\n    } else {\n        \n\n        \n Client = msg\n        \n    }\n   \n}\n\n\nreturn [PNO , Client, update];","outputs":3,"noerr":0,"x":2715,"y":379.99999618530273,"wires":[["7d4e09a6.9a835"],["1bf31fd6.55c3a8"],["7951c57e.e01884"]],"outputLabels":["PNO","Client","update"]},{"id":"1bf31fd6.55c3a8","type":"function","z":"aec22158.fe4e38","name":"Get participants && projects","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nUserOrgPermissionObj = lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo,{type: \"organization\"} );\n\n\n\n// find  \nfindObj = {\n                    query : {\n                            query :{organization_id:new ObjectID(UserOrgPermissionObj.type_id), contact_person_organization:new ObjectID(msg.RevotioData.session.UserData._id) }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n   \n                msg.RevotioData.session.UserData.OrgRepresentativeProjects = res\n\n                // find  \n                    findObj = {\n                                        query : {\n                                                query :{ project_leader : new ObjectID(msg.RevotioData.session.UserData._id)} , \n                                                },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'projects',\n                                        operation:'find',\n                                        }\n                    \n                                        mongodbTools.resolveAsync(findObj, node, function(res){\n                               \n                                            // msg.RevotioData.session.UserData.OrgRepresentativeProjects = res\n                            \n                                            msg.RevotioData.session.UserData.ProjectLeaderProjects= res;\n                            \n                            \n                                                node.send(msg) \n                                        })\n            })   \n\n// return msg;\n\n","outputs":1,"noerr":0,"x":3060,"y":440,"wires":[["7ab33dc3.9bebac"]]},{"id":"7ab33dc3.9bebac","type":"function","z":"aec22158.fe4e38","name":"Permission check ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nOrgObj = lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo, {type: \"organization\"})\n\nif (msg.RevotioData.session.UserData.ProjectLeaderProjects.length === 0 && msg.RevotioData.session.UserData.OrgRepresentativeProjects.length === 0){\n    \n            msg.RevotioData.FlowData.Page = global.get(\"DomainProperties.PNODefaultPage\")\n            msg.RevotioData.OrganzationId = OrgObj.type_id;\n            msg.RevotioData.FlowData.organization_id = OrgObj.type_id;\n        \n       \n} else {\n        \n                msg.RevotioData.FlowData.Page = global.get(\"DomainProperties.ClientDefaultPage\")\n                msg.RevotioData.OrganzationId = OrgObj.type_id;\n                msg.RevotioData.FlowData.organization_id = OrgObj.type_id;\n         \n         \n\n}\n\n            msg.payload = {\n                    Page                 :   msg.RevotioData.FlowData.Page,\n                    RevotioData         : {\n                        organization_id : OrgObj.type_id\n                    }\n                }\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3290,"y":440,"wires":[["7d4e09a6.9a835"]]},{"id":"c347c0c5.666da","type":"comment","z":"e5822137.be45d","name":"Form","info":"","x":4220,"y":738.3333740234375,"wires":[]},{"id":"755db93f.00f23","type":"comment","z":"e5822137.be45d","name":"Redirect","info":"","x":4760,"y":860,"wires":[]},{"id":"761cc371.278c24","type":"comment","z":"e5822137.be45d","name":"Delete all organization data","info":"","x":3830,"y":820,"wires":[]},{"id":"f3b12a83.315e2","type":"debug","z":"e5822137.be45d","name":"ORG OVERVIEW INIT - 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1630,"y":960,"wires":[]},{"id":"a9baa8cb.9376a","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":460,"y":1460,"wires":[["925431a7.28eb6"]]},{"id":"c79589ab.01e198","type":"debug","z":"d8703926.e2eca","name":"Item payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":690,"y":1460,"wires":[]},{"id":"925431a7.28eb6","type":"subflow:45759581.11da84","z":"d8703926.e2eca","name":"","x":570,"y":1460,"wires":[["c79589ab.01e198"]]},{"id":"bf863fcb.3b803","type":"subflow:45759581.11da84","z":"e5822137.be45d","name":"","env":[],"x":1430,"y":400,"wires":[["c36f0764.45994"]]},{"id":"58327abd.8edce4","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["2cc71536.88996a"],"x":1375,"y":400,"wires":[["bf863fcb.3b803"]]},{"id":"b4a3b5aa.487f6","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","ded62554.44e988"],"x":1695,"y":400,"wires":[]},{"id":"e1288258.b5e2a","type":"function","z":"e5822137.be45d","name":"Breadcrumb organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\nOrgKeysOptions = [];\n\n_.each(msg.payload, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.organization_id)){\n        selected = true\n    } else {\n        selected = false\n    }\n    \n    OrgKeysOptions.push({\n              \"title\": Item.name,\n              selected:selected,\n              \"design\": {\n                \"icon\": global.get(\"icons.fas.organization\")\n              },\n              \"action\": {\n                Page : 'organization overview',\n                organization_id: Item._id,\n                icon: global.get(\"icons.fas.organization\"),\n                key: \"organization\",\n                value: Item.name \n              }\n            })\n})\n\n\nvar data = [\n    {\n        \"buttonData\": {\n                      \"title\": \"Organizations\",\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": global.get(\"icons.fas.organization\")\n                      },\n                      subButton:[{\n                            icons : global.get(\"icons.fas.create\"),\n                            action : {\n                                                FormType : \"Organization\",\n                                                FormActionType : \"Create\",\n                                                // FormData: msg.RevotioData.FlowData.Data.OrganizationData,\n                                                // organization_id : msg.RevotioData.FlowData.Data.OrganizationData._id\n                                            },\n                            color : \"green\" ,\n                            tooltip: \"Create a new organization\"\n                      }],\n                      \"options\":OrgKeysOptions,\n                    //   \"action\": {}\n                    },\n        \"buttonOptions\": {\n          \"dataType\": \"multiple\",\n          \"displayType\": \"text\"\n        }\n      }]\n\n    \nmsg.payload = {\n    gadgetsList: [{\n                \"gadgetId\": \"593e0f9b-f4f2-d2e3-fc56-2aa3eb9ccfc6\",\n              \"gadgetName\": \"scope breadcrumb\",\n              \"gadgetType\": \"revotio-breadcrumbs\",\n                gadgetData: data,\n                gadgetOptions: {\n                    disabled:false,\n                    separatorIcon: 'fas fa-angle-right',\n                }\n              }]}\n\nreturn msg;","outputs":1,"noerr":0,"x":1700,"y":320,"wires":[["f10a8582.df74b"]]},{"id":"f10a8582.df74b","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","ded62554.44e988"],"x":1835,"y":320,"wires":[]},{"id":"9e8e3a62.9ad95","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Item\",\n        FormActionType : \"Create\",\n        FormData:{\n            organization_id : msg.RevotioData.FlowData.organization_id\n        },\n        organization_id : msg.RevotioData.FlowData.organization_id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3820,"y":940,"wires":[["914f157a.8ca06"]]},{"id":"3bfadf51.f71d78","type":"link out","z":"d8703926.e2eca","name":"","links":["1a3f70d.1f1650f","12ee5fc7.99b8a8"],"x":4950,"y":3733.333646774292,"wires":[]},{"id":"4add76ad.0678","type":"function","z":"d8703926.e2eca","name":"Change msg.RevotioData.FlowData.FileSystemData.currentFolder","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nmsg.RevotioData.FlowData.FileSystemData.currentFolder = msg.RevotioData.PostData.gadgetData.Item.absolutePath.replace(msg.RevotioData.FlowData.FileSystemData.rootFolder, \"\")\n\nreturn msg;","outputs":1,"noerr":0,"x":4615,"y":3693.333646774292,"wires":[["3bfadf51.f71d78"]]},{"id":"c4bd527f.ba6138","type":"function","z":"d8703926.e2eca","name":"Set Form Data","func":"msg.RevotioData.FlowData.Form.FormActionType = \"Post\" ;\nreturn msg;","outputs":1,"noerr":0,"x":4055,"y":3973.333646774292,"wires":[["cecc87aa.56b3c"]]},{"id":"d29ab08b.41594","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":1975,"y":2200,"wires":[]},{"id":"80d70a50.7c48","type":"function","z":"d8703926.e2eca","name":"Route POST","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  menu, Calendar,RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect;\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n           menu = msg;\n        } else if (PostData.gadgetType=== \"revotio-calendar\"){\n            Calendar = msg;\n        }else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n            RevotioBreadCrumbs  = msg;\n        }else if (PostData.gadgetType=== \"custom-form\"){\n            \n            if (PostData.gadgetData.formObj.FormType  ===  \"event\"){\n                CalFormAction = msg;\n            } else {\n                FormAction = msg;\n            }\n        }\n        else if (PostData.gadgetType=== \"revotio-tabs-select\"){\n            tabsSelect  = msg;\n        }\n        \n\n\n        \n}\n\nreturn [menu, Calendar, RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect];\n\n\n\n","outputs":6,"noerr":0,"x":3656.0712890625,"y":2313.64306640625,"wires":[["d5ba2f48.579028"],["2e3cf020.efcfe8"],[],["2e6313f.ad394ec"],["7b09e2e4.e3fdec"],[]],"outputLabels":["menu","Calendar","RevotioBreadCrumbs, ","FormAction","CalFormAction","tabsSelect"]},{"id":"2e6313f.ad394ec","type":"function","z":"d8703926.e2eca","name":"Set Form Data","func":"msg.RevotioData.FlowData.Form.FormActionType = \"Post\" ;\nreturn msg;","outputs":1,"noerr":0,"x":3960,"y":2460,"wires":[["27cb5131.da737e"]]},{"id":"39d2ce0a.3d6772","type":"link out","z":"d8703926.e2eca","name":"cal. INIT link out","links":["cc658dba.c7f2d8","a6ca170f.e472a","6b81272a.6df69","4c8f6fa4.cda7e","4fb614c6.08c224"],"x":1395,"y":2360,"wires":[]},{"id":"cc658dba.c7f2d8","type":"link in","z":"d8703926.e2eca","name":"Calendar gadget INIT","links":["39d2ce0a.3d6772","c3fd4dbc.f34178","5731bf65.0fc278","464211e5.f2bdc"],"x":1606.666561126709,"y":2194.166479110718,"wires":[["95a045df.03b328"]]},{"id":"95a045df.03b328","type":"function","z":"d8703926.e2eca","name":"Get events && generate calendar payload","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nvar query = {entity : msg.RevotioData.FlowData.Data.gadgetOptions.entity,entityId : new ObjectID(msg.RevotioData.FlowData.Data.gadgetOptions.entityId)  }\n\n// if (msg.RevotioData.FlowData.level === \"organization\"){\n//     query = {organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n//             removeEvent : false \n//     }\n    \n// }\n\nquery.start = {\"$lte\": new Date(msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange)}\nquery.end = {\"$gte\": new Date(msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange)}\n\n// find \n    findObj = {\n            query : {\n                    query :query, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'events',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            list = []\n\n            _.each(res, function(Item, Index ){\n                \n                \n                data = {\n                    start : Item.start,\n                    end : Item.end,\n                    _id : Item._id,\n                    title: Item.title,\n                    notes: Item.notes,\n                }\n                \n                if (Item.hasOwnProperty(\"notification_type\") &&Item.notification_type === true ){\n                    data[\"Notification\"] = \"Active\"\n                    data[\"Time entity\"] = Item.notification_entity\n                    data[\"Time value\"] = Item.notification_number\n                }\n                \n                list.push(data)\n                \n                \n            })\n\n            msg.payload  = {gadgetsList : [{\n\n            \"gadgetId\":  \"9bc225ba-05b5-2d29-5f83-5c2c50195a0e\",\n            \"gadgetName\": \"calendar\",\n            \"gadgetType\": \"revotio-calendar\",\n            GagdetOptions : msg.RevotioData.FlowData.Data.gadgetOptions,\n            \"gadgetData\": {\n                events: list\n                }\n                }]};\n            node.send(msg) \n    })   \n\n","outputs":1,"noerr":0,"x":1771.666561126709,"y":2194.166479110718,"wires":[["d29ab08b.41594"]]},{"id":"2e3cf020.efcfe8","type":"function","z":"d8703926.e2eca","name":"process Calendar post","func":"var newState, editState, deleteState, changeView, onDropOnResize, getEvents\n\nif (msg.RevotioData.PostData.gadgetData.state === \"new\"){\n    newState = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"changeView\"){\n    changeView = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"onDrop\" || msg.RevotioData.PostData.gadgetData.state === \"onResize\"  ){\n    onDropOnResize = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"getEvents\"){\n    getEvents = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"edit\"){\n    editState = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"remove\"){\n    deleteState = msg;\n} \n\n\n\n\n\nreturn [newState,editState, deleteState, changeView, onDropOnResize , getEvents];","outputs":6,"noerr":0,"x":4000,"y":2260,"wires":[["4924fb05.bd25ac"],["b5f2b5e.11758c8"],["d7952017.dea3e"],["29545707.f5fab"],["775ab6b1.b9664"],["576eff5e.77e66"]],"outputLabels":["newState","editState","deleteState","changeView","onDropOnResize","getEvents"]},{"id":"4924fb05.bd25ac","type":"function","z":"d8703926.e2eca","name":"create new form","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n// nowTime = moment().hours()+1\n\n// if ( moment().hours() ===  23){\n    \n//     if (moment().minutes()  < 30 ){\n//     nowTime = moment().hours() + \":30\"\n//     nextTime = \"00:30\"\n//     } else {\n//         nowTime = \"00:00\"\n//         nextTime = \"01:00\"\n//     }\n   \n// } else {\n    \n//     if (moment().minutes()  < 30 ){\n//     nowTime = moment().hours() + \":30\"\n//      nextTime = (moment().hours() + 1)  +  \":30\"\n//     } else {\n//         nowTime = (moment().hours() + 1) + \":00\"\n//         nextTime = (moment().hours() + 2)  +  \":00\"\n//     }\n// } \n// endDateValue = msg.RevotioData.PostData.gadgetData.calendarEvent.end\n\nmsg.form = {\n      id: 'new-event',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      FormType : \"event\",\n      title: 'Create event',\n      steps: [\n        {\n          title: '',\n          subtitle: '',\n          fields: [\n              {\n              name: 'title',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Title',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                required: true // false by default\n              }\n            },\n            {\n              name: 'allDay',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'All day event?',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 255\n              }\n            },\n            {\n                  \"name\": \"startDate\",\n                  \"htmlTag\": \"input\",\n                  \"options\": {\n                    \"value\":msg.RevotioData.PostData.gadgetData.calendarEvent.start,\n                    \"label\": \"Start date\",\n                    \"type\": \"datetime\",\n                    \"placeholder\": \"Start date/time of the event\",\n                    \"required\": false\n                  }\n                },\n                // {\n                //   \"name\": \"start____Date\",\n                //   \"htmlTag\": \"input\",\n                //   \"options\": {\n                //     \"value\":msg.RevotioData.PostData.gadgetData.calendarEvent.start,\n                //     \"label\": \"Start date\",\n                //     \"type\": \"datetime\",\n                //     \"placeholder\": \"Start date/time of the event\",\n                //     \"required\": false\n                //   }\n                // },\n            // {\n            //   name: 'startDate',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).format(\"DD-MM-YYYY\"),\n            //     label: 'Start date',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: 'Start date/time of the event',\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 50\n            //   }\n            // },\n            // {\n            //     name: 'startTime',\n            //     htmlTag: 'select',  // button | select | textarea\n            //     optionsGroup: global.get(\"gadgetObjects.customForm.timeArray\"),\n            //     execActionData: [\n            //             { 'allDay': false }\n            //             ],\n            //   options: {\n            //     value: nowTime, //nextTime\n            //     label: 'Start time',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: nowTime,\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 25\n            //   }\n            // },\n              {\n                  \"name\": \"endDate\",\n                  \"htmlTag\": \"input\",\n                  \"options\": {\n                    \"value\":msg.RevotioData.PostData.gadgetData.calendarEvent.end,\n                    \"label\": \"End date\",\n                    \"type\": \"datetime\",\n                    \"placeholder\": \"End date/time of the event\",\n                    \"required\": false,\n                    min : 'startDate'\n                  }\n                },\n                // {\n                //   \"name\": \"end____Date\",\n                //   \"htmlTag\": \"input\",\n                //   \"options\": {\n                //     \"value\": msg.RevotioData.PostData.gadgetData.calendarEvent.end,\n                //     \"label\": \"End date\",\n                //     \"type\": \"datetime\",\n                //     \"placeholder\": \"End date/time of the event\",\n                //     \"required\": false,\n                //     min : 'startDate'\n                //   }\n                // },\n            //  {\n            //   name: 'endDate',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: moment(msg.RevotioData.PostData.gadgetData.calendarEvent.end).format(\"DD-MM-YYYY\"),\n            //     label: 'End date',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: 'End date/time of the event',\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //      \"width\": 50\n            //   }\n            // },\n            // {\n            //     name: 'endTime',\n            //     htmlTag: 'select',  // button | select | textarea\n            //     optionsGroup: global.get(\"gadgetObjects.customForm.timeArray\"),\n            //     execActionData: [\n            //             { 'allDay': false }\n            //             ],\n            //   options: {\n            //     value: nextTime,\n            //     label: 'End time',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: nextTime,\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 25\n            //   }\n            // },\n            {\n              name: 'notification_type',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Notification',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'notification_number',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                { 'notification_type': true }\n                ],\n              options: {\n                value: '',\n                label: 'Amount',\n                type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n            {\n                  name: 'notification_entity',\n                  htmlTag: 'select',  // button | select | textarea\n                  optionsGroup: {\n                        'minutes' : \"Minutes\",\n                        'hours': \"Hours\",\n                        'days': \"Days\",\n                  },\n                  execActionData: [\n                        { 'notification_type': true }\n                        ],\n                  options: {\n                    value: '',\n                    label: 'Type',\n                    type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    maxlength: 50\n                  }\n            },\n            {\n              name: 'notes',\n              htmlTag: 'textarea',  // button | select | textarea\n            //   execActionData: [\n            //     { 'notification_type': true }\n            //     ],\n              options: {\n                value: '',\n                label: 'Notes',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 500\n              }\n            },\n    ]}]}\n    \n    \nreturn msg;","outputs":1,"noerr":0,"x":4300,"y":2100,"wires":[["fe3eea8f.2b56b"]]},{"id":"fe3eea8f.2b56b","type":"function","z":"d8703926.e2eca","name":"prepair GadgetsList","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"5b191e30-5ed1-96df-f517-e963164ab500\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"show\"}},\n            {\n                \"gadgetId\": \"406e8b27-a88e-0663-b608-aa4d5bec3caa\",\n              \"gadgetName\": \"page form\",\n              \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form}\n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\n\n           \n            \n            \nreturn msg;","outputs":1,"noerr":0,"x":4610,"y":2140,"wires":[["32936bf1.d4c834"]]},{"id":"32936bf1.d4c834","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":4735,"y":2140,"wires":[]},{"id":"7b09e2e4.e3fdec","type":"function","z":"d8703926.e2eca","name":"Preform events DB action","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\n// if (moment(msg.RevotioData.PostData.gadgetData.formData.endDate).isBefore(moment(msg.RevotioData.PostData.gadgetData.formData.startDate))){\n//     msg.RevotioData.PostData.gadgetData.formData.endDate = moment(msg.RevotioData.PostData.gadgetData.formData.startDate)\n// }\n\nobj = \n    {\n      \n        \"title\":msg.RevotioData.PostData.gadgetData.formData.title,\n        \"notes\":msg.RevotioData.PostData.gadgetData.formData.notes,\n        \"entity\": msg.RevotioData.FlowData.entity,\n        \"entityId\": new ObjectID(msg.RevotioData.FlowData.entityId)\n    }\n    \nif (msg.RevotioData.PostData.gadgetData.hasOwnProperty(\"formData\") && msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"removeEvent\") && msg.RevotioData.PostData.gadgetData.formData.removeEvent === true){\n    obj.removeEvent = true\n} else {\n obj.removeEvent = false\n \n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"allDay\") === true){\n        obj[\"allDay\"]   = msg.RevotioData.PostData.gadgetData.formData.allDay\n        //  obj[\"start\"]   = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.startDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + \"00:00\" + \":00Z\")\n        //  obj[\"end\"]     = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.endDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + \"00:00\" + \":00Z\")\n        //  obj[\"startTime\"] =  \"00:00\"\n        //  obj[\"endTime\"] = \"00:00\"\n           obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n        \n\n    }\nelse {\n     obj[\"allDay\"]  = false\n    //  obj[\"start\"]  = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.startDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + msg.RevotioData.PostData.gadgetData.formData.startTime+ \":00Z\")\n    //  obj[\"end\"]  =new Date(moment(msg.RevotioData.PostData.gadgetData.formData.endDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + msg.RevotioData.PostData.gadgetData.formData.endTime+ \":00Z\")\n    //  obj[\"startTime\"] = msg.RevotioData.PostData.gadgetData.formData.startTime\n    //  obj[\"endTime\"] = msg.RevotioData.PostData.gadgetData.formData.endTime\n               obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n}\n\n\n    \nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"notification_type\") === true){\n    obj[\"notification_type\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_type\n     obj[\"notification_number\"] = msg.RevotioData.PostData.gadgetData.formData.notification_number\n      obj[\"notification_entity\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_entity\n  \n} else {\n    obj[\"notification_type\"] = false \n}\n\n\n\n\nif (msg.RevotioData.FlowData.level === \"organization\"){\n    obj[\"organization_id\"] = new ObjectID(msg.RevotioData.FlowData.organization_id)\n}\n}\n\n query = {\n                query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj._id)},\n                update :{\"$set\": obj},\n                options : {upsert : true }\n            }\n            Obj = { \n                    query : query,\n                \n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'events',\n                operation:\"update\",\n                        }  \n               \n                mongodbTools.resolveAsync(Obj, node, function(res){\n                \n                    node.send(msg)\n                })\n","outputs":1,"noerr":0,"x":3990,"y":2540,"wires":[["c3fd4dbc.f34178","46ddef80.d9baa8"]]},{"id":"c3fd4dbc.f34178","type":"link out","z":"d8703926.e2eca","name":"","links":["cc658dba.c7f2d8"],"x":4135,"y":2560,"wires":[]},{"id":"50e2d688.5807b","type":"function","z":"d8703926.e2eca","name":"set GadgetSettings","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nmsg.RevotioData.FlowData.Data.gadgetOptions.currentDate = new Date();\nmsg.RevotioData.FlowData.Data.gadgetOptions.view = \"month\";\nmsg.RevotioData.FlowData.Data.gadgetOptions.activeMonth= moment().month() + 1;\nmsg.RevotioData.FlowData.Data.gadgetOptions.activeYear= moment().year();\nmsg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment().subtract(2, 'months'));\nmsg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment().add(2, 'months'));\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":2360,"wires":[["39d2ce0a.3d6772"]]},{"id":"29545707.f5fab","type":"function","z":"d8703926.e2eca","name":"changeView","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nmsg.RevotioData.FlowData.Data.gadgetOptions.view = msg.RevotioData.PostData.gadgetData.calendarEvent.view;\n\nif (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"year\"){\n    \n    msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).startOf(\"year\").subtract(2, 'months'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).startOf(\"year\").add(2, 'months'))\n    \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"month\"){\n    \n    msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'months'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'months'))\n     \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"week\"){\n    \n       msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'weeks'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'weeks'))\n      \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"day\"){\n    \n           msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'weeks'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'weeks'))\n      \n}\nreturn msg;","outputs":1,"noerr":0,"x":4290,"y":2260,"wires":[["1c7c95ad.85f9ea"]]},{"id":"1c7c95ad.85f9ea","type":"link out","z":"d8703926.e2eca","name":"","links":["4ed5e2ef.631d7c"],"x":4375,"y":2260,"wires":[]},{"id":"6ed7d123.b951a8","type":"link out","z":"d8703926.e2eca","name":"","links":["4ed5e2ef.631d7c"],"x":4635,"y":2420,"wires":[]},{"id":"775ab6b1.b9664","type":"function","z":"d8703926.e2eca","name":"Preform events DB action","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\nif (msg.RevotioData.PostData.gadgetData.hasOwnProperty(\"formData\") && msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"removeEvent\") && msg.RevotioData.PostData.gadgetData.formData.removeEvent === true){\n    obj.removeEvent = true\n} else {\n\n    obj = \n                {\n                    \"title\":msg.RevotioData.PostData.gadgetData.calendarEvent.title,\n                    \"removeEvent\":false,\n                    \"start\":new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.start),\n                    \"end\":new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.end),\n                    // \"startTime\":global.get(\"functions.formatTime\")((Number(new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.start).getHours()) - 1) + \":\"+ new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.start).getMinutes()),\n                    // \"endTime\": global.get(\"functions.formatTime\")((Number(new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.end).getHours()) - 1) + \":\"+ new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.end).getMinutes()),\n                    \"notes\":msg.RevotioData.PostData.gadgetData.calendarEvent.notes,\n                }\n                \n                if (msg.RevotioData.PostData.gadgetData.calendarEvent.hasOwnProperty(\"notification_type\") === true){\n                    obj.notification_type  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_type\n                    obj.notification_number  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_number\n                    obj.notification_entity  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_entity\n                    \n                  \n                } else {\n                    obj.notification_type = false \n                }\n}\n        \n        \n         query = {\n                        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.calendarEvent._id)},\n                        update : {\"$set\": obj},\n                        options : {upsert : true }\n                    }\n                    Obj = { \n                            query : query,\n                        \n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'events',\n                        operation:\"update\",\n                                }  \n                       \n                        mongodbTools.resolveAsync(Obj, node, function(res){\n                        \n                            node.send(msg)\n                        })\n","outputs":1,"noerr":0,"x":4330,"y":2300,"wires":[["5731bf65.0fc278","696e802.154d48"]]},{"id":"576eff5e.77e66","type":"function","z":"d8703926.e2eca","name":"changeView","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nmsg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'weeks'))\nmsg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.end).add(2, 'weeks'))\nreturn msg;","outputs":1,"noerr":0,"x":4290,"y":2340,"wires":[["464211e5.f2bdc"]]},{"id":"b924fbe0.8a06b","type":"link out","z":"d8703926.e2eca","name":"","links":["4ed5e2ef.631d7c"],"x":4635,"y":2380,"wires":[]},{"id":"f78732d.293515","type":"comment","z":"d8703926.e2eca","name":"Gadget payload","info":"","x":1651.666561126709,"y":2154.166479110718,"wires":[]},{"id":"46ddef80.d9baa8","type":"function","z":"d8703926.e2eca","name":"Set modal hide Data","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"5b191e30-5ed1-96df-f517-e963164ab500\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"hide\"}},\n            \n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\nreturn msg;","outputs":1,"noerr":0,"x":4220,"y":2520,"wires":[["d5af710b.e3f5f8"]]},{"id":"d5af710b.e3f5f8","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":4335,"y":2520,"wires":[]},{"id":"ab10a2d5.fc6ad","type":"catch","z":"2294209a.0c95b","name":"","scope":null,"x":60,"y":240,"wires":[["58ea0e0c.87eda"]]},{"id":"58ea0e0c.87eda","type":"debug","z":"2294209a.0c95b","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":178.33332443237305,"y":239.99999618530273,"wires":[]},{"id":"777db7e9.fd3678","type":"comment","z":"2294209a.0c95b","name":"users global","info":"","x":70,"y":320,"wires":[]},{"id":"96263bd.b412fc8","type":"debug","z":"2294209a.0c95b","name":"users global INIT POST  ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":1070,"y":560,"wires":[]},{"id":"8c63f461.7ede2","type":"debug","z":"2294209a.0c95b","name":"users global action ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":2650,"y":440,"wires":[]},{"id":"dfb51746.eb5818","type":"comment","z":"2294209a.0c95b","name":"users global action ","info":"","x":2650,"y":320,"wires":[]},{"id":"a3a4efb5.82b6a8","type":"function","z":"2294209a.0c95b","name":"Route userAction","func":"var BtnAction, FormAction, OpenOrganization, MenuAction ,RevotioBreadCrumbs, sliderAction, tabsSelect\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"){\n    BtnAction = msg;\n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"data-table\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreateOrganizationTrigger = msg;\n    } else {\n         OpenOrganization = msg;\n    }\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n} else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n    RevotioBreadCrumbs  = msg;\n} else if (PostData.gadgetType=== \"user-slider\"){\n    sliderAction  = msg;\n} else if (PostData.gadgetType === \"revotio-tabs-select\"){\n            tabsSelect = msg\n\n    }\n\n\n\nreturn [BtnAction, FormAction, OpenOrganization, MenuAction, RevotioBreadCrumbs, sliderAction, tabsSelect];","outputs":7,"noerr":0,"x":2650,"y":540,"wires":[["5df13deb.3acd8c"],["52927150.b34eb8"],[],["de32b4e0.6e0cb"],["de0a486c.213f5"],["36833fec.f99c5"],[]],"outputLabels":["BtnAction","FormAction","OpenOrganization","MenuAction","RevotioBreadCrumbs","sliderAction","tabsSelect"]},{"id":"52927150.b34eb8","type":"function","z":"2294209a.0c95b","name":"Set Form Data","func":"\nmsg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\nmsg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":2980,"y":540,"wires":[["6db87728.a54d58"]]},{"id":"b4ce0864.df5ff8","type":"function","z":"2294209a.0c95b","name":"Set Form Data","func":"    msg.RevotioData.FlowData.Form = {\n        FormType : \"User\",\n        FormActionType : \"Create\",\n        // FormData :{\n            organization_id: msg.RevotioData.FlowData.organization_id\n        // }\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3400,"y":400,"wires":[["a59768fe.a6a258"]]},{"id":"b09f7e8.6839d8","type":"comment","z":"2294209a.0c95b","nameinfo":"","x":2430,"y":280,"wires":[]},{"id":"32bc6eb7.c073aa","type":"link in","z":"2294209a.0c95b","name":"users global INIT ","links":["c5aa2d02.8f412","f366e4ef.12135","b0ae31e0.11c9e8"],"x":915,"y":600,"wires":[["96263bd.b412fc8","12877cee.3216e3"]]},{"id":"3a23c4b4.bdc8a4","type":"link in","z":"2294209a.0c95b","name":"users global action ","links":["a73b1515.e10af","c01419a1.2a769","be4224db.bfd728"],"x":2495,"y":540,"wires":[["a3a4efb5.82b6a8","8c63f461.7ede2"]]},{"id":"aea25a8a.fa4a58","type":"link out","z":"2294209a.0c95b","name":"","links":["b99d146e.edaab","4c702830.810f","bad52f95.bf573","5db440a.6f3ea4","77ece62a.01347","c114b448.029c4","449e3134.053a68"],"x":1195,"y":600,"wires":[]},{"id":"b99d146e.edaab","type":"link in","z":"2294209a.0c95b","name":"users global = slider Gagdet","links":["aea25a8a.fa4a58"],"x":1415,"y":520,"wires":[["54bebd9c.e00f24"]]},{"id":"4c702830.810f","type":"link in","z":"2294209a.0c95b","name":"users global = BTN Gagdet","links":["aea25a8a.fa4a58"],"x":1415,"y":560,"wires":[["5fe4db8e.07be7c"]]},{"id":"bad52f95.bf573","type":"link in","z":"2294209a.0c95b","name":"users global = ACC Gagdet","links":["aea25a8a.fa4a58"],"x":1375,"y":600,"wires":[[]]},{"id":"54bebd9c.e00f24","type":"function","z":"2294209a.0c95b","name":"\"users slider\"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n// aggregate\n                   aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"type_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                  \"type\": \"organization\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"user_accounts\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"user\",\n                                  \"as\": \"user_accounts\"\n                                }\n                              },\n                               {\n                                $lookup: {\n                                  \"from\": \"users\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"users\"\n                                }\n                              },\n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                              {\n                                $unwind: {\n                                  \"path\": \"$user_accounts\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              },\n                              {\n                                $unwind: {\n                                  \"path\": \"$users\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    \n                    data = [];\n                    \n                    // if (res.length > 0){\n                    _.each(res, function(item, index ){\n                        \n                        \n                        // if (String(item.user_accounts.user) ===  )\n                        data.push(\n                               {\n                                  \"name\": item.user_accounts.first_name + \"  \" + item.user_accounts.last_name,\n                                  \"src\": global.get(\"functions.fileManagement\")(global.get(\"DomainProperties.rootPath\") +  item.user_accounts.avatar, item.user_accounts.avatar ,msg.RevotioData.session._id, \"copySync\"), // source, destination, operation global.get(\"DomainProperties.url\") + msg.RevotioData.session.UserData.avatar,\n                                filePath: item.user_accounts.avatar,\n                                //   global.get(\"functions.fileManagement\")(global.get(\"DomainProperties.rootPath\") +  item.user_accounts.avatar, item.user_accounts.avatar ,msg.RevotioData.session._id, \"copySync\"), // source, destination, operation global.get(\"DomainProperties.url\") + msg.RevotioData.session.UserData.avatar,\n                            \n                                  \"status\": \"inactive\",\n                                  appUserId : item.user\n                                })\n                    \n                    \n\n\n                  \n            })  \n                   \n                    \n                    msg.payload = {gadgetsList: [{\n                           \"gadgetId\": \"556e2104-bc36-30ba-a12b-6e90c899c5ab\",\n                          \"gadgetName\": \"users slider\",\n                          \"gadgetType\": \"user-slider\",\n                              \"gadgetData\":data\n                            }\n                   ]}\n\n              node.send(msg) \n            })\n\n\n\n","outputs":1,"noerr":0,"x":1490,"y":520,"wires":[["1c021baa.41b07c"]]},{"id":"5fe4db8e.07be7c","type":"function","z":"2294209a.0c95b","name":"Create user BTN GADGET","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"d2a4ccdb-bf9f-dcf4-2795-aa95f99e2ec3\",\n            \"gadgetName\":\"Create user BTN\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\n                //  url:   \"http://localhost:1881/#/pageBuilder/5bacdd9fb9bf1c120bef1088/page/5bc987181e040202e7b74589\",\n                //  target: \"_blank\",\n                \"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Create new user\"},\n                \"gadgetData\":{type: \"createUser\"}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ; \n\nreturn msg ;","outputs":1,"noerr":0,"x":1540,"y":560,"wires":[["df9e1699.b208d8"]]},{"id":"c1a8050f.064128","type":"function","z":"2294209a.0c95b","name":"users acc","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"type_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                  \"type\": \"organization\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"user_accounts\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"user\",\n                                  \"as\": \"user_accounts\"\n                                }\n                              },\n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                              {\n                                $unwind: {\n                                  \"path\": \"$user_accounts\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    \n                    data = [];\n                    \n                    _.each(res, function(item, index ){\n                        \n                        data.push(\n                            {\n                                  \"state\": \"info\",\n                                  \"title\": item.user_accounts.first_name + \" \" + item.user_accounts.last_name,\n                                  \"rowState\": item.user_accounts.state ,\n                                  \"Avatar\": item.user_accounts.avatar,\n                                  \"buttons\": [\n                                    {\n                                      \"name\": \"\",\n                                      \"type\": \"\",\n                                      \"icon\": \"fas fa-angle-double-right\",\n                                      \"label\": \"\",\n                                      \"color\": \"blue\",\n                                      \"tooltip\": \"tooltip string\",\n                                      \"state\": \"inactive or active\"\n                                    }\n                                  ],\n                                  \"ButtonName\": \"fas fa-angle-double-right\",\n                                  \"keys\": [\n                                    {\n                                      \"state\": \"info\",\n                                      \"title\": \"key title\",\n                                      \"values\": {\n                                        \"prop1\": \"val1\",\n                                        \"prop2\": \"val2\",\n                                        \"prop3\": \"val3\"\n                                      }\n                                    }\n                                  ]\n                                }\n                        )\n                        \n                    })\n                    \n                    msg.payload = {gadgetsList: [{\n                              \"gadgetId\": \"808e98a2-1725-cb8c-5d47-ef95e2e28751\",\n                              \"gadgetName\": \"users acc\",\n                              \"gadgetType\": \"infinite-accordion\",\n                              \"gadgetOptions\": {\n                                \"navigateAll\": false,\n                                \"stickyTree\": false,\n                                \"alignKeys\": false\n                              },\n                              \"gadgetData\":data\n                            }\n                            ]}\n\n\n\n                    node.send(msg) \n            })  \n\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1480,"y":600,"wires":[["f19484dd.a1fe48"]]},{"id":"1c021baa.41b07c","type":"link out","z":"2294209a.0c95b","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","480dae32.8a339","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1735,"y":520,"wires":[]},{"id":"df9e1699.b208d8","type":"link out","z":"2294209a.0c95b","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","480dae32.8a339","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1735,"y":560,"wires":[]},{"id":"f19484dd.a1fe48","type":"link out","z":"2294209a.0c95b","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","480dae32.8a339","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1735,"y":600,"wires":[]},{"id":"dc858fa9.f74248","type":"function","z":"2294209a.0c95b","name":"items gadget","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"type_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                  \"type\": \"organization\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"user_accounts\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"user\",\n                                  \"as\": \"user_accounts\"\n                                }\n                              },\n                               {\n                                $lookup: {\n                                  \"from\": \"users\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"users\"\n                                }\n                              },\n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                              {\n                                $unwind: {\n                                  \"path\": \"$user_accounts\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              },\n                              {\n                                $unwind: {\n                                  \"path\": \"$users\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    \n                    data = [];\n                    \n                    _.each(res, function(item, index ){\n                        \n                        var color = \"btn-info\"\n                         if (item.users.hasOwnProperty(\"resetPassword\") && item.users.resetPassword === true){\n                              resetPassword = \"Reset required\"\n                              color = \"btn-warning\"\n                          } else {\n                               resetPassword = \"No reset required\"\n                          }\n                          \n                        if (item.users.hasOwnProperty(\"blockAccount\") && item.users.blockAccount === true){\n                               blockAccountName = \"Account blocked\"\n                               blockAccountLabel = \"Unblock account\"\n                                blockAccount = \"unBlockAccount\"\n                               color = \"btn-danger\" \n                          } else {\n                               blockAccountName = \"Account not blocked\"\n                                blockAccountLabel = \"Block account\"\n                                blockAccount = \"blockAccount\"\n                          }\n                          \n                          \n                            var AvatarBtn =   {\n                                        gadgetId: \"b12c4750-6084-2361-cc12-8e3bd4ef54f0\",\n                                        \"gadgetName\":\"user avatar btn\",\n                                        \"gadgetType\":\"dynamic-btn\",\n                        // \"gadgetOptions\": {\n                        //     types:['dropdown'],\n                        //     styles:['btn-embossed', 'btn-success', 'btn-square', ], \n                        //     buttonalign:'left', \n                        //     textcolor:'black', \n                        //     buttonlabel:'Department - ' + ButtonLabel,\n                        // },// icon:{type:'fa fa-plus', align:'left'}                        \n                        \"gadgetOptions\": {\n                            types:['image'],\n                            // imageUrl: global.get(\"DomainProperties.url\") + item.user_accounts.avatar, // \"https;//academicprojects.eu/\" + msg.loopData.payload.avatar,\n                            \n                            imageUrl : global.get(\"functions.fileManagement\")(global.get(\"DomainProperties.rootPath\") +  item.user_accounts.avatar, item.user_accounts.avatar ,msg.RevotioData.session._id, \"copySync\"), // source, destination, operation global.get(\"DomainProperties.url\") + msg.RevotioData.session.UserData.avatar,\n                            filePath : item.user_accounts.avatar,\n                            styles:['img-md', 'img-circle'], // img-circle , img-rounded, img-thumbnail, img-sm, img-md, img-lg\n                            buttonalign:'right', \n                            textcolor:'black', \n                            buttonlabel:'Uploadsy', \n                            action:{type: \"userClick\",  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}} // starts under app-academicprojects\n                            \n                        },// icon:{type:'fa fa-plus', align:'left'}\n                        \"gadgetData\": {\n                            // \"DropdownData\":[\n                            //                     {label:\"All\", action: 'All'},\n                            //                     {label:\"Conservation Biology\", action: 'ConservationBiology'}, \n                            //                     {label:\"Industrial Ecology\", action:'IndustrialEcology'},\n                            //                     {label:\"Central\", action:'Central'},\n                            //                 ]\n                        }\n                    };\n                          \n                          \n                         \n                            var optionsBtn =   {\n                                        gadgetId: \"c184650b-3842-4533-5c53-f74b098856db\",\n                                        \"gadgetName\":\"user options btn\",\n                                        \"gadgetType\":\"dynamic-btn\",\n                                        \"gadgetOptions\": {\n                                            types:['dropdown'],\n                                            styles:['btn-embossed', color, 'btn-square', ], \n                                            buttonalign:'left', \n                                            textcolor:'black', \n                                            buttonlabel:\"Options\",\n                                        },// icon:{type:'fa fa-plus', align:'left'}                        \n                                        // \"gadgetOptions\": {\n                                        //     types:['image'],\n                                        //     imageUrl: item.user_accounts.avatar, // \"https;//academicprojects.eu/\" + msg.loopData.payload.avatar,\n                                        //     styles:['img-md', 'img-circle'], // img-circle , img-rounded, img-thumbnail, img-sm, img-md, img-lg\n                                        //     buttonalign:'right', \n                                        //     textcolor:'black', \n                                        //     buttonlabel:'Uploadsy', \n                                        //     action:{type: \"userClick\",  data : {organization_id : msg.loopData.payload.organization_id, appUserId: item.user}} // starts under app-academicprojects\n                                            \n                                        // },// icon:{type:'fa fa-plus', align:'left'}\n                                        \"gadgetData\": {\n                                            \"DropdownData\":[    {label:\"Edit user\", action:{type: \"editUser\",  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}}},\n                                                                {label:\"Reset password\", action: {type: \"resetPassword\",  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}}},\n                                                                {label:blockAccountLabel, action: {type: blockAccount,  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}}}, \n                                                                {label:\"Close user session\", action:{type: \"closeUserSessions\",  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}}},\n                                                                 {label:\"Remove user\", action:{type: \"removeUser\",  data : {organization_id : msg.RevotioData.FlowData.organization_id, appUserId: item.user}}},\n                                                         \n                                                            ]\n                                        }\n                                    };\n                            \n                            var userInfo = {\n                                        gadgetId: '64d99fe2-5cae-ae62-5e81-2ccd8153fb06',\n                                        gadgetName: 'user information text',\n                                        gadgetType: 'dynamic-text-area',\n                                        gadgetData: {\n                                        data: [{\n                                            label: \"User\",\n                                            value: item.user_accounts.first_name + \" \" + item.user_accounts.last_name,\n                                            // options: textFieldOptions\n                                            },\n                                            {\n                                            label:  \"E-mail address\",\n                                            value: item.user_accounts.username ,\n                                            // options: textFieldOptions\n                                            },\n                                            {\n                                            label:  \"Password\",\n                                            value: resetPassword ,\n                                            // options: textFieldOptions\n                                            },\n                                            {\n                                            label:  \"Account\",\n                                            value: blockAccountName,\n                                            // options: textFieldOptions\n                                            },\n                                            {\n                                            label:  \"Last login\",\n                                            value: moment(item.users.login).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") ,\n                                            // options: textFieldOptions\n                                            },\n                                            // {\n                                            // label:  \"\",\n                                            // value: msg.settings[lodash.findIndex(msg.settings, {_id:new ObjectID(msg.loopData.payload.department) })].Name,\n                                            // options: textFieldOptions}\n                                            ],\n                                        options:global.get(\"gadgetObjects['dynamic-text-area'].options\")\n                                        }\n                                    };\n                                    \n                             data.push([AvatarBtn,optionsBtn,userInfo])       \n                                    })\n                    \n                msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"100b298e-fa30-fab6-5324-677228e86103\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": data,\n                    \"gadgetOptions\" :{\n                        display:\"row\",\n                        totalGroup:2,\n                        padding : 5,\n                       }\n                    },]}\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1490,"y":640,"wires":[["5d648f99.e116b8","54978e5a.104c68"]]},{"id":"5db440a.6f3ea4","type":"link in","z":"2294209a.0c95b","name":"users global = items Gagdet","links":["aea25a8a.fa4a58","1dea56ab.df6ad9"],"x":1415,"y":640,"wires":[["dc858fa9.f74248"]]},{"id":"5d648f99.e116b8","type":"link out","z":"2294209a.0c95b","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","480dae32.8a339","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":1735,"y":640,"wires":[]},{"id":"5df13deb.3acd8c","type":"function","z":"2294209a.0c95b","name":"Route btn action","func":"var createUser, editUser,other;\n\n\nif (msg.RevotioData.PostData.hasOwnProperty(\"actionType\") === false  || typeof msg.RevotioData.PostData.actionType  === 'object'){\n    \n\n    if (msg.RevotioData.PostData.actionType.type === \"editUser\"){\n        editUser = msg;\n    }  else { // blockUser, cancelSession, resetPassword\n        other = msg\n    } \n\n}\nelse if (msg.RevotioData.PostData.gadgetData.type === \"createUser\"){\n    createUser = msg;\n}\n\nreturn [createUser, editUser,other];","outputs":3,"noerr":0,"x":2990,"y":480,"wires":[["b4ce0864.df5ff8"],["83d98346.a867"],["f6529164.ebcee"]],"outputLabels":["createUser","editUser","other"]},{"id":"83d98346.a867","type":"function","z":"2294209a.0c95b","name":"Set Form Data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nfindObj = {\n                    query : {\n                            query :{user:new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId) }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_accounts',\n                    operation:'findOne',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                   msg.RevotioData.FlowData.Form = {\n                        FormType : \"User\",\n                        FormActionType : \"Edit\",\n                        FormData:res\n                    };\n                    node.send(msg) \n            })   \n","outputs":1,"noerr":0,"x":3400,"y":440,"wires":[["a59768fe.a6a258"]]},{"id":"f6529164.ebcee","type":"function","z":"2294209a.0c95b","name":"update appuseraccounts && remove user sessions of user","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n    updateSessions = {\n                   query : {\n                            query : {\"UserData._id\": new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n                            // update: {\"$set\": {blockAccount: true}},\n                            // options: {upsert: true}\n                        },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'deleteMany',\n                    }\n\n            mongodbTools.resolveAsync(updateSessions, node, function(res){\n\n                node.send(msg);\n\n                    \n            }) \n","outputs":1,"noerr":0,"x":3540,"y":520,"wires":[["8479f9e2.fa6c9"]]},{"id":"1dea56ab.df6ad9","type":"link out","z":"2294209a.0c95b","name":"","links":["5db440a.6f3ea4"],"x":4355,"y":480,"wires":[]},{"id":"8479f9e2.fa6c9","type":"function","z":"2294209a.0c95b","name":"Update appusers collection","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n               \nvar query , noQuery, removeUser;\n\n\nif (msg.RevotioData.PostData.actionType.type === \"resetPassword\"){\n    \n    \n    msg.operation = 'updateOne'\n    msg.payload = [{_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n                   {\"$set\": {\"resetPassword\": true}},\n                   {upsert: true}\n                   ]\n    \n    msg.resetPassword = true\n                                // updateQuery = {\n                                //       query : {\n                                //                 query : {_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n                                //                 update: {\"$set\": {\"resetPassword\": true}},\n                                //                 options: {upsert: true}\n                                //             },\n                                //         connection:global.get(\"DB_data.connection\"),\n                                //         database:global.get(\"DB_data.appDB\"),\n                                //         collection:'users',\n                                //         moperation:'updateOne',\n                                //         }\n                    \n                                // mongodbTools.resolveAsync(updateQuery, node, function(res){\n                                       \n                                       \n                                // })   \n                       query = msg\n} else if (msg.RevotioData.PostData.actionType.type === \"blockAccount\"){\n    \n    msg.operation = 'updateOne'\n    msg.payload = [{_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n                   {\"$set\": {\"blockAccount\": true}},\n                   {upsert: true}\n                   ]\n    \n    // updateQuery = {\n    //               query : {\n    //                         query : {_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n    //                         update: {\"$set\": {blockAccount: true}},\n    //                         options: {upsert: true}\n    //                     },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'users',\n    //                 operation:'update',\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateQuery, node, function(res){\n                   \n    //                 node.send(msg) \n    //         })   \n    \n    query = msg\n} else if (msg.RevotioData.PostData.actionType.type === \"unBlockAccount\"){\n    \n    msg.operation = 'updateOne'\n    msg.payload = [{_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n                   {\"$set\": {\"blockAccount\": false, loginAttempts : 0}},\n                   {upsert: true}\n                   ]\n    \n    // updateQuery = {\n    //               query : {\n    //                         query : {_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n    //                         update: {\"$set\": {blockAccount: true}},\n    //                         options: {upsert: true}\n    //                     },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'users',\n    //                 operation:'update',\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateQuery, node, function(res){\n                   \n    //                 node.send(msg) \n    //         })   \n    \n    query = msg\n}else if (msg.RevotioData.PostData.actionType.type === \"closeUserSessions\"){\n    noQuery = msg\n            // node.send(msg) \n} else if (msg.RevotioData.PostData.actionType.type === \"removeUser\"){\n    removeUser = msg\n            // node.send(msg) \n} \n// msg.type = msg.RevotioData.PostData.actionType.type\n\n\nreturn [query , noQuery, removeUser];","outputs":3,"noerr":0,"x":3880,"y":520,"wires":[["35b3b956.affe26"],["1dea56ab.df6ad9"],["6535b938.767ac8"]],"outputLabels":["query , ","noQuery","removeUser"]},{"id":"115dbd4f.d83e53","type":"function","z":"aec22158.fe4e38","name":"Check if account is blocked / password reset is needed","func":"// var crypto = require('crypto');\n\nvar blocked, passwordReset, valid;\n\n\nif (msg.payload.hasOwnProperty(\"blockAccount\") && msg.payload.blockAccount === true ){\n\n   blocked = msg;\n} else if (msg.payload.hasOwnProperty(\"resetPassword\") && msg.payload.resetPassword === true ){\n\n   passwordReset = msg;\n}\nelse {\n    valid = msg;\n}\n\n\n\nreturn [blocked, passwordReset, valid];","outputs":3,"noerr":0,"x":2305,"y":359.99999618530273,"wires":[["5a842d37.e1cabc"],["e2aed4fb.2ddab8"],["62867a86.49ad5c"]],"outputLabels":["blocked","passwordReset","valid"]},{"id":"bdf7ba4.ba0e548","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":2870,"y":279.99999618530273,"wires":[]},{"id":"40baac37.1b872c","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":2910,"y":240,"wires":[]},{"id":"e2aed4fb.2ddab8","type":"function","z":"aec22158.fe4e38","name":"Redirect to reset password","func":"// Prepair redirect to chosen project\n\n           msg.payload = { \n               Page:'reset password', \n               RevotioData:{\n                   user: msg.payload._id\n               } \n            };\n        \n\n\nreturn msg;","outputs":1,"noerr":0,"x":2775,"y":319.99999618530273,"wires":[["b42e2891.03848"]]},{"id":"5a842d37.e1cabc","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[0].error =  {\n                                                                    msg: \"This account is blocked, please contact your administrator\"\n                                                                    };\n\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"349a509d-e145-33a6-7888-e8906915b223\",\n            \"gadgetName\":  \"Login form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":2755,"y":279.99999618530273,"wires":[["bdf7ba4.ba0e548"]]},{"id":"e80a67d5.4cc398","type":"function","z":"aec22158.fe4e38","name":"Set login attempt vars ","func":"msg.RevotioData.FlowData.Data.GadgetsSettings = {\n    loginAttempts : 0,\n    sessionTime: new Date()\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":355,"y":379.99999618530273,"wires":[["cd8c7f3.154188"]]},{"id":"ff257da5.7a778","type":"function","z":"aec22158.fe4e38","name":"update appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n    updateObj = {\n                    query : {\n                            query :msg.query[0], \n                            update : msg.query[1],\n                            options : msg.query[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    \n            })  \n            \n","outputs":1,"noerr":0,"x":2405,"y":259.99999618530273,"wires":[[]]},{"id":"30a67121.5f2ade","type":"function","z":"aec22158.fe4e38","name":"Check if passwords match","func":"var invalid, valid;\n\nif(String(msg.RevotioData.PostData.gadgetData.formData.passwordOne) === String(msg.RevotioData.PostData.gadgetData.formData.passwordTwo)  ){\n\n  valid = msg;\n}\nelse{\n  invalid =  msg;\n}\n\nreturn [invalid, valid];","outputs":2,"noerr":0,"x":2915,"y":839.9999961853027,"wires":[["40f939cd.5da32"],["42b3aebc.e049d"]],"outputLabels":["invalid, ","valid"]},{"id":"40f939cd.5da32","type":"function","z":"aec22158.fe4e38","name":"Prepair error response","func":"\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[4].error =  {\n                                                                    msg: \"Passwords dont match\"\n                                                                    };\nmsg.RevotioData.PostData.gadgetData.formObj.steps[0].fields[5].error =  {\n                                                                    msg: \"Passwords dont match\"\n                                                                    };\nmsg.payload = {\n    \n    gadgetsList : [{\n            \"gadgetId\":  \"e947591f-f70b-84c4-c2f7-5a78178ad897\",\n            \"gadgetName\":  \"Reset password form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.RevotioData.PostData.gadgetData.formObj}]\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":3215,"y":799.9999961853027,"wires":[["54156eec.b14a88"]]},{"id":"54156eec.b14a88","type":"link out","z":"aec22158.fe4e38","name":"","links":["e158a3eb.e1806","4ac73054.2df2a","1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":3330,"y":799.9999961853027,"wires":[]},{"id":"9e3872b.987979","type":"comment","z":"aec22158.fe4e38","name":"ERROR","info":"","x":3385,"y":799.9999961853027,"wires":[]},{"id":"2e2842dc.490bae","type":"function","z":"aec22158.fe4e38","name":"Trigger disclamer modal","func":"msg.payload = { gadgetsList  : [ {\n            \"gadgetId\":  \"8a3a24ef-ccca-adbd-1cfb-4ab4f0283040\",\n            \"gadgetName\": \"disclamer modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\n                                \"modalStatus\":\"show\",\n                                \"displayTime\" : 5\n                                \n            },\n    gadgetOptions: {clickOutsideToClose : true}\n},\n            {\n                                        gadgetId: '296015e1-21c9-b349-ef7a-89cf44d02114',\n                                        gadgetName: 'general disclaimer info',\n                                        gadgetType: 'dynamic-text-area',\n                                        gadgetData: {\n                                        data: [{\n                                            label: \"Disclamer\",\n                                            value: \"Voorafgaand aan het aanmelden wordt aan de gebruiker een melding getoond dat alleen geautoriseerd gebruik is toegestaan voor expliciet door de organisatie vastgestelde doeleinden.\",\n                                            // options: textFieldOptions\n                                            },\n                                            // {\n                                            // label:  \"Password\",\n                                            // value: resetPassword ,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"Account\",\n                                            // value: blockAccountName,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"Last login\",\n                                            // value: moment(item.login).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") ,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"\",\n                                            // value: msg.settings[lodash.findIndex(msg.settings, {_id:new ObjectID(msg.loopData.payload.department) })].Name,\n                                            // options: textFieldOptions}\n                                            ],\n                                        options:global.get(\"gadgetObjects['dynamic-text-area'].options\")\n                                        }\n                                    }]};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":765,"y":299.99999618530273,"wires":[["af92a9f3.f2eab"]]},{"id":"7063f25b.94df04","type":"link in","z":"aec22158.fe4e38","name":"user authentication - Custom login form Gadget","links":["cd8c7f3.154188"],"x":650,"y":299.99999618530273,"wires":[["2e2842dc.490bae"]]},{"id":"af92a9f3.f2eab","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","ec6395bb.05eb08","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4","44daecc2.e5b2f4"],"x":890,"y":299.99999618530273,"wires":[]},{"id":"704d4000.20aee","type":"function","z":"45759581.11da84","name":"create element list","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar fs = global.get('fsextra');\n\n\nif (msg.RevotioData.session.UserData.hasOwnProperty(\"avatar\") && fs.existsSync( msg.RevotioData.session.UserData.avatar)){\n    avatar = msg.RevotioData.session.UserData.avatar\n\n} else {\n    avatar = global.get(\"DomainProperties.filesFolder\") +   \"SystemFiles/icons/user.png\"\n\n}\n\nAvatarBTN =  {\n            \"gadgetId\": \"487c2730-43f3-3870-dd7d-60464b992f19\",\n            \"gadgetName\":\"Settings btn\",\n            \"gadgetType\":\"dynamic-btn\",\n            'gadgetData' :\"topbarBTN_action\",\n            \"gadgetOptions\": {\n                            types:['image'],\n                            imageUrl:  global.get(\"functions.fileManagement\")( avatar, avatar ,msg.RevotioData.session._id, \"copySync\"), // source, destination, operation global.get(\"DomainProperties.url\") + msg.RevotioData.session.UserData.avatar,\n                            filePath :avatar,\n                            styles:[' img-small' ,'img-circle' ], //'img-rounded'\n                            buttonalign:'left', \n                            textcolor:'black', \n                            buttonlabel:msg.RevotioData.session.UserData.first_name + \" \" + msg.RevotioData.session.UserData.last_name + \" settings\", \n                            action:\"topbarBTN_action\" // starts under app-academicprojects\n                        },// icon:{type:'fa fa-plus', align:'left'}\n                    };\n// var btn =   {            \n//                   \"gadgetId\": \"487c2730-43f3-3870-dd7d-60464b992f19\",\n//                     \"gadgetName\":\"Settings btn\",\n//                     \"gadgetType\":\"dynamic-btn\",\n//                     \"gadgetOptions\":\n//                         {\"types\":\"\",\n//                         \"styles\":[\"btn-embossed\",\n//                          \"btn-square\",'btn-success' ],\n//                         \"buttonalign\":\"right\",\n//                         \"textcolor\":\"black\",\n//                         \"buttonlabel\":msg.RevotioData.session.UserData.first_name + \" \" + msg.RevotioData.session.UserData.last_name + \" settings\"},\n//                         \"gadgetData\":{_id : msg.RevotioData.session.UserData._id}\n                               \n//             } \n\nvar textOptions = {}\n_.each(global.get(\"gadgetObjects['dynamic-text-area'].options\"), function(value, key){\n    textOptions[key] = value\n})\n\n\ntextOptions[\"label-position\"] = 'left' ;\ntextOptions[\"value-margin-right\"] = '30px' ;\ntextOptions[\"value-font-size\"] = '12px' ;\n \n \ntextOptions[\"label-margin-right\"] = '5px' ;\ntextOptions[\"label-font-size\"] = '12px' ;\n\ntextOptions[\"font-size\"] = '20px' ;\n \n \ntextOptions[\"label-margin-bottom\"] = 0 ;\n\ntextOptions[\"display\"] = 'left' ;\n\nvar text = {\n                                        gadgetId: '3bb9eb3b-f65b-055b-5172-2939d7900ee1',\n                                        gadgetName: 'topbar text',\n                                        gadgetType: 'dynamic-text-area',\n                                        gadgetData: {\n                                        data: [{\n                                            label: \"Last login\",\n                                            value: moment(msg.RevotioData.session.UserData.previousLogin).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") ,\n                                            options: textOptions //{}\n                                            },\n                                            // {\n                                            // label:  \"Password\",\n                                            // value: resetPassword ,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"Account\",\n                                            // value: blockAccountName,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"Last login\",\n                                            // value: moment(item.login).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") ,\n                                            // // options: textFieldOptions\n                                            // },\n                                            // {\n                                            // label:  \"\",\n                                            // value: msg.settings[lodash.findIndex(msg.settings, {_id:new ObjectID(msg.loopData.payload.department) })].Name,\n                                            // options: textFieldOptions}\n                                            ],\n                                        options:textOptions\n                                        }}\n\nvar design = {\n    // '01c6230e-6316-840f-76d7-967523d89e1e': { \n    //         'background-color': '#1D2531',\n    //     // 'background-image': 'url(\"https://img.freepik.com/free-vector/grey-linen-texture-background_1053-253.jpg?size=338c&ext=jpg\")',\n    //     // 'background-repeat': 'repeat',\n    //       'position': '-webkit-sticky',  /* Safari */\n    //         'position': 'sticky',\n    //       'top': 0,\n    //       'z-index': 1,\n    //     },\n    // \"96d3bda5-ec96-00c3-d10e-7ce43b9b92a0\" : { \n    //         // 'background-color': '#f1f1f1',\n    //         'border': '1px solid rgba(0, 0, 0, 0.05)',\n    //         'margin-bottom': '10px',\n    //         'box-shadow': '0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    //         // \"background-image\" : 'url(\"http://wtctwente.nl/wp-content/uploads/2015/03/WTCTwente_PNO_Consultants_logo2.png\")',\n    //         'background-repeat': 'no-repeat',\n    //         'background-image': 'url(\"https://upload.wikimedia.org/wikipedia/commons/d/d1/Xmas_tree.svg\")',\n    //         // 'transform': 'scale(0.8)'\n    //     },\n    // // \"01c6230e-6316-840f-76d7-967523d89e1e\":{\n    // //     'background-color': '#1D2531',\n    // //     // 'background-image': 'url(\"https://img.freepik.com/free-vector/grey-linen-texture-background_1053-253.jpg?size=338c&ext=jpg\")',\n    // //     // 'background-repeat': 'repeat',\n    // //       'position': '-webkit-sticky',  /* Safari */\n    // //         'position': 'sticky',\n    // //       'top': 0,\n    // //       'z-index': 1,\n    // // }\n}\n// var designObj = \n   \nmsg.topbar  =  [text, design, AvatarBTN, ]\n                                    \nreturn msg;","outputs":1,"noerr":0,"x":1630,"y":1620,"wires":[[]]},{"id":"c36f0764.45994","type":"function","z":"e5822137.be45d","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"43e53616-0ad3-eacd-e865-1342e2b07000\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":1580,"y":400,"wires":[["b4a3b5aa.487f6"]]},{"id":"ca1911c0.aff9","type":"subflow:45759581.11da84","z":"e5822137.be45d","name":"","env":[],"x":1970,"y":940,"wires":[["5bc2fb02.53db74"]]},{"id":"5bc2fb02.53db74","type":"function","z":"e5822137.be45d","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"e463f60c-0606-fd3e-692c-471692f539fb\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2640,"y":940,"wires":[["55f4828f.4fb3b4"]]},{"id":"326e03fa.b881cc","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1915,"y":940,"wires":[["ca1911c0.aff9"]]},{"id":"55f4828f.4fb3b4","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2815,"y":940,"wires":[]},{"id":"31c0c3b7.aaf214","type":"function","z":"2294209a.0c95b","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"a2d41bb0-afa1-ad0d-af63-b5443df2fc7a\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":1620,"y":680,"wires":[["1bc869a3.7eb996"]]},{"id":"38d35469.c1aa9c","type":"subflow:45759581.11da84","z":"2294209a.0c95b","name":"","env":[],"x":1470,"y":680,"wires":[["31c0c3b7.aaf214"]]},{"id":"1bc869a3.7eb996","type":"link out","z":"2294209a.0c95b","name":"","links":["5185c631.530a58","cb87250c.966108","112320ff.7cff6f","d230180f.f3d19","e7f2e3d2.30705","ebf87699.c97f08","98813d9e.bcf0d","90045e69.ebd138","dd373359.040c4","ecd0ecf2.99d41","93aa962f.3144d","e5823b9b.d200f","dda61270.476b9","f0eeb60f.091b78","359e3b04.860634","dc6abb7.ed83248","ff0e6248.29e22","1cff0ac1.dc8705","147f3fb7.690568","f42bf06.8974d1","ef55a0fd.6d311","552f5d9b.570784","498662dd.42a45c","81c0cf07.5ef198","44daecc2.e5b2f4","cb902343.5f03a","e34f6cc2.af5ad8","480dae32.8a339"],"x":1735,"y":680,"wires":[]},{"id":"77ece62a.01347","type":"link in","z":"2294209a.0c95b","name":"users global = ACC Gagdet","links":["aea25a8a.fa4a58"],"x":1415,"y":680,"wires":[["38d35469.c1aa9c"]]},{"id":"4468c444.53ac84","type":"function","z":"4cbbc60.828563c","name":"Set application parameters","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n//  global.set(\"INIT\", false);\nmsg.INIT = {\n    APP_ID : env.get(\"APP_ID\"),\n    TYPE   : env.get(\"TYPE\"),\n        APP_ID2 : env.get(\"-APP_ID\"),\n    TYPE2   : env.get(\"-TYPE\")\n};\nmsg.INIT.contextState = global.get(\"INIT\")\n\n// if (msg.INIT.hasOwnProperty(\"contextState\") === false || msg.INIT.contextState !== true){\n\n        global.set(\"applicationId\",  env.get(\"APP_ID\"));\n        global.set(\"env\",  {APP_ID:  env.get(\"APP_ID\"), TYPE:  env.get(\"TYPE\")});\n        var globalContextData  =  fs.readdirSync(\"./projects/revotio/globalContextData\");\n        _.each(globalContextData, function(Item , index){\n            if (Item === 'generic.json' ||Item === env.get(\"TYPE\")+'.json'){\n                    // node.send({filename : \"./.node-red/projects/pmt_baseApp/globalContextData/\" + Item})\n                _.each(JSON.parse(fs.readFileSync(\"./projects/revotio/globalContextData/\" + Item)), function(globalContextItem, globalContextItemKey){\n                    global.set(globalContextItemKey, globalContextItem);\n                });\n            }\n        });\n        \n        global.set(\"INIT\", true);\n        msg.payload = \"CONTEXT <<<< \" + env.get(\"TYPE\") + \" >>> done\";\n\n// }\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":480,"y":180,"wires":[[]]},{"id":"ce4931e.2eadfd","type":"function","z":"4cbbc60.828563c","name":"Global context functions","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nglobal.set(\"functions\" ,{lastChange : new Date()})\n\nnumberToAlphabet = function(val) {\n\n    return (val + 9).toString(36).toUpperCase()\n};\nglobal.set(\"functions.numberToAlphabet\" ,numberToAlphabet)\n\n// get Data\n// global.get(\"functions.dataTableObject\")(dataTableObject, columns, data, buttons) \ndataTableObject =  function(dataTableObject, columns, data, buttons) {\n    // Get libraries\n    const Moment = global.get('moment');\n    const MomentRange = global.get('momentrange');\n    const moment = MomentRange.extendMoment(Moment)\n    var momentTimezone = global.get('moment_timezone');\n    var lodash = global.get('lodash');\n    var _ = global.get('underscore');\n    var BSON = global.get('bson');\n    var ObjectID = BSON.ObjectID;\n    var accounting = global.get('accounting'); \n    var accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n  \n    \n    // validate inputs\n    \n    if ( typeof dataTableObject !== 'object'                ||\n            dataTableObject.hasOwnProperty(\"gadgetId\")      ||\n            dataTableObject.hasOwnProperty(\"gadgetName\")    ||\n            dataTableObject.hasOwnProperty(\"gadgetType\")    ||\n            dataTableObject.hasOwnProperty(\"gadgetData\")    ||\n            dataTableObject.hasOwnProperty(\"gadgetOptions\") ){\n        return dataTableObject\n    }\n    else if ( Array.isArray(columns) === false){\n        return dataTableObject\n    }\n    else if ( Array.isArray(data) === false ){\n        return dataTableObject\n    }\n    else {\n    var tableColumnData  =  { \n         \"columnHead\" : columns,\n          \"columnOptions\": {\n            \"columnStyle\": {\n              \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\n    \n    // generate rows\n    var tableRowData = []\n            _.each(data, function(dataItem, dataIndex){\n                \n                obj = {\n                       \"rowData\" :[],\n                               \"rowOptions\": {\n                               //   \"state\": \"warning\",\n                                 \"globalClick\": true,\n                                 \"style\": {\n                                   \"width\": \"20%\"\n                                 }\n                               },\n                       }\n                 _.each(columns, function(columnsItem, columnsIndex){\n                        if ( columnsItem.hasOwnProperty('headKey') && dataItem.hasOwnProperty(columnsItem.headKey)\n                            ){\n                              obj.rowData.push({\n                                   \"data\"    : dataItem[columnsItem.headKey],\n                                   \"type\"    : typeof(dataItem[headKey]),\n                                   \"headKey\" : columnsItem.headKey,\n                                   \"hidden\"  : false,\n                                   \"editable\": false\n                              })\n                            }\n            })\n            \n            tableRowData.push(obj)\n        })\n        \n    // define paged value\n    if (tableRowData.length > 10 ){\n        paged = 10;\n    } else {\n        paged = tableRowData.length;\n    }\n    \n    dataTableObject.gadgetOptions = {\n                                          \"allowSearch\": true,\n                                          \"maxItems\": paged,\n                                          \"striped\": true,\n                                          \"export\": true\n                                        };\n    dataTableObject.gadgetData.tableColumnData  =  tableColumnData;\n    dataTableObject.gadgetData.tableRowData     =  tableRowData;\n    // dataTableObject.gadgetData.tableButton =  tableButton;\n    \n    \n    return dataTableObject\n  }\n    \n    }\nglobal.set(\"functions.dataTableObject\" ,dataTableObject)\n\n\nis_dir = function(path) {\n     var fs = global.get('fsextra');\n                            try {\n                                var stat = fs.lstatSync(path);\n                                return stat.isDirectory();\n                            } catch (e) {\n                                // lstatSync throws an error if path doesn't exist\n                                return false;\n                            }\n                        }\nglobal.set(\"functions.is_dir\" ,is_dir)\n\n\nsyncDirlist = function(path) {\n            \n            if (path.substr(path.length - 1) !== \"/\" ){\n                path = path +\"/\"\n            }\n            \n            var _ = global.get('underscore');\n            var fs = global.get('fsextra');\n            var responseObj = { \n                                    path : path,\n                                    parent:{\n                                        filePath : path,\n                                        absolutePath : path,\n                                        isDirectory : global.get(\"functions.is_dir\")(path)\n                                    },\n                                }\n            if (!responseObj.parent.isDirectory){\n                  responseObj.parent.isFile = true\n                 responseObj.parent.type = \"file\" \n            } else if ( responseObj.parent.isDirectory){\n                responseObj.parent.type = \"dir\" \n            }\n           \n        \n        \n        if (responseObj.parent.isDirectory){\n            responseObj.child = []\n            _.each(fs.readdirSync(responseObj.parent.absolutePath), function(item, index){\n                if (item.substr(0,1) !== \".\"){\n                    \n                \n                Obj ={\n                    filePath : item,\n                    absolutePath : responseObj.parent.absolutePath+item +\"/\",\n                    isDirectory : global.get(\"functions.is_dir\")(responseObj.parent.absolutePath+item +\"/\"),\n                }\n                \n                if (!Obj.isDirectory){\n                     Obj.isFile = true\n                     Obj.type = \"file\" \n                } else if ( Obj.isDirectory){\n                    Obj.type = \"dir\" \n                    // Obj.child = global.get(\"functions.syncDirlist\")(Obj.absolutePath)\n                }\n                \n                responseObj.child.push(Obj)\n                   \n                }\n            })\n        } \n        return responseObj;\n}\n\nglobal.set(\"functions.syncDirlist\" ,syncDirlist)\n\n//es5\ncapitalize = function capitalize(string) {\n    return string.slice(0,1).toUpperCase() + string.slice(1).toLowerCase();\n}\nglobal.set(\"functions.capitalize\" ,capitalize)\n\n// get file extention function\n\ngetExtension = function(filename) {\n    var i = filename.lastIndexOf('.');\n    return (i < 0) ? '' : filename.substr(i);\n}\nglobal.set(\"functions.getExtension\" ,getExtension)\n\n\n// get Data\ndaysYear =  function(year) {\n  return global.get(\"functions.isLeapYear\")(year) ? 366 : 365;\n}\nglobal.set(\"functions.daysYear\" ,daysYear)\n\nisLeapYear = function (year) {\n     return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n}\nglobal.set(\"functions.isLeapYear\" ,isLeapYear)\n\nformatFunction = function(inner){\n    if (inner.length > -1 ){\n        var i;\n        for (i = 0; i < inner.length; i++) {\n             if (inner[i].inner.length > -1){\n                        inner[i].inner = global.get(\"functions.formatFunction\")(inner[i].inner)\n                    } \n            if (inner[i].keys.length > -1){\n                var x;\n                for (x = 0; x < inner[i].keys.length; x++) {\n                            var ObjectKeys = Object.keys(inner[i].keys[x].values)\n                            var y;\n                            for (y = 0; y < ObjectKeys.length; y++) {\n                                 if (\n                                     ObjectKeys[y] !== \"Amount\" && \n                                     ObjectKeys[y] !== \"Number\" &&\n                                     ObjectKeys[y] !== \"Transactions\" &&\n                                     ObjectKeys[y] !== \"Categories\" &&\n                                     ObjectKeys[y] !== \"Work packages\" &&\n                                     ObjectKeys[y] !== \"Projects\" &&\n                                     ObjectKeys[y] !== \"Project\" &&\n                                     ObjectKeys[y] !== \"Memberships\" &&\n                                     ObjectKeys[y] !== \"Employee's\" &&\n                                     ObjectKeys[y] !== \"Users\" &&\n                                     ObjectKeys[y] !== \"Events\" &&\n                                     ObjectKeys[y] !== \"To do\" &&\n                                     ObjectKeys[y] !== \"Processed\" &&\n                                     ObjectKeys[y] !== \"FTE\" &&\n                                     isNaN(inner[i].keys[x].values[ObjectKeys[y]]) === false){\n                                   inner[i].keys[x].values[ObjectKeys[y]] = accounting.formatMoney(inner[i].keys[x].values[ObjectKeys[y]], accountingoptions );\n                                } else  if ((ObjectKeys[y] === \"Amount\" || ObjectKeys[y] === \"Number\") && isNaN(inner[i].keys[x].values[ObjectKeys[y]]) === false){\n                                    inner[i].keys[x].values[ObjectKeys[y]] = Math.round(Number(inner[i].keys[x].values[ObjectKeys[y]])*100)/100;\n                                }\n                            }\n                }\n            } \n        }\n    }\n    return inner;\n};\n\nglobal.set(\"functions.formatFunction\" ,formatFunction)\n\n\ndepartmentConversion =  function(value, type, departments) {\n        \n        var lodash = global.get('lodash');\n        var _ = global.get('underscore');\n        var BSON = global.get('bson');\n        var ObjectID = BSON.ObjectID;\n        \n        if (type === \"id\"){\n         if (value === \"ConservationBiology\" || value === \"Conservation biology\" || value === \"CB\"){\n                    return lodash.find(departments,{name: \"Conservation biology\"})._id\n                   \n                }\n         else if (value === \"EnvironmentalBiology\" || value === \"Environmental Biology\" || value === \"EB\"){\n                    return lodash.find(departments,{name: \"Environmental Biology\"})._id\n                   \n                }\n        else if (value === \"Central\"){\n                    return lodash.find(departments,{name: \"Central\"})._id\n                   \n                    \n         } else  if (value === \"IndustrialEcology\" || value === \"Industrial Ecology\"|| value === \"IE\"){\n                        return lodash.find(departments,{name: \"Industrial Ecology\"})._id\n                       \n                }\n                \n                // return DepartmentObj._id\n        } else if (type === \"name\"){\n            \n            Dept = lodash.find(departments,{_id: new ObjectID(value)})\n            if (Dept){\n                return Dept.name\n            } else {\n                 return \"No department found\"\n            }\n            \n            \n            \n            // _.each(departments, function(Item, Index){\n            //     return {value:value, type:type, departments:departments, Item:Item,Index:Index }\n            //         if (String(Item._id) === String(value) ){\n            //               return Item.Name\n            //         }\n            // })\n            \n        }\n\n    \n}\nglobal.set(\"functions.departmentConversion\" ,departmentConversion)\n\n\nformOptions =  function(array, key, value, type, groupKey,  groupKeyArray, groupKeyArrayKey, groupKeyArrayValue) { \n    \n        var lodash = global.get('lodash');\n        var _ = global.get('underscore');\n        var Moment = global.get('moment');\n        var MomentRange = global.get('momentrange');\n        var moment = MomentRange.extendMoment(Moment);\n        \n        if (Array.isArray(array) === false ||  array.length <= 0){\n          output =  \"array is not an array or has no elements\";  \n        }\n           \n        else if (key === undefined || typeof key !== 'string'){\n               output =  \"key must be present and a string\";\n        }\n        else if (value === undefined || typeof value !== 'string'){\n               output = \"value must be present and a string\";\n           }\n        else if (type === undefined || typeof type !== 'string' || (type !== 'select' &&  type !== 'opt-group')){\n               output = \"type must be present and a string && === select || === opt-group\";} \n        else {\n            \n               \n              if (type === 'select'){\n                   output = {};\n                   \n                   _.each(array, function(Item, Index){\n                       \n                        if (Item.hasOwnProperty(key) && Item.hasOwnProperty(value) ){\n                          output[Item[key]] = Item[value];\n                        } else {\n                            output[\"ERROR \" + Index] = Item\n                        }\n                   })\n                   return output;\n              } \n              else if (type === 'opt-group') {\n                    \n                    if (Array.isArray(groupKeyArray) ){\n                        \n                        if ((groupKeyArrayKey === undefined || typeof groupKeyArrayKey !== 'string') || (groupKeyArrayValue === undefined || typeof groupKeyArrayValue !== 'string')  ){\n                             output =  \"If groupKeyArray presented, groupKeyArrayKey & groupKeyArrayValue is needed and should be type STRING\";\n                        } else {\n                            \n                            groupedArray = lodash.groupBy(array, groupKeyArrayKey);\n                            output = {};\n                            _.each(array , function(Item, Index){\n                                \n                                if (output.hasOwnProperty(groupedArray[Item[groupKey][0][groupKeyArrayValue]]) === false){\n                                    output[groupedArray[Item[groupKey][0][groupKeyArrayValue]]] = {};\n                                }\n                                \n                                output[groupedArray[Item[groupKey][0][groupKeyArrayValue]]][Item.key] = Item.value;\n                            });\n                        }\n               }\n           }\n        }\n    \n}\nglobal.set(\"functions.formOptions\" ,formOptions)\n    \nfileManagement =  function(source, destination, sessionId, operation) {\n        \n        var fs = global.get('fsextra');\n        var _ = global.get('underscore');\n        \n        if (!sessionId ){\n            return \"Required data not present (sessionId)\"\n        }\n        \n        // check if file exists\n        else if (!fs.existsSync(source)){\n            return \"Invalid source\"\n        }\n        \n        \n        else if (!operation || operation === \"copySync\"){\n                \n                if (!source||!destination){\n                     return \"Required data not present (source OR destination) \"\n                } \n                else {\n                            if (destination.slice(0,1) === \"/\"){\n                                newDestination = destination.slice(1)\n                                destination = newDestination\n                            }\n                            destinationFolder = \"\"\n                            _.each(destination.split(\"/\"), function(item , Index){\n                                if (Index +1 !== destination.split(\"/\").length ){\n                                    destinationFolder =  destinationFolder + \"/\" + item\n                                }\n                            })\n                      \n                           \n                            fs.mkdirsSync(String(global.get(\"DomainProperties.rootFolder\") + global.get(\"DomainProperties.filesFolder\") +  sessionId +  \"/TEMP/\" + destinationFolder).replace(/\\/{2}/g, \"/\"));\n                            \n                            fs.copySync(source, String(global.get(\"DomainProperties.rootFolder\") + global.get(\"DomainProperties.filesFolder\") +  sessionId +  \"/TEMP/\" + destination).replace(/\\/{2}/g, \"/\"))\n                    \n                            return global.get(\"DomainProperties.RootDomain\") +    String(global.get(\"DomainProperties.filesFolder\") +  sessionId +  \"/TEMP/\" + destination).replace(/\\/{2}/g, \"/\")\n                                                                              \n                } \n            \n        }\n                else if (!operation || operation === \"copySyncCore\"){\n                \n                if (!source||!destination){\n                     return \"Required data not present (source OR destination) \"\n                } \n                else {\n                            if (destination.slice(0,1) === \"/\"){\n                                newDestination = destination.slice(1)\n                                destination = newDestination\n                            }\n                            \n                      \n                            \n                            fs.copySync(source, global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") +  sessionId +  \"/TEMP/\" + destination)\n                    \n                            return global.get(\"DomainProperties.filesFolder\") +  sessionId +  \"/TEMP/\" + destination\n                    \n                }\n            \n        }\n        \n        else if (operation === \"emptyDirSync\")\n                {\n                    fs.emptyDirSync(global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") +sessionId + \"/TEMP\")\n                     return {state : 'success', message: \"emptyDirSync - \" + global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") +sessionId + \"/TEMP\"+ \" - Success\"}\n                   }\n        else if (operation === \"removeSync\")\n                {\n                    fs.removeSync(global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") +sessionId)\n                    return {state : 'success', message: \"removeSync - \" + global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") +sessionId + \"/TEMP\"+ \" - Success\"}\n                \n                }\n                \n    \n        else if (operation === \"initSessionFolder\"){\n            \n            fs.ensureDirSync(global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") )\n            fs.ensureDirSync(global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") + sessionId)\n            // fs.ensureDirSync(global.get(\"DomainProperties.publicFolder\") + sessionId + \"/SystemFiles\" )\n            fs.ensureDirSync(global.get(\"DomainProperties.publicFolder\") + global.get(\"DomainProperties.filesFolder\") + sessionId+ \"/TEMP\" )\n            \n            fs.copySync(global.get(\"DomainProperties.rootPath\") + \"/SystemFiles\" , global.get(\"DomainProperties.publicFolder\") +global.get(\"DomainProperties.filesFolder\") + \"/SystemFiles\" )\n            \n        }\n                \n       \n    \n}\nglobal.set(\"functions.fileManagement\" ,fileManagement)\n\n       \nformatTime = function (time) {\n    var _ = global.get('underscore');\n    //split startTime on \":\"\n    arr = time.split(\":\");\n    \n    newTime = \"\"\n    \n    _.each(arr, function(Item, index){\n        if (Item.length === 1){\n            newTime = newTime + \"0\"+Item\n        } else (\n            newTime = newTime +Item\n        )\n        \n        if (index === 0){\n           newTime = newTime + \":\" \n        }\n    \n    })\n    \n     return newTime;\n}\n\nglobal.set(\"functions.formatTime\" ,formatTime)\nglobal.set(\"functions.lastUpdate\" ,moment().format())\n// global.get(\"functions.fileManagement\")( source, destination, msg.RevotioData, operation) // source, destination, RevotioData, operation\nreturn msg;","outputs":1,"noerr":0,"x":470,"y":140,"wires":[[]]},{"id":"a206fa2f.9bb658","type":"link in","z":"aec22158.fe4e38","name":"User authentication design","links":["84671937.4d3118","e1c31a15.098aa8","c199e887.a6da4"],"x":90,"y":299.99999618530273,"wires":[["827557d5.fcca3"]]},{"id":"a836c292.d3afe","type":"http response","z":"aec22158.fe4e38","name":"","statusCode":"","headers":{},"x":545,"y":299.99999618530273,"wires":[]},{"id":"1c72090c.42333f","type":"function","z":"aec22158.fe4e38","name":"User authentication design","func":"msg.payload.design = \n{\n    \"0b8c4e59-5cc1-f8fe-7714-8d27013939ca\": {\n        \"flex\": \"1 1 0%\",\n        \"box-sizing\": \"border-box\"\n    },\n    \"429ffeb5-0560-0dbe-f639-19662ec25d8c\": {\n        \"width\": \"100%\",\n        \"padding\": \"0px 0px 0px 0px\",\n        \"margin\": \"0px\",\n        \"text-align\": \"left\",\n        \"flex-direction\": \"row\",\n        \"box-sizing\": \"border-box\",\n        \"overflow\": \"hidden\",\n        \"background\": \"url('https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80')\",\n        \"background-size\": \"cover\"\n    },\n    \"8a4f3f00-a4f7-0402-cf9d-05c293268ff0\": {\n        \"width\": \"400px\",\n        \"min-width\": \"400px\",\n        \"max-width\": \"400px\",\n        \"overflow\": \"hidden !important\",\n        \"overflow-anchor\": \"none\",\n        \"box-shadow\": \"0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)\",\n        \"background-color\": \"#fff\",\n        \"padding\": \"33px\"\n    },\n    \"c952a30e-7d40-387c-26b3-dd231a2cdca3\": {\n        \"display\": \"none\"\n\n    },\n    \"100ab4f9-91ac-67ff-61d3-35c02540cdaa\": {\n        \"display\": \"none\"\n    }\n}\n// {\n//     // '9e859d4a-16d7-fcf7-9c79-b828bbf1d262': global.get('topbar_design') \n// //     '8a4f3f00-a4f7-0402-cf9d-05c293268ff0': {\n// // 'background-image': 'url(\"https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\")',\n// //         // 'background-image': 'url(\"https://www.pnoconsultants.com/nl/wp-content/themes/pno/images/PNO-ouroffice.png\")',\n        \n// //         'background-repeat': 'no-repeat',\n// //         'background-size': 'cover',\n// //         'background-position': 'center center',\n// //         'border': '2px solid #6abf6b'\n// //     },\n//     \"0b8c4e59-5cc1-f8fe-7714-8d27013939ca\":{\n//         'background-image': 'url(\"https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\")',\n//         // 'background-image': 'url(\"https://www.pnoconsultants.com/nl/wp-content/themes/pno/images/PNO-ouroffice.png\")',\n        \n//         'background-repeat': 'no-repeat',\n//         'background-size': 'cover',\n//         'background-position': 'center center',\n//     //     'border': '2px solid #6abf6b'\n//     },\n// }\n\n\nreturn msg;","outputs":1,"noerr":0,"x":395,"y":299.99999618530273,"wires":[["a836c292.d3afe"]]},{"id":"dd573c4c.643968","type":"link in","z":"aec22158.fe4e38","name":"User account activation - design","links":["b12e289c.d6ecc8","6d0913e4.ac8bbc","18c634ff.b1dad3"],"x":90,"y":859.9999961853027,"wires":[["c78d53d2.e65ff"]]},{"id":"3ae4ab64.9e2994","type":"http response","z":"aec22158.fe4e38","name":"","statusCode":"","headers":{},"x":625,"y":859.9999961853027,"wires":[]},{"id":"35a2a99e.50eb36","type":"function","z":"aec22158.fe4e38","name":"User account activation -  design","func":"msg.payload.design = \n{\n    \"117f1957-0ced-b87a-9f9e-950419047d14\": { // image \n        \"flex\": \"1 1 0%\",\n        \"box-sizing\": \"border-box\"\n    },\n    \"f9392e7b-875b-15d8-9a16-49c82081707b\": { // container \n        \"width\": \"100%\",\n        \"padding\": \"0px 0px 0px 0px\",\n        \"margin\": \"0px\",\n        \"text-align\": \"left\",\n        \"flex-direction\": \"row\",\n        \"box-sizing\": \"border-box\",\n        \"overflow\": \"hidden\",\n        \"background\": \"url('https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80')\",\n        \"background-size\": \"cover\"\n    },\n    \"fb9f31b6-9fc2-1a97-3c5e-eeb00e1edd5b\": { // form\n        \"width\": \"400px\",\n        \"min-width\": \"400px\",\n        \"max-width\": \"400px\",\n        \"overflow\": \"hidden !important\",\n        \"overflow-anchor\": \"none\",\n        \"box-shadow\": \"0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)\",\n        \"background-color\": \"#fff\",\n        \"padding\": \"33px\"\n    },\n    \"c952a30e-7d40-387c-26b3-dd231a2cdca3\": {\n        \"display\": \"none\"\n\n    },\n    \"100ab4f9-91ac-67ff-61d3-35c02540cdaa\": {\n        \"display\": \"none\"\n    }\n}\n// {\n//     // '9e859d4a-16d7-fcf7-9c79-b828bbf1d262': global.get('topbar_design') \n// //     '8a4f3f00-a4f7-0402-cf9d-05c293268ff0': {\n// // 'background-image': 'url(\"https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\")',\n// //         // 'background-image': 'url(\"https://www.pnoconsultants.com/nl/wp-content/themes/pno/images/PNO-ouroffice.png\")',\n        \n// //         'background-repeat': 'no-repeat',\n// //         'background-size': 'cover',\n// //         'background-position': 'center center',\n// //         'border': '2px solid #6abf6b'\n// //     },\n//     \"0b8c4e59-5cc1-f8fe-7714-8d27013939ca\":{\n//         'background-image': 'url(\"https://images.unsplash.com/photo-1472289065668-ce650ac443d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\")',\n//         // 'background-image': 'url(\"https://www.pnoconsultants.com/nl/wp-content/themes/pno/images/PNO-ouroffice.png\")',\n        \n//         'background-repeat': 'no-repeat',\n//         'background-size': 'cover',\n//         'background-position': 'center center',\n//     //     'border': '2px solid #6abf6b'\n//     },\n// }\nreturn msg;","outputs":1,"noerr":0,"x":465,"y":859.9999961853027,"wires":[["3ae4ab64.9e2994"]]},{"id":"ce9cd56d.b714d","type":"link in","z":"aec22158.fe4e38","name":"two step authentication - design","links":["e16c485c.ea1fd8","f01f2b5d.c7323","c42395c9.e7a698"],"x":90,"y":1319.9999961853027,"wires":[["cb673224.c23b78"]]},{"id":"a8584b7c.1c2768","type":"http response","z":"aec22158.fe4e38","name":"","statusCode":"","headers":{},"x":605,"y":1319.9999961853027,"wires":[]},{"id":"1121a4d9.54acc3","type":"function","z":"aec22158.fe4e38","name":"two step authentication -  design","func":"\nreturn msg;","outputs":1,"noerr":0,"x":425,"y":1319.9999961853027,"wires":[["a8584b7c.1c2768"]]},{"id":"a885e943.ebfb1","type":"link in","z":"aec22158.fe4e38","name":"Reset password - design","links":["1eeb4e54.0acdd2","32d05b4.8adeca4","e98e6ae3.ce1128"],"x":90,"y":2119.9999961853027,"wires":[["c4b9da22.c433d8"]]},{"id":"42c09172.2ae508","type":"http response","z":"aec22158.fe4e38","name":"","statusCode":"","headers":{},"x":565,"y":2119.9999961853027,"wires":[]},{"id":"777344ad.7bee8c","type":"function","z":"aec22158.fe4e38","name":"Reset password -  design","func":"\nreturn msg;","outputs":1,"noerr":0,"x":405,"y":2119.9999961853027,"wires":[["42c09172.2ae508"]]},{"id":"ec952e8b.ee99","type":"link in","z":"e5822137.be45d","name":"organization global - design","links":["c98c548a.95f4b","ead712f3.5bdef8","5a5da070.ff4398"],"x":695,"y":320,"wires":[["c14b21e1.bdb88"]]},{"id":"df6d2863.899c68","type":"http response","z":"e5822137.be45d","name":"","statusCode":"","headers":{},"x":1270,"y":320,"wires":[]},{"id":"6953bde2.d417fc","type":"function","z":"e5822137.be45d","name":"organization global -  design","func":"msg.topbarContanerId =  \"9e859d4a-16d7-fcf7-9c79-b828bbf1d262\"\n// msg.payload.design = {}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1000,"y":320,"wires":[["bf03eb39.4bf4a8"]]},{"id":"d67bfacb.bc99a","type":"link in","z":"e5822137.be45d","name":"Organization overview - design","links":["2e050c0f.a8cfbc","435bb0f8.9671","b848d91c.ac4328"],"x":955,"y":720,"wires":[["33793ee0.00690a"]]},{"id":"5c3040ab.2074e8","type":"http response","z":"e5822137.be45d","name":"","statusCode":"","headers":{},"x":1650,"y":720,"wires":[]},{"id":"1b7d0cd5.8d326b","type":"function","z":"e5822137.be45d","name":"Organization overview -  design","func":"msg.topbarContanerId = \"887ef027-08c1-143b-b3e8-78667a8b6d83\"\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":720,"wires":[["57f4e13b.f3b188"]]},{"id":"7d1a67c6.b7534","type":"link in","z":"2294209a.0c95b","name":"users global - design","links":["bd06a339.36197","6860d9bc.c5f048","ff290d23.18df18"],"x":895,"y":380,"wires":[["d7e5d821.5a91a8"]]},{"id":"225467fa.c7f1f","type":"http response","z":"2294209a.0c95b","name":"","statusCode":"","headers":{},"x":1630,"y":380,"wires":[]},{"id":"693f75d0.9e78f4","type":"function","z":"2294209a.0c95b","name":"users global  -  design","func":"msg.topbarContanerId =  \"e9cfb98b-de00-838f-b1f4-570ced8d0504\";\n\nreturn msg;","outputs":1,"noerr":0,"x":1200,"y":380,"wires":[["9293b380.aed2b"]]},{"id":"58f638d8.6411a8","type":"link in","z":"d8703926.e2eca","name":"Calendar - design","links":["968bd75.1e66528","2a07e4b7.4d818c","54ddefb7.546dd8"],"x":835,"y":2200,"wires":[["81d84cd6.eb46a"]]},{"id":"9117f3ed.2b4b3","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":1510,"y":2160,"wires":[]},{"id":"832d99f5.acbba8","type":"function","z":"d8703926.e2eca","name":"Calendar -  design","func":"msg.topbarContanerId =  \"8b68c562-0f32-d996-4f9a-3b97d0eae920\";\nreturn msg;","outputs":1,"noerr":0,"x":1110,"y":2200,"wires":[["42c8b348.742f74"]]},{"id":"e3db2cd5.f280f","type":"link in","z":"d8703926.e2eca","name":"File manager - design","links":["8c8d487c.e9296","c2b06e25.fa9548","cba02ed1.86e7e8"],"x":615,"y":3700,"wires":[["9b32f7a0.4eb6f"]]},{"id":"57c1ff73.586f","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":1330,"y":3480,"wires":[]},{"id":"b6a11db5.8c34a8","type":"function","z":"d8703926.e2eca","name":"File manager  -  design","func":"msg.topbarContanerId =  \"16fecf79-24f7-3a0b-5c21-3edcc5bac77a\";\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":3560,"wires":[["68f61fa.e439ee"]]},{"id":"b59ec926.10591","type":"comment","z":"2294209a.0c95b","name":"DESIGN","info":"","x":880,"y":340,"wires":[]},{"id":"ea7a914b.d9859","type":"comment","z":"2294209a.0c95b","name":"INIT","info":"","x":890,"y":560,"wires":[]},{"id":"7cdd4e0a.69bdb8","type":"comment","z":"e5822137.be45d","name":"DESIGN","info":"","x":700,"y":280,"wires":[]},{"id":"4f074785.175168","type":"comment","z":"e5822137.be45d","name":"DESIGN","info":"","x":960,"y":680,"wires":[]},{"id":"37ab5a6c.a90106","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":135,"y":819.9999961853027,"wires":[]},{"id":"650cfae5.573e4c","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":105,"y":939.9999961853027,"wires":[]},{"id":"efaa6686.80c558","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":75,"y":259.99999618530273,"wires":[]},{"id":"f79fd07b.c1e458","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":205,"y":339.99999618530273,"wires":[]},{"id":"d569a771.280e","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":115,"y":1279.9999961853027,"wires":[]},{"id":"18b10abd.bd5515","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":125,"y":1399.9999961853027,"wires":[]},{"id":"7c65cd91.67188c","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":95,"y":2079.9999961853027,"wires":[]},{"id":"3a71e54.a77a89a","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":85,"y":2199.9999961853027,"wires":[]},{"id":"c40ec1db.2c50d","type":"function","z":"e5822137.be45d","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"User\",\n        FormActionType : \"Create\",\n        FormData:{\n            organization_id : msg.RevotioData.FlowData.organization_id\n        },\n        organization_id : msg.RevotioData.FlowData.organization_id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3820,"y":980,"wires":[["1132ade.85a9e52"]]},{"id":"2e99f46b.4490ec","type":"function","z":"aec22158.fe4e38","name":"finalize user account","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar crypto = global.get('crypto');\n\n\n\ndelete msg.RevotioData.FlowData.UserObj.hash\ndelete msg.RevotioData.FlowData.UserObj.active\ndelete msg.RevotioData.FlowData.UserObj.activationToken\n\nmsg.payload = [{user: new ObjectID(msg.RevotioData.FlowData.Data.UserData._id)},\n               {\"$set\" : msg.RevotioData.FlowData.UserObj},\n               {upsert:true}\n               \n               ];\nmsg.operation = \"update\"\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3960,"y":920,"wires":[["62ed20f0.1e896"]],"outputLabels":["invalid, "]},{"id":"36833fec.f99c5","type":"function","z":"2294209a.0c95b","name":"Set Form Data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nfindObj = {\n                    query : {\n                            query :{user:new ObjectID(msg.RevotioData.PostData.gadgetData.appUserId) }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_accounts',\n                    operation:'findOne',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                   msg.RevotioData.FlowData.Form = {\n                        FormType : \"User\",\n                        FormActionType : \"Edit\",\n                        FormData:res\n                    };\n                    node.send(msg) \n            })   \n","outputs":1,"noerr":0,"x":2960,"y":760,"wires":[["b0ed4707.f5ac"]]},{"id":"f347dd79.54981","type":"comment","z":"4cbbc60.828563c","name":"Functions","info":"","x":200,"y":80,"wires":[]},{"id":"1c4c9d0e.1060fb","type":"comment","z":"4cbbc60.828563c","name":"settings","info":"","x":190,"y":180,"wires":[]},{"id":"a17c4dea.e8ba18","type":"function","z":"d8703926.e2eca","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"32a1cabc-8876-d019-6fbb-43aa5cc91f76\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2455,"y":4113.333646774292,"wires":[["44f19a87.24091c"]]},{"id":"b3bed852.a529c8","type":"subflow:45759581.11da84","z":"d8703926.e2eca","name":"","x":2305,"y":4113.333646774292,"wires":[["a17c4dea.e8ba18"]]},{"id":"44f19a87.24091c","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2570,"y":4113.333646774292,"wires":[]},{"id":"cbbdb354.3aebc","type":"link out","z":"d8703926.e2eca","name":"","links":["1a3f70d.1f1650f","12ee5fc7.99b8a8","54220693.60c268","3835b64a.b8e03a"],"x":1555,"y":3780,"wires":[]},{"id":"c472049e.6ca8b","type":"function","z":"d8703926.e2eca","name":"ensure dir","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    fs.ensureDirSync(global.get(\"DomainProperties.rootFolder\") + \"/organization/\"+ msg.RevotioData.FlowData.organization_id)\n  \n\nreturn msg;","outputs":1,"noerr":0,"x":1760,"y":3860,"wires":[["15c79a10.01a706"]]},{"id":"15c79a10.01a706","type":"link out","z":"d8703926.e2eca","name":"","links":["1a3f70d.1f1650f","12ee5fc7.99b8a8","54220693.60c268"],"x":1835,"y":3860,"wires":[]},{"id":"6b77ab83.8e218c","type":"function","z":"d8703926.e2eca","name":"Breadcrumb organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\nOrgKeysOptions = [];\n\n\norgs = msg.organizations\nprojects = msg.projects;\nwps = msg.wps;\nparticipants = msg.payload\nmsg.test = []\n\n\n data = []\n \nif (orgs && orgs.length > 0){\n OrgKeysOptions = []\norgName = \"Select organization\"\norgId = \"\"\n_.each(orgs, function(Item, Index){\n    \n    if (String(Item._id) ==  String(msg.RevotioData.FlowData.organization_id)){\n        msg.RevotioData.FlowData.Data.OrganizationData = Item\n    }\n    OrgKeysOptions.push({ key: \"organization\", value: Item.name , icon: global.get(\"icons.fas.organization\") , Page : 'organization overview', organization_id: Item._id})\n\n})\n\nvar OrgObj = {\n            name: 'organizations',\n            // label: msg.RevotioData.FlowData.Data.OrganizationData.name, // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.organization\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            FormType: \"Organization\",\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            // organization_id : msg.RevotioData.FlowData.Data.OrganizationData._id,\n            select: {\n                    values: OrgKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    }\n    \nif (msg.RevotioData.FlowData.Data.hasOwnProperty('OrganizationData')){\n    OrgObj.label=  msg.RevotioData.FlowData.Data.OrganizationData.name\n    OrgObj.organization_id  = msg.RevotioData.FlowData.Data.OrganizationData._id\n} else {\n     OrgObj.label=  \"Organizations\"\n}\n data.push(OrgObj)\n \n}\n// ****************************\n                msg.test.push({data:data , A:\"A\"})\n// ****************************\nif (projects && projects.length > 0){\n// create pro options  \nvar ProKeysOptions = [];\n\n_.each(projects, function(Pro, Index){\n    msg.test.push({Pro:Pro , B:\"B\"})\n        if (String(Pro.organization_id) === String(msg.RevotioData.FlowData.organization_id)){\n                ProKeysOptions.push({ key: \"project\", value: Pro.ProjectData.name , icon: global.get(\"icons.fas.project\") , Page : 'project overview', project_id: Pro.ProjectData._id, organization_id:Pro.organization_id})\n           \n            if (msg.RevotioData.FlowData.hasOwnProperty(\"project_id\") && new ObjectID(Pro._id) === new ObjectID(msg.RevotioData.FlowData.project_id)){\n                    msg.RevotioData.FlowData.Data.ProjectData = Pro\n            }\n   \n        }\n    }) ;\n\nprojectObj = {\n            name: 'projects',\n            // label: msg.RevotioData.FlowData.Data.ProjectData.name, // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.project\"), // it can be empty if for example I just want to have a label\n            // organization_id : msg.RevotioData.FlowData.Data.OrganizationData._id,\n            // project_id: msg.RevotioData.FlowData.Data.ProjectData._id,\n            FormType: \"Project\",\n            isButton: false, // the button can have icon and label, only label or only icon\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: ProKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    }\n    \n    \nif (msg.RevotioData.FlowData.Data.hasOwnProperty('OrganizationData')){\n    projectObj.organization_id  = msg.RevotioData.FlowData.Data.OrganizationData._id\n}\nif (msg.RevotioData.FlowData.Data.hasOwnProperty('ProjectData')){\n    projectObj.label=  msg.RevotioData.FlowData.Data.ProjectData.name\n    projectObj.project_id  = msg.RevotioData.FlowData.Data.ProjectData._id\n}else {\n    projectObj.label=  \"Projects\"\n}\ndata.push(projectObj)\n\n\n}\n// ****************************\n                msg.test.push({data:data})\n// ****************************\n    // create WPKeysOptions options  \nif (msg.wps && msg.wps.length > 0){\nif ( msg.RevotioData.FlowData.entity === \"project\" &&  msg.RevotioData.FlowData.Data.ProjectData.funding_scheme_data.hasOwnProperty(\"complexity_level\") === false || msg.RevotioData.FlowData.Data.ProjectData.funding_scheme_data.complexity_level === \"basic\"){\n\n} else {\nvar WPKeysOptions = [] ;\n\n_.each(msg.wps, function(WP, Index){\n     if ( String(WP.project_id) === String(msg.RevotioData.FlowData.project_id) ){\n        WPKeysOptions.push({ key: \"work_package\", value: WP.work_package_name , icon: global.get(\"icons.fas.work_package\") , Page : 'work package overview', work_package_id: WP._id, project_id: WP.project_id, organization_id:msg.RevotioData.FlowData.organization_id})\n    }\n     data.push({\n            name: 'work package',\n            label: 'work package' , // it can be empty if for example I just want to have an icon\n            FormType: \"WorkPackage\",\n            icon: global.get(\"icons.fas.work_package\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: WPKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n    }) ;\n}\n}\n    // create org options  \nvar PartKeysOptions = [] ;\nif (participants && participants.length > 0){\n_.each(participants, function(Part, Index){\n    \n        PartKeysOptions.push({\n            \n            key: \"participant\", \n            value: Part.OrganizationData.name , \n            icon: global.get(\"icons.fas.participants\") , \n            Page : 'participant overview', \n            participant_id: Part._id, \n            project_id: Part.project_id, \n            organization_id:Part.organization_id\n            \n        })\n  \n    }) ; \n\ndata.push({\n            name: 'participant',\n            label: 'participant' , // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.participants\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            FormType: \"Participant\",\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: PartKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n    \n}\n\ndata.push({\n            name: 'filemanagement',\n            label: 'file management' , // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.file_management\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            Page : 'file management', \n            data : [{\n                project_id: msg.RevotioData.FlowData.project_id, \n                organization_id: msg.RevotioData.FlowData.organization_id}],\n            select: {\n                     values: [], \n                    // values: [{ key: \"filemanagement\", value: \"File management\", icon: global.get(\"icons.fas.file_management\") , Page : 'file management', project_id: msg.RevotioData.FlowData.project_id, organization_id: msg.RevotioData.FlowData.organization_id}],\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n\n// dashboards = []\n// dashboards.push({ \n//     key: \"dashboard\", \n//     value: \"Project dashboard\", \n//     icon: global.get(\"icons.fas.dashboard\") , \n//     Page : 'project dashboard', \n//     project_id: msg.RevotioData.FlowData.project_id, \n//     organization_id: msg.RevotioData.FlowData.organization_id})\n\n\ndata.push({\n            name: 'dashboards',\n            label: 'Dashboards' , // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.dashboard\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            Page : 'project dashboard', \n            data : [{\n                project_id: msg.RevotioData.FlowData.project_id, \n                organization_id: msg.RevotioData.FlowData.organization_id}],\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: [], \n                    // values: [{ \n                    //             key: \"dashboard\", \n                    //             value: \"Project dashboard\", \n                    //             icon: global.get(\"icons.fas.dashboard\") , \n                    //             Page : 'project dashboard', \n                    //             project_id: msg.RevotioData.FlowData.project_id, \n                    //             organization_id: msg.RevotioData.FlowData.organization_id}],\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n\n    \n//  data = [{\n//             name: 'organizations',\n//             label: msg.RevotioData.FlowData.Data.OrganizationData.name, // it can be empty if for example I just want to have an icon\n//             icon: global.get(\"icons.fas.organization\"), // it can be empty if for example I just want to have a label\n//             isButton: false, // the button can have icon and label, only label or only icon\n//             buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n//             organization_id : msg.RevotioData.FlowData.Data.OrganizationData._id,\n//             select: {\n//                     values: OrgKeysOptions,\n//                     options:    {\n//                                 searchable: true,\n//                                 placeholder: 'Type your search'\n//                                 }\n//                     }\n//     },\n//     {\n//             name: 'projects',\n//             label: msg.RevotioData.FlowData.Data.ProjectData.name, // it can be empty if for example I just want to have an icon\n//             icon: global.get(\"icons.fas.project\"), // it can be empty if for example I just want to have a label\n//             organization_id : msg.RevotioData.FlowData.Data.OrganizationData._id,\n//             project_id: msg.RevotioData.FlowData.Data.ProjectData._id,\n//             isButton: false, // the button can have icon and label, only label or only icon\n//             buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n//             select: {\n//                     values: ProKeysOptions,\n//                     options:    {\n//                                 searchable: true,\n//                                 placeholder: 'Type your search'\n//                                 }\n//                     }\n//     },\n//         {\n//             name: 'work package',\n//             label: 'work package' , // it can be empty if for example I just want to have an icon\n//             icon: global.get(\"icons.fas.work_package\"), // it can be empty if for example I just want to have a label\n//             isButton: false, // the button can have icon and label, only label or only icon\n//             buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n//             select: {\n//                     values: WPKeysOptions,\n//                     options:    {\n//                                 searchable: true,\n//                                 placeholder: 'Type your search'\n//                                 }\n//                     }\n//     },\n//   ]\n\n\n  \n\n    \n    \n    \nmsg.payload = {\n    gadgetsList: [{\n                gadgetId: 'edd49358-d337-050a-d1db-95de81828d06',\n                gadgetName: 'file manager breadcrumbs',\n                gadgetType: 'revotio-breadcrumbs',\n                gadgetData: {\n                  data: data,\n                  options: {\n                    separatorIcon: 'fas fa-angle-right', // if null it will display \">\" by default\n                    // separatorIconColor: 'pink'\n                  }\n                }\n              }]}\n\nreturn msg;","outputs":1,"noerr":0,"x":3200,"y":4200,"wires":[["7f170c1b.2dff24"]]},{"id":"761da830.89ae9","type":"function","z":"d8703926.e2eca","name":"get All WP's","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\nvar all, limited, end;\n\n\n// Get UserData\n\nif (msg.projects.length > 0){\n\nprojectPermission = lodash.find(msg.projects, {organization_id: new ObjectID(msg.RevotioData.FlowData.organization_id)})\n\n\n\nif (projectPermission.permission === 0 ){\n     \n    msg.payload = {project_id : new ObjectID(msg.RevotioData.FlowData.project_id)}\n    msg.operation = \"find.toArray\"\n    all = msg;\n    \n} else {\n\n        msg.payload =  [\n            { \n                \"$match\" : {\n                    \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                    \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                    \"type\" : \"work_packages\"\n                }\n            }, \n            { \n                \"$lookup\" : {\n                    \"from\" : \"work_packages\", \n                    \"localField\" : \"work_package_id\", \n                    \"foreignField\" : \"_id\", \n                    \"as\" : \"work_package_data\"\n                }\n            }, \n          \n            { \n                \"$unwind\" : {\n                    \"path\" : \"$work_package_data\", \n                    \"includeArrayIndex\" : \"arrayIndex\", \n                    \"preserveNullAndEmptyArrays\" : false\n                }\n            }, \n        ];\n    limited = msg;\n}\n} else {\n    end = msg\n}\n\nreturn [all, limited, end];","outputs":3,"noerr":0,"x":2770,"y":4180,"wires":[["7918c5a4.d6e234"],["5d92019b.cf953"],["6b77ab83.8e218c"]],"outputLabels":["all","limited","end"]},{"id":"7918c5a4.d6e234","type":"function","z":"d8703926.e2eca","name":"set WP","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'work_packages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                msg.wps = res\n          \n                query =  [\n                        { \n                            \"$match\" : {\n                                \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                                \"type\" : \"project\"\n                            }\n                        }, \n                        { \n                            \"$lookup\" : {\n                                \"from\" : \"organizations\", \n                                \"localField\" : \"organization_id\", \n                                \"foreignField\" : \"_id\", \n                                \"as\" : \"OrganizationData\"\n                            }\n                        }, \n                      \n                        { \n                            \"$unwind\" : {\n                                \"path\" : \"$OrganizationData\", \n                                \"includeArrayIndex\" : \"arrayIndex\", \n                                \"preserveNullAndEmptyArrays\" : false\n                            }\n                        }, \n                    ];\n                    // aggregate\n                    \n                                aggregateObj = {\n                                        query : { query : query,},\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'participants',\n                                        operation:'aggregate',\n                                        }\n                                        \n                                mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                                        msg.payload = res\n                                        node.send(msg) \n                                })  \n            \n            }) \n\n","outputs":1,"noerr":0,"x":2940,"y":4200,"wires":[["6b77ab83.8e218c"]]},{"id":"5d92019b.cf953","type":"function","z":"d8703926.e2eca","name":"set WP","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// aggregate\n\n            aggregateObj = {\n                    query : { query : msg.payload,},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n\n","outputs":1,"noerr":0,"x":2960,"y":4140,"wires":[["6b77ab83.8e218c"]]},{"id":"7f170c1b.2dff24","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":3335,"y":4200,"wires":[]},{"id":"f15b0094.d5f208","type":"function","z":"d8703926.e2eca","name":"Entity scope tabs ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// if (msg.RevotioData.FlowData.entity === \"employees\"){\n\n// var output = [{\n//                      \"label\":\"Overview\",\n//                      \"name\":\"Overview\",\n//                      \"value\":\"employee overview\",\n//                      \"options\":{\n//                         \"disabled\":false,\n//                         \"active\":false,\n                       \n//                         }\n//     },\n//     {\n//                      \"label\":\"Involvement\",\n//                      \"name\":\"Involvement\",\n//                      \"value\":\"employee involvement\",\n//                      \"options\":{\n//                         \"disabled\":false,\n//                         \"active\":false,\n                       \n//                         }\n//     },\n//     {\n//                      \"label\":\"Projects\",\n//                      \"name\":\"Projects\",\n//                      \"value\":\"employee projects overview\",\n//                      \"options\":{\n//                         \"disabled\":false,\n//                         \"active\":false,\n                       \n//                         }\n//     },\n//      {\n//                      \"label\":\"File management\",\n//                      \"name\":\"File management\",\n//                      \"value\":\"file management\",\n//                      \"options\":{\n//                         \"disabled\":false,\n//                         \"active\":false,\n                       \n//                         }\n//     },\n//      {\n//                      \"label\":\"Calendar\",\n//                      \"name\":\"Calendar\",\n//                      \"value\":\"calendar\",\n//                      \"options\":{\n//                         \"disabled\":false,\n//                         \"active\":false,\n                       \n//                         }\n//     }\n//     ]\n// dropdownKey = \"\";\n// _.each(output, function(Item, Index ){\n    \n//   if (Item.value === msg.RevotioData.session.Page){\n//       Item.options.active = true\n//       dropdownKey = Item.label\n//   } else {\n//       Item.options.active = false\n//   }\n    \n// })\n\n\n// msg.payload.gadgetsList = [{\n//     \"gadgetId\":\"257a77cd-cd2d-6454-660c-0f1c3abbc723\",\n//       \"gadgetName\":\"Entity scope tabs\",\n//       \"gadgetType\":\"revotio-tabs-select\",\n//       \"gadgetData\":{\n//          \"dropdown\":{\n//         //     \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n//         //     \"options\":DropDown\n//          },\n//          \"tabs\":[ {\n//               \"dropdownKey\":dropdownKey,\n//               \"fields\":output\n//          }],\n          \n//       }}];\n// } else {\n//     msg.payload.gadgetsList = [{\n//     \"gadgetId\":\"257a77cd-cd2d-6454-660c-0f1c3abbc723\",\n//       \"gadgetName\":\"Entity scope tabs\",\n//       \"gadgetType\":\"revotio-tabs-select\",\n//       gadgetOptions : {\n//      disable: true\n// },\n//       \"gadgetData\":{\n//          \"dropdown\":{\n//         //     \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n//         //     \"options\":DropDown\n//          },\n//          \"tabs\":[ {\n//               \"dropdownKey\":\"\",\n//               \"fields\":\"\"\n//          }],\n          \n//       }}];\n// }\n\n         \n         \n   \nreturn msg;","outputs":1,"noerr":0,"x":2125,"y":4093.333646774292,"wires":[["830d2d5c.7649a8","b3bed852.a529c8","d796834c.8c0fa"]]},{"id":"830d2d5c.7649a8","type":"link out","z":"d8703926.e2eca","name":"","links":["570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2270,"y":4033.333646774292,"wires":[]},{"id":"adde77e.36ce508","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":1660,"wires":[["2a715686.184dc2"]]},{"id":"2a715686.184dc2","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":1660,"wires":[["dec9532b.9dd5b"]]},{"id":"dec9532b.9dd5b","type":"function","z":"d8703926.e2eca","name":"create folder ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// check if folder exists\n\n// initSessionFolder\n\n\nmsg.result = global.get(\"functions.fileManagement\")( '', '',msg.RevotioData.session._id, \"initSessionFolder\") // source, destination, operation\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":1660,"wires":[[]]},{"id":"703176fa.277708","type":"function","z":"d8703926.e2eca","name":"Copy file  ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n// fileManagement =  function(source, destination, operation) {\n        \n//         var fs = global.get('fsextra');\n//         var _ = global.get('underscore');\n        \n//         if (!operation || operation === \"copy\"){\n                \n//                 // destinationDir = \"\"\n                \n//                 // _.each(destination.split(\"/\"), function(item, index){\n                    \n//                 //     if (index < destination.split(\"/\").length){\n//                 //         destinationDir = destinationDir + \"/\" + item\n//                 //     }\n                    \n                    \n//                 // })\n                \n//                 // fs.ensureDirSync(destinationDir)\n                \n//                 // check if destination has a '/'\n                \n//                 if (destination.slice(0,1) === \"/\"){\n//                     newDestination = destination.slice(1)\n//                     destination = newDestination\n//                 }\n                \n//                 fs.copySync(source, global.get(\"DomainProperties.publicFolder\") +  msg.RevotioData.session._id  +\"/TEMP/\" + destination)\n        \n//                 return global.get('DomainProperties.url')+  msg.RevotioData.session._id  + \"/TEMP/\" + destination\n        \n//         }\n\n       \n    \n// }\n// global.set(\"functions.fileManagement\" ,fileManagement)\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":1700,"wires":[[]]},{"id":"97dea856.949f78","type":"function","z":"d8703926.e2eca","name":"remove folder ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nmsg.result = global.get(\"functions.fileManagement\")( '', '',msg.RevotioData.session._id, \"removeSync\") // source, destination, operation\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":1780,"wires":[[]]},{"id":"206edb5.ff12fa4","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":1780,"wires":[["c77bdcc1.1cf66"]]},{"id":"c77bdcc1.1cf66","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":1780,"wires":[["97dea856.949f78"]]},{"id":"ea97a537.125cc","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":1740,"wires":[["819ef8aa.eefd2"]]},{"id":"819ef8aa.eefd2","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"x":400,"y":1740,"wires":[["ffd8408a.5a8388"]]},{"id":"ffd8408a.5a8388","type":"function","z":"d8703926.e2eca","name":"Copy file  ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nmsg.source = global.get(\"DomainProperties.rootPath\") + \"users/\" + msg.RevotioData.session.user_id + \"/user.png\";\n\nmsg.destination = \"/users/\" + msg.RevotioData.session.user_id + \"/user.png\";\n\n\nmsg.result = global.get(\"functions.fileManagement\")( msg.source, msg.destination,msg.RevotioData.session._id, \"copySync\") // source, destination, operation\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":1740,"wires":[[]]},{"id":"ced008b5.ac1428","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":1700,"wires":[["df33a453.126328"]]},{"id":"df33a453.126328","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"x":400,"y":1700,"wires":[["703176fa.277708"]]},{"id":"731a6500.243794","type":"function","z":"d8703926.e2eca","name":"Emplty folder ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nmsg.result = global.get(\"functions.fileManagement\")( '', '',msg.RevotioData.session._id, \"emptyDirSync\") // source, destination, operation\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":1820,"wires":[[]]},{"id":"ad290c94.8ac7a","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":1820,"wires":[["b8e81d01.7b728"]]},{"id":"b8e81d01.7b728","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":1820,"wires":[["731a6500.243794"]]},{"id":"995e907.94391f","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":280,"y":1860,"wires":[["8fb818cc.12c25"]]},{"id":"8fb818cc.12c25","type":"function","z":"d8703926.e2eca","name":"set msg","func":"msg = {\"_msgid\":\"8653a82f.4c86f8\",\"payload\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"INIT\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"RevotioData\":{\"init\":{\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\"},\"entity\":\"INIT\",\"session\":{\"_id\":\"5c7ce5c7288d0002d57d76be\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ0FZQUFBQ3dHbm9CQUFBZ0EiLCJ3ZWJnbCI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3d...\",\"deviceId\":\"be3700de3f6bc84e767724293da0dba7\",\"revotioSessionId\":\"5c7ce5c7d16b10dcb3d03966\",\"timestamp\":\"2019-03-04T08:45:59.248Z\",\"user_id\":\"5bc85af71eabf93884014c55\",\"applicationId\":\"5bacdd9fb9bf1c120bef1088\",\"UserData\":{\"_id\":\"5bc85af71eabf93884014c55\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":true,\"first_name\":\"Dafydd\",\"middle_name\":\"\",\"last_name\":\"Williams\",\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"\",\"avatar\":\"icons/user.png\",\"hash\":\"16a12bf7d0346155a121d024f5f23a269092647ccb62b1f0fb91f4c5b417bd3520fb3280159545f79c3b65a3fd823bb6d06d5d3e73a387160bf6d73b5917a4e0\",\"resetToken\":\"242f8798edbd957550ae0eba4613a7effa6a88cfa225633388\",\"login\":\"2019-03-04T08:45:35.179Z\",\"previousLogin\":\"2019-03-01T13:49:28.629Z\",\"loginAttempts\":2,\"blockAccount\":false,\"UserAccountData\":[{\"_id\":\"5bc85af81eabf93884014c56\",\"username\":\"dafydd@revotio.com\",\"created\":\"2018-10-18T10:05:43.811Z\",\"updated\":\"2018-10-18T10:05:43.811Z\",\"active\":false,\"email\":\"dafydd@revotio.com\",\"roles\":{\"usertype\":\"admin\"},\"salt\":\"dd5caaea8f44769734be67d562135c55\",\"activationToken\":\"856e6cf2feb9d878423d63f17834ec631b8b704e\",\"avatar\":\"icons/user.png\",\"user\":\"5bc85af71eabf93884014c55\",\"UserId\":\"5bc85af71eabf93884014c55\",\"user_type\":\"Admin_Users\",\"last_name\":\"Williams\",\"first_name\":\"Dafydd\",\"middle_name\":\"\"}],\"AppUserPermissionInfo\":[{\"_id\":\"5bcdafb31e040202e7b745c0\",\"user\":\"5bc85af71eabf93884014c55\",\"type\":\"organization\",\"permission\":0,\"type_id\":\"5b3360ce41c82d3f438035cb\",\"created\":\"2018-06-26T10:32:46.525Z\",\"updated\":\"2018-06-26T10:32:46.525Z\"}],\"type\":\"PNOAdmin\"},\"Page\":\"organizations global\"},\"FlowData\":{\"Data\":{}}},\"_event\":\"node:664d7e6.4b1e68\",\"req\":{\"_readableState\":{\"objectMode\":false,\"highWaterMark\":16384,\"buffer\":{\"head\":null,\"tail\":null,\"length\":0},\"length\":0,\"pipes\":null,\"pipesCount\":0,\"flowing\":true,\"ended\":true,\"endEmitted\":true,\"reading\":false,\"sync\":false,\"needReadable\":false,\"emittedReadable\":false,\"readableListening\":false,\"resumeScheduled\":false,\"destroyed\":false,\"defaultEncoding\":\"utf8\",\"awaitDrain\":0,\"readingMore\":false,\"decoder\":null,\"encoding\":null},\"readable\":false,\"domain\":null,\"_events\":{},\"_eventsCount\":0,\"socket\":\"[internal]\",\"connection\":\"[internal]\",\"httpVersionMajor\":1,\"httpVersionMinor\":1,\"httpVersion\":\"1.1\",\"complete\":true,\"headers\":{\"host\":\"localhost:1880\",\"connection\":\"keep-alive\",\"content-length\":\"1970\",\"accept\":\"application/json, text/plain, */*\",\"origin\":\"http://localhost:1882\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"content-type\":\"application/x-www-form-urlencoded\",\"referer\":\"http://localhost:1882/\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"},\"rawHeaders\":[\"Host\",\"localhost:1880\",\"Connection\",\"keep-alive\",\"Content-Length\",\"1970\",\"Accept\",\"application/json, text/plain, */*\",\"Origin\",\"http://localhost:1882\",\"User-Agent\",\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\",\"Content-Type\",\"application/x-www-form-urlencoded\",\"Referer\",\"http://localhost:1882/\",\"Accept-Encoding\",\"gzip, deflate, br\",\"Accept-Language\",\"nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7\"],\"trailers\":{},\"rawTrailers\":[],\"upgrade\":false,\"url\":\"/initialize\",\"method\":\"POST\",\"statusCode\":null,\"statusMessage\":null,\"client\":\"[internal]\",\"_consuming\":true,\"_dumped\":false,\"baseUrl\":\"\",\"originalUrl\":\"/initialize\",\"_parsedUrl\":{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":null,\"pathname\":\"/initialize\",\"path\":\"/initialize\",\"href\":\"/initialize\",\"_raw\":\"/initialize\"},\"params\":{},\"query\":{},\"res\":\"[internal]\",\"body\":{\"RevotioData\":\"{\\\"deviceId\\\":\\\"be3700de3f6bc84e767724293da0dba7\\\",\\\"revotioSessionId\\\":\\\"5c7ce5c7d16b10dcb3d03966\\\",\\\"token\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCcm93c2VySWQiOnsidXNlcl9hZ2VudCI6Ik1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE0XzMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjMiLCJsYW5ndWFnZSI6Im5sLU5MIiwiY29sb3JfZGVwdGgiOiIyNCIsImRldmljZV9tZW1vcnkiOiI4IiwiaGFyZHdhcmVfY29uY3VycmVuY3kiOiI4IiwicmVzb2x1dGlvbiI6IjE2ODAsMTA1MCIsImF2YWlsYWJsZV9yZXNvbHV0aW9uIjoiMTY4MCw5NTQiLCJ0aW1lem9uZV9vZmZzZXQiOiItNjAiLCJzZXNzaW9uX3N0b3JhZ2UiOiIxIiwibG9jYWxfc3RvcmFnZSI6IjEiLCJpbmRleGVkX2RiIjoiMSIsIm9wZW5fZGF0YWJhc2UiOiIxIiwiY3B1X2NsYXNzIjoidW5rbm93biIsIm5hdmlnYXRvcl9wbGF0Zm9ybSI6Ik1hY0ludGVsIiwicmVndWxhcl9wbHVnaW5zIjoiQ2hyb21lIFBERiBQbHVnaW46OlBvcnRhYmxlIERvY3VtZW50IEZvcm1hdDo6YXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLXBkZn5wZGYsQ2hyb21lIFBERiBWaWV3ZXI6OiIsImNhbnZhcyI6ImNhbnZhcyB3aW5kaW5nOnllc35jYW52YXMgZnA6ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUI5QUFBQURJQ...\"},\"_body\":true,\"route\":{\"path\":\"/Initialize\",\"stack\":[{\"name\":\"cookieParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"httpNodeMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"corsMiddleware\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"metricsHandler\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"jsonParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"urlencodedParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"multipartParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"rawBodyParser\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"},{\"name\":\"<anonymous>\",\"keys\":[],\"regexp\":{\"fast_star\":false,\"fast_slash\":false},\"method\":\"post\"}],\"methods\":{\"post\":true}},\"cookies\":{},\"signedCookies\":{}},\"res\":{}};\nmsg.dir = global.get(\"DomainProperties.publicFolder\")\n\n\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":1860,"wires":[["16f2ff9.387ea"]]},{"id":"16f2ff9.387ea","type":"function","z":"d8703926.e2eca","name":"Copy file  ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nmsg.source = global.get(\"DomainProperties.rootPath\") + \"users/\" + msg.RevotioData.session.user_id + \"/user.png\";\n\nmsg.destination = \"/users/\" + msg.RevotioData.session.user_id + \"/user.png\";\n\n\n// msg.result = global.get(\"functions.fileManagement\")( msg.source, msg.destination,msg.RevotioData.session._id, \"copySync\") // source, destination, operation\n\nmsg.result =  fs.moveSync(msg.source, msg.destination, { overwrite: true })\n                                   \nreturn msg;","outputs":1,"noerr":0,"x":580,"y":1860,"wires":[[]]},{"id":"b5f2b5e.11758c8","type":"function","z":"d8703926.e2eca","name":"DB operation","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n// find \n    findObj = {\n            query : {\n                    query :{_id : new ObjectID(msg.RevotioData.PostData.gadgetData.calendarEvent._id)\n                    }, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'events',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n        \n        \n        if(Array.isArray(res)){\n            newRes = res[0];\n            res = newRes\n        }\n     \n       \n\n       \n       \n        \n        msg.eventDBrecord = res\n\n                \n            msg.form = {\n                      id: 'edit-event',\n                      canceled: true, // false\n                      submitButtonText: 'Submit',\n                      prevButtonText: 'Previous',\n                      nextButtonText: 'Next',\n                      showPrevious: true, //false\n                      FormType : \"event\",\n                      _id : msg.RevotioData.PostData.gadgetData.calendarEvent._id,\n                      title: 'Edit event',\n                      steps: [\n                        {\n                          title: '',\n                          subtitle: '',\n                          fields: [\n                              {\n                              name: 'title',\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value:res.title,\n                                label: 'Title',\n                                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                required: true // false by default\n                              }\n                            },\n                            // {\n                            //   name: 'allDay',\n                            //   htmlTag: 'input',  // button | select | textarea\n                            //   execActionData: [\n                            //             { 'removeEvent': false }\n                            //             ],\n                            //   options: {\n                            //     value: res.allDay,\n                            //     label: 'All day event?',\n                            //     type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            //     placeholder: '',\n                            //     required: false, // false by default\n                            //     maxlength: 255,\n                            //     \"width\": 50\n                            //   }\n                            // },\n                            // {\n                            //   name: 'removeEvent',\n                            //   htmlTag: 'input',  // button | select | textarea\n                            //   options: {\n                            //     value: false,\n                            //     label: 'Remove event?',\n                            //     type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            //     placeholder: '',\n                            //     required: false, // false by default\n                            //     maxlength: 255,\n                            //     \"width\": 50\n                            //   }\n                            // },\n                                        {\n                  \"name\": \"startDate\",\n                  \"htmlTag\": \"input\",\n                  \"options\": {\n                    \"value\":msg.RevotioData.PostData.gadgetData.calendarEvent.start,\n                    \"label\": \"Start date\",\n                    \"type\": \"datetime\",\n                    \"placeholder\": \"Start date/time of the event\",\n                    \"required\": false\n                  }\n                },\n                // {\n                //   \"name\": \"start____Date\",\n                //   \"htmlTag\": \"input\",\n                //   \"options\": {\n                //     \"value\":msg.RevotioData.PostData.gadgetData.calendarEvent.start,\n                //     \"label\": \"Start date\",\n                //     \"type\": \"datetime\",\n                //     \"placeholder\": \"Start date/time of the event\",\n                //     \"required\": false\n                //   }\n                // },\n            // {\n            //   name: 'startDate',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).format(\"DD-MM-YYYY\"),\n            //     label: 'Start date',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: 'Start date/time of the event',\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 50\n            //   }\n            // },\n            // {\n            //     name: 'startTime',\n            //     htmlTag: 'select',  // button | select | textarea\n            //     optionsGroup: global.get(\"gadgetObjects.customForm.timeArray\"),\n            //     execActionData: [\n            //             { 'allDay': false }\n            //             ],\n            //   options: {\n            //     value: nowTime, //nextTime\n            //     label: 'Start time',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: nowTime,\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 25\n            //   }\n            // },\n              {\n                  \"name\": \"endDate\",\n                  \"htmlTag\": \"input\",\n                  \"options\": {\n                    \"value\": msg.RevotioData.PostData.gadgetData.calendarEvent.end,\n                    \"label\": \"End date\",\n                    \"type\": \"datetime\",\n                    \"placeholder\": \"End date/time of the event\",\n                    \"required\": false,\n                    min : 'startDate'\n                  }\n                },\n                // {\n                //   \"name\": \"end____Date\",\n                //   \"htmlTag\": \"input\",\n                //   \"options\": {\n                //     \"value\": msg.RevotioData.PostData.gadgetData.calendarEvent.end,\n                //     \"label\": \"End date\",\n                //     \"type\": \"datetime\",\n                //     \"placeholder\": \"End date/time of the event\",\n                //     \"required\": false,\n                //     min : 'startDate'\n                //   }\n                // },\n            //  {\n            //   name: 'endDate',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: moment(msg.RevotioData.PostData.gadgetData.calendarEvent.end).format(\"DD-MM-YYYY\"),\n            //     label: 'End date',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: 'End date/time of the event',\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //      \"width\": 50\n            //   }\n            // },\n            // {\n            //     name: 'endTime',\n            //     htmlTag: 'select',  // button | select | textarea\n            //     optionsGroup: global.get(\"gadgetObjects.customForm.timeArray\"),\n            //     execActionData: [\n            //             { 'allDay': false }\n            //             ],\n            //   options: {\n            //     value: nextTime,\n            //     label: 'End time',\n            //     type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: nextTime,\n            //     required: false, // false by default\n            //     maxlength: 255,\n            //     \"width\": 25\n            //   }\n            // },\n                            {\n                              name: 'notification_type',\n                              htmlTag: 'input',  // button | select | textarea\n                              execActionData: [\n                                        { 'removeEvent': false },\n                                         { 'removeEvent': false }\n                                        ],\n                              options: {\n                                value: res.notification_type,\n                                label: 'Notification',\n                                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 50\n                              }\n                            },\n                            {\n                              name: 'notification_number',\n                              htmlTag: 'input',  // button | select | textarea\n                              execActionData: [\n                                { 'notification_type': true },\n                                 { 'removeEvent': false }\n                                ],\n                              options: {\n                                value: res.notification_number,\n                                label: 'Amount',\n                                type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 50\n                              }\n                            },\n                            {\n                                  name: 'notification_entity',\n                                  htmlTag: 'select',  // button | select | textarea\n                                  optionsGroup: {\n                                        'minutes' : \"Minutes\",\n                                        'hours': \"Hours\",\n                                        'days': \"Days\",\n                                  },\n                                  execActionData: [\n                                        { 'notification_type': true },\n                                         { 'removeEvent': false }\n                                        ],\n                                  options: {\n                                    value: res.notification_number,\n                                    label: 'Type',\n                                    type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                    placeholder: '',\n                                    required: true, // false by default\n                                    maxlength: 50\n                                  }\n                            },\n                            {\n                              name: 'notes',\n                              htmlTag: 'textarea',  // button | select | textarea\n                              execActionData: [\n                                        { 'removeEvent': false },\n                                         { 'removeEvent': false }\n                                        ],\n                              options: {\n                                value: res.notes,\n                                label: 'Notes',\n                                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 500\n                              }\n                            },\n                            \n                    ]}]}\n    \n            node.send(msg) \n    })   \n","outputs":1,"noerr":0,"x":4287.737850189209,"y":2147.809545516968,"wires":[["fe3eea8f.2b56b"]]},{"id":"305203a4.f3bd74","type":"function","z":"d8703926.e2eca","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"b2437804-c792-32b4-1a5b-b0dfbdd6e8c0\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":1831.666561126709,"y":2254.166479110718,"wires":[["e4e5817c.d95f98"]]},{"id":"443e494e.a777d","type":"subflow:45759581.11da84","z":"d8703926.e2eca","name":"","env":[],"x":1681.666561126709,"y":2254.166479110718,"wires":[["305203a4.f3bd74"]]},{"id":"e4e5817c.d95f98","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":1946.666561126709,"y":2254.166479110718,"wires":[]},{"id":"23eb29f3.c59c76","type":"function","z":"d8703926.e2eca","name":"Get orgs && projects","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// check if current user is PNO Admin user\n\n\nif (lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo, {type_id : global.get(\"MasterOrganizationData._id\"), permission: 0})){\n    msg.payload = { parent_id: { $exists: false} , _id: {\"$ne\": new ObjectID(global.get(\"MasterOrganizationData._id\"))}}\n} else {\n\n\norgArr = []\n\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index){\n    if (Item.type === \"organization\" && Item._id !== String(global.get(\"MasterOrganizationData._id\"))){\n        orgArr.push(new ObjectID(Item.type_id))\n    }\n})\n\nmsg.payload = {\n    _id : {\"$in\":orgArr},\n     parent_id: { $exists: false} \n}}\n\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.organizations = res\n                   // aggregate\n\n                        aggregateObj = {\n                                query : { query : [\n                                        { \n                                            \"$match\" : {\n                                                \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                                                \"type\" : \"project\"\n                                            }\n                                        }, \n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"projects\", \n                                                \"localField\" : \"project_id\", \n                                                \"foreignField\" : \"_id\", \n                                                \"as\" : \"ProjectData\"\n                                            }\n                                        }, \n                                      \n                                        { \n                                            \"$unwind\" : {\n                                                \"path\" : \"$ProjectData\", \n                                                \"includeArrayIndex\" : \"arrayIndex\", \n                                                \"preserveNullAndEmptyArrays\" : false\n                                            }\n                                        }, \n                                    ],},\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'participants',\n                                operation:'aggregate',\n                                }\n                                \n                        mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                                msg.projects = res\n                                node.send(msg) \n                        })  \n            \n                \n    \n    \n            }) ","outputs":1,"noerr":0,"x":1700,"y":2420,"wires":[["a0516c96.4fd71"]]},{"id":"58e646a2.a356c","type":"function","z":"d8703926.e2eca","name":"Breadcrumb organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\nOrgKeysOptions = [];\n\n\norgs = msg.organizations\nprojects = msg.projects;\nwps = msg.wps;\nparticipants = msg.payload\n\n\n\n data = []\n \nif (orgs && orgs.length > 0){\n OrgKeysOptions = []\norgName = \"Select organization\"\norgId = \"\"\n_.each(orgs, function(Item, Index){\n    \n    if (String(Item._id) ==  String(msg.RevotioData.FlowData.organization_id)){\n        msg.RevotioData.FlowData.Data.organizationData = Item\n    }\n    OrgKeysOptions.push({ key: \"organization\", value: Item.name , icon: global.get(\"icons.fas.organization\") , Page : 'organization overview', organization_id: Item._id})\n\n})\n\nvar OrgObj = {\n            name: 'organizations',\n           \n            icon: global.get(\"icons.fas.organization\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            FormType: \"Organization\",\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n           \n            select: {\n                    values: OrgKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    }\n    \nif (msg.RevotioData.FlowData.Data.hasOwnProperty('organizationData')){\n    OrgObj.label=  msg.RevotioData.FlowData.Data.organizationData.name\n    OrgObj.organization_id  = msg.RevotioData.FlowData.Data.organizationData._id\n} else {\n     OrgObj.label=  \"Organizations\"\n}\n data.push(OrgObj)\n \n}\n\nif (projects && projects.length > 0){\n// create pro options  \nvar ProKeysOptions = [];\n\n_.each(projects, function(Pro, Index){\n        if (String(Pro.organization_id === msg.RevotioData.FlowData.organization_id)){\n                ProKeysOptions.push({ key: \"project\", value: Pro.ProjectData[0].name , icon: global.get(\"icons.fas.project\") , Page : 'project overview', project_id: Pro.ProjectData[0]._id, organization_id:Pro.organization_id})\n            \n            if (new ObjectID(Pro._id) === new ObjectID(msg.RevotioData.FlowData.project_id)){\n                    msg.RevotioData.FlowData.Data.ProjectData = Pro\n            }\n   \n        }\n    }) ;\n\nprojectObj = {\n            name: 'projects',\n           \n            icon: global.get(\"icons.fas.project\"), // it can be empty if for example I just want to have a label\n        \n            // project_id: msg.RevotioData.FlowData.Data.ProjectData._id,\n            FormType: \"Project\",\n            isButton: false, // the button can have icon and label, only label or only icon\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: ProKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    }\n    \n    \nif (msg.RevotioData.FlowData.Data.hasOwnProperty('organizationData')){\n    projectObj.organization_id  = msg.RevotioData.FlowData.Data.organizationData._id\n}\nif (msg.RevotioData.FlowData.Data.hasOwnProperty('ProjectData')){\n    projectObj.label=  msg.RevotioData.FlowData.Data.ProjectData.name\n    projectObj.project_id  = msg.RevotioData.FlowData.Data.ProjectData._id\n}else {\n    projectObj.label=  \"Projects\"\n}\ndata.push(projectObj)\n\n\n}\n    // create WPKeysOptions options  \nif (msg.wps && msg.wps.length > 0){\n    if ( msg.RevotioData.FlowData.entity === \"project\" &&  msg.RevotioData.FlowData.Data.entityData.funding_scheme_data.hasOwnProperty(\"complexity_level\") === false || msg.RevotioData.FlowData.Data.entityData.funding_scheme_data.complexity_level === \"basic\"){\n} else {\nvar WPKeysOptions = [] ;\n\n_.each(msg.wps, function(WP, Index){\n     if ( String(WP.project_id) === String(msg.RevotioData.FlowData.project_id) ){\n        WPKeysOptions.push({ key: \"work_package\", value: WP.work_package_name , icon: global.get(\"icons.fas.work_package\") , Page : 'work package overview', work_package_id: WP._id, project_id: WP.project_id, organization_id:msg.RevotioData.FlowData.organization_id})\n    }\n     data.push({\n            name: 'work package',\n            label: 'work package' , // it can be empty if for example I just want to have an icon\n            FormType: \"WorkPackage\",\n            icon: global.get(\"icons.fas.work_package\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: WPKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n    }) ;\n}\n}\n\n    // create org options  \nvar PartKeysOptions = [] ;\nif (participants && participants.length > 0){\n_.each(participants, function(Part, Index){\n    \n        PartKeysOptions.push({\n            \n            key: \"participant\", \n            value: Part.OrganizationData[0].name , \n            icon: global.get(\"icons.fas.participants\") , \n            Page : 'participant overview', \n            participant_id: Part._id, \n            project_id: Part.project_id, \n            organization_id:Part.organization_id\n            \n        })\n  \n    }) ; \n\ndata.push({\n            name: 'participant',\n            label: 'participant' , // it can be empty if for example I just want to have an icon\n            icon: global.get(\"icons.fas.participants\"), // it can be empty if for example I just want to have a label\n            isButton: false, // the button can have icon and label, only label or only icon\n            FormType: \"Participant\",\n            buttonClass: 'md-primary', // it uses the default material classes md-primary, md-accent, md-warn\n            select: {\n                    values: PartKeysOptions,\n                    options:    {\n                                searchable: true,\n                                placeholder: 'Type your search'\n                                }\n                    }\n    })\n    \n}\n\nmsg.payload = {\n    gadgetsList: [{\n                gadgetId: '5f1a96f5-980e-ab18-7ec5-c173f4bb5a24',\n                gadgetName: 'calendar breadcrumbs',\n                gadgetType: 'revotio-breadcrumbs',\n                gadgetData: {\n                  data: data,\n                  options: {\n                    separatorIcon: 'fas fa-angle-right', // if null it will display \">\" by default\n                    // separatorIconColor: 'pink'\n                  }\n                }\n              }]}\n\nreturn msg;","outputs":1,"noerr":0,"x":2060,"y":2420,"wires":[[]]},{"id":"a0516c96.4fd71","type":"function","z":"d8703926.e2eca","name":"get All WP's","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n// Get UserData\n\nif (msg.projects.length > 0) {\nprojectPermission = lodash.find(msg.projects, {organization_id: new ObjectID(msg.RevotioData.FlowData.organization_id)})\n\nif (projectPermission.permission === 0 ){\n     \n    payload = {project_id : new ObjectID(msg.RevotioData.FlowData.project_id)}\n    operation = \"find\"\n    \n    // findMany\n\nfindManyObj = {\n                    query : {\n                            query :payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'work_packages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.wps = res\n                    query =  [\n                            { \n                                \"$match\" : {\n                                    \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                                    \"type\" : \"project\"\n                                }\n                            }, \n                            { \n                                \"$lookup\" : {\n                                    \"from\" : \"organizations\", \n                                    \"localField\" : \"organization_id\", \n                                    \"foreignField\" : \"_id\", \n                                    \"as\" : \"OrganizationData\"\n                                }\n                            }, \n                          \n                            { \n                                \"$unwind\" : {\n                                    \"path\" : \"$OrganizationData\", \n                                    \"includeArrayIndex\" : \"arrayIndex\", \n                                    \"preserveNullAndEmptyArrays\" : false\n                                }\n                            }, \n                        ]; \n                        \n                    // aggregate\n\n                    aggregateObj = {\n                            query : { query : query,},\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'participants',\n                            operation:'aggregate',\n                            }\n                            \n                    mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                            msg.payload = res\n                            node.send(msg) \n                    })  \n                       \n            }) \n            \n  \n    \n} else {\n\n        query =  [\n            { \n                \"$match\" : {\n                    \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                    \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                    \"type\" : \"work_packages\"\n                }\n            }, \n            { \n                \"$lookup\" : {\n                    \"from\" : \"work_packages\", \n                    \"localField\" : \"work_package_id\", \n                    \"foreignField\" : \"_id\", \n                    \"as\" : \"work_package_data\"\n                }\n            }, \n          \n            { \n                \"$unwind\" : {\n                    \"path\" : \"$work_package_data\", \n                    \"includeArrayIndex\" : \"arrayIndex\", \n                    \"preserveNullAndEmptyArrays\" : false\n                }\n            }, \n        ];\n        \n         aggregateObj = {\n                            query : { query : query,},\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'participants',\n                            operation:'aggregate',\n                            }\n                            \n                    mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                            msg.wps = []\n\n                            _.each(msg.payload, function(item, index ){\n                                msg.wps.push(item.work_package_data[0])\n                            })\n                            node.send(msg) \n                    })  \n   \n}\n    \n} else {\n    node.send(msg)\n}\n\n","outputs":1,"noerr":0,"x":1870,"y":2420,"wires":[["58e646a2.a356c"]]},{"id":"1442a4d5.9c0f33","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2475,"y":2320,"wires":[]},{"id":"a6ca170f.e472a","type":"link in","z":"d8703926.e2eca","name":"","links":["39d2ce0a.3d6772"],"x":1606.666561126709,"y":2254.166479110718,"wires":[["443e494e.a777d"]]},{"id":"6b81272a.6df69","type":"link in","z":"d8703926.e2eca","name":"","links":["39d2ce0a.3d6772"],"x":1515,"y":2420,"wires":[[]]},{"id":"4c8f6fa4.cda7e","type":"link in","z":"d8703926.e2eca","name":"","links":["39d2ce0a.3d6772"],"x":1595,"y":2480,"wires":[["e68c8685.ac8518"]]},{"id":"7771fa3b.ba2dd4","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2035,"y":2480,"wires":[]},{"id":"7e57e82a.62b6a8","type":"function","z":"d8703926.e2eca","name":"INIT FLOW","func":"// var source = msg.RevotioData.FlowData.Source\n// var fs = global.get('fsextra');\n// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n              \n\n\n// aggregate\n           \n                     aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"organization_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                  type: \"project\",\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"projects\",\n                                  \"localField\": \"project_id\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"projectData\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$projectData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                               {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"projectData.funding_scheme\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"funding_schemeData\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$funding_schemeData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"projectData.status\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"statusData\"\n                                }\n                              },\n                             {\n                                $unwind: {\n                                    path : \"$statusData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"project_type\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"project_type_Data\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$project_type_Data\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $project: {'projectData.name': 1, 'funding_schemeData.name':1, \"statusData.name\":1, \"project_type_Data.name\":1, permission:1\n                                }\n                              },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n         \n                   \n          \n              \n               mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                        \n                        participantData = res;\n\n                                queryObj = {\n                                        query : { query :  {\"_id\": new ObjectID(msg.RevotioData.FlowData.organization_id)},\n                                                 },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'organizations',\n                                        operation:'find',\n                                        }\n                     \n                        \n                                    mongodbTools.resolveAsync(queryObj, node, function(res){\n                                     \n                                    organizationData = res[0];   \n                                        \n\n                    // var Non,organization,  project, employee;\n                    \n                    if (msg.RevotioData.FlowData.hasOwnProperty(\"project_id\") ) {\n                           msg.RevotioData.FlowData.entity = 'project';\n                           msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.project_id;\n                           \n                           \n                          msg.RevotioData.FlowData.Data.gadgetOptions  = {\n                                entity: msg.RevotioData.FlowData.entity,\n                                entityId : msg.RevotioData.FlowData.entityId,\n                            }\n                            // aggregate\n                                queryObj = {\n                                        query : { query : [{\n                                                    '$match': {_id: new ObjectID(msg.RevotioData.FlowData.entityId)},\n                                                    },\n                                        \n                                                  {\n                                                    $lookup: {\n                                                      \"from\": \"settings\",\n                                                      \"localField\": \"funding_scheme\",\n                                                      \"foreignField\": \"_id\",\n                                                      \"as\": \"funding_scheme_data\"\n                                                    }\n                                                  },\n                                                 \n                                                  {\n                                                    $unwind: {\n                                                      \"path\": \"$funding_scheme_data\",\n                                                      \"includeArrayIndex\": \"arrayIndex\",\n                                                      \"preserveNullAndEmptyArrays\": false\n                                                    }\n                                                  }\n                                                ],},\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'projects',\n                                        operation:'aggregate',\n                                        }\n                                        \n                     \n                    \n                        //   project = msg;\n                        } else if ( msg.RevotioData.FlowData.hasOwnProperty(\"employee_id\")) {\n                           msg.RevotioData.FlowData.entity = 'employee';\n                           msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.employee_id;\n                           \n                            msg.RevotioData.FlowData.Data.gadgetOptions  = {\n                                entity: msg.RevotioData.FlowData.entity,\n                                entityId : msg.RevotioData.FlowData.entityId,\n                            }\n                            \n                          \n                                        \n                             // \n                                queryObj = {\n                                        query : { query :  {_id: new ObjectID(msg.RevotioData.FlowData.entityId)}\n                                                   },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'employee',\n                                        operation:'find',\n                                        }\n                                        \n                        \n                        \n                        //   employee = msg;\n                        } else if ( msg.RevotioData.FlowData.hasOwnProperty(\"organization_id\")) {\n                           msg.RevotioData.FlowData.entity = 'organization';\n                           msg.RevotioData.FlowData.entityId = msg.RevotioData.FlowData.organization_id;\n                           \n                            msg.RevotioData.FlowData.Data.gadgetOptions  = {\n                                entity: msg.RevotioData.FlowData.entity,\n                                entityId : msg.RevotioData.FlowData.entityId,\n                    \n                            }\n                                   queryObj = {\n                                        query : { query :  {_id: new ObjectID(msg.RevotioData.FlowData.entityId)}\n                                                 },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'organizations',\n                                        operation:'find',\n                                        }\n                        } \n                        \n                                    mongodbTools.resolveAsync(queryObj, node, function(res){\n                                        msg.RevotioData.FlowData.Data.entityData = res[0]\n                                        msg.RevotioData.FlowData.Data.organizationData = organizationData\n                                        msg.RevotioData.FlowData.Data.participantData  = participantData\n                                        // msg.payload = res\n                                        node.send(msg) \n                                }) \n  \n             }) \n        }) \n             \n// return msg;\n\n\n\n","outputs":1,"noerr":0,"x":990,"y":2360,"wires":[["a09bff54.d4a3c8"]],"outputLabels":["Non"]},{"id":"a09bff54.d4a3c8","type":"link out","z":"d8703926.e2eca","name":"","links":["4ed5e2ef.631d7c"],"x":1075,"y":2360,"wires":[]},{"id":"4ed5e2ef.631d7c","type":"link in","z":"d8703926.e2eca","name":"","links":["a09bff54.d4a3c8","b924fbe0.8a06b","6ed7d123.b951a8","1c7c95ad.85f9ea","8ff6c87.9b57eb8"],"x":1195,"y":2360,"wires":[["50e2d688.5807b"]]},{"id":"e68c8685.ac8518","type":"function","z":"d8703926.e2eca","name":"Gadget payload","func":"msg.payload = {gadgetsList : [ {\n    \"gadgetId\":\"9522a8aa-9b44-0b31-b02b-2b7c809a1357\",\n      \"gadgetName\":\"Scope tabs\",\n      \"gadgetType\":\"revotio-tabs-select\",\n      \"gadgetData\":{\n         \"dropdown\":{\n            // \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n            // \"options\":DropDown\n         },\n         \"tabs\":[ {\n               \"dropdownKey\":msg.RevotioData.session.Page,\n               \"fields\":\"\"\n         }],\n          \n      }}]};\n      \nmsg.tabsSettings = {\n    entity : msg.RevotioData.FlowData.Data.gadgetOptions.entity,\n    entityId : msg.RevotioData.FlowData.Data.gadgetOptions.entityId,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1720,"y":2480,"wires":[[]]},{"id":"a1ac9bfe.4be8f","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2610,"y":4073.333646774292,"wires":[]},{"id":"d796834c.8c0fa","type":"function","z":"d8703926.e2eca","name":"Gadget payload","func":"msg.payload = {gadgetsList : [ {\n    \"gadgetId\":\"257a77cd-cd2d-6454-660c-0f1c3abbc723\",\n      \"gadgetName\":\"Scope tabs\",\n      \"gadgetType\":\"revotio-tabs-select\",\n      \"gadgetData\":{\n         \"dropdown\":{\n            // \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n            // \"options\":DropDown\n         },\n         \"tabs\":[ {\n               \"dropdownKey\":msg.RevotioData.session.Page,\n               \"fields\":\"\"\n         }],\n          \n      }}]};\n      \nmsg.tabsSettings = {\n    entity : msg.RevotioData.FlowData.entity,\n    // entityId : msg.RevotioData.FlowData.Data.gadgetOptions.entityId,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2335,"y":4073.333646774292,"wires":[[]]},{"id":"7f018ec2.915d68","type":"function","z":"d8703926.e2eca","name":"Get organizationData","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n findOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.organization_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":1200,"y":3760,"wires":[["10f00e92.2e2761"]]},{"id":"10f00e92.2e2761","type":"function","z":"d8703926.e2eca","name":"Set OrganizationData","func":"msg.RevotioData.FlowData.Data.OrganizationData = msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":1400,"y":3760,"wires":[["cbbdb354.3aebc"]]},{"id":"9d209b2e.91ffd8","type":"link in","z":"d8703926.e2eca","name":" time registration  INIT","links":["868c30ac.c9e3b","e8142af.3b672d8","4ad545df.a79764","f3612948.731ac"],"x":955,"y":4740,"wires":[["18866dba.cb4a3a","7e17c983.b4cca8"]]},{"id":"18866dba.cb4a3a","type":"function","z":"d8703926.e2eca","name":"INIT flow","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\nmsg.RevotioData.FlowData.Data.gadgetOptions = {\n    currentDate : new Date(),\n    view : \"week\",\n    activeMonth :  moment().month() + 1,\n    activeYear: moment().year(),\n    startDateRange : new Date(moment().subtract(2, 'months')),\n    endDateRange : new Date(moment().add(2, 'months')),\n    entityId : msg.RevotioData.session.UserData._id,\n    entity: \"user\",\n     \"startHourFocus\"    : \"12:00\" , // time string value\n     \"endHourFocus\"      : \"15:00\" , // time string value\n      \"scrolFocus\"        : false , \n  \n};\n\norganizationIndex = lodash.findIndex(msg.RevotioData.session.UserData.AppUserPermissionInfo,{type: \"organization\"})\n\nif (organizationIndex > -1){\n    \n    organization_id = msg.RevotioData.session.UserData.AppUserPermissionInfo[organizationIndex].type_id\n} \n\n// aggregate\n           \n                     aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"organization_id\": new ObjectID(organization_id),\n                                  type: \"project\",\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"projects\",\n                                  \"localField\": \"project_id\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"projectData\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$projectData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                               {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"projectData.funding_scheme\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"funding_schemeData\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$funding_schemeData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"projectData.status\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"statusData\"\n                                }\n                              },\n                             {\n                                $unwind: {\n                                    path : \"$statusData\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"project_type\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"project_type_Data\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                    path : \"$project_type_Data\",\n                                    includeArrayIndex : \"arrayIndex\", // optional\n                                    preserveNullAndEmptyArrays : false // optional\n                                }\n                              },\n                              {\n                                $project: {'projectData.name': 1, 'funding_schemeData.name':1, \"statusData.name\":1, \"project_type_Data.name\":1, permission:1\n                                }\n                              },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n         \n                   \n          \n              \n               mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                        \n                         msg.RevotioData.FlowData.Data.participantData = res;\n\n                                queryObj = {\n                                        query : { query :  {\"_id\": new ObjectID(organization_id)},\n                                                 },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'organizations',\n                                        operation:'find',\n                                        }\n                     \n                        \n                                    mongodbTools.resolveAsync(queryObj, node, function(res){\n                                     \n                                     msg.RevotioData.FlowData.Data.organizationData = res[0];   \n\n// get memberships\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"user\": new ObjectID(msg.RevotioData.FlowData.userId),\n                                   project_id: { $exists: true,}\n                                  \n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"projects\",\n                                  \"localField\": \"project_id\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"projectData\"\n                                }\n                              },\n                              \n                              {\n                                $unwind: {\n                                  \"path\": \"$projectData\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'members',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.RevotioData.FlowData.Data.memberships = lodash.groupBy(res, \"project_id\")\n                    \n                    node.send(msg) \n            })  \n })  }) \n\n// return msg;","outputs":1,"noerr":0,"x":1040,"y":4740,"wires":[["467d0b4f.4e3ac4"]]},{"id":"467d0b4f.4e3ac4","type":"link out","z":"d8703926.e2eca","name":"","links":["5d3cd6c4.a14b18","f4c9d8d5.57cff","13c6afb9.0728f","ea09fb61.75daf8","2f320cba.df673c","119eb997.b3d77e","699f1645.987f48"],"x":1175,"y":4740,"wires":[]},{"id":"5d3cd6c4.a14b18","type":"link in","z":"d8703926.e2eca","name":"","links":["467d0b4f.4e3ac4"],"x":1355,"y":4700,"wires":[["c8704e8e.e5cf88"]]},{"id":"9972f568.634fd","type":"link in","z":"d8703926.e2eca","name":" time registration  INIT","links":["50891c08.de35ac","93437baa.277188","1e9e1040.163d","51f3418e.887e88","af896cc2.619c9"],"x":2075,"y":4620,"wires":[["f5637c30.5caf7","ce645beb.8625f"]]},{"id":"e3f2e299.1c23a8","type":"link in","z":"d8703926.e2eca","name":" time registration  INIT","links":["8809f483.51d568","f7226339.009eb","a806d4b0.ea7ad8","497e9394.773f6c","17798a95.acf855","e0a6433b.b90ac"],"x":995,"y":4320,"wires":[["f37f6a7b.fbee78"]]},{"id":"468a1bc9.db7f14","type":"function","z":"d8703926.e2eca","name":" time registration Design","func":"msg.topbarContanerId =  \"8714726b-5655-c43b-4906-cb3016a0c013\";\nreturn msg;","outputs":1,"noerr":0,"x":1270,"y":4320,"wires":[["3cb438aa.c4cbc8"]]},{"id":"ea436739.9e5ac8","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":1550,"y":4320,"wires":[]},{"id":"7e17c983.b4cca8","type":"debug","z":"d8703926.e2eca","name":"INIT timeRegistration","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":1080,"y":4700,"wires":[]},{"id":"f5637c30.5caf7","type":"debug","z":"d8703926.e2eca","name":"Action timeRegistration","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":2230,"y":4540,"wires":[]},{"id":"29c02eb5.1409a2","type":"function","z":"d8703926.e2eca","name":"Get events && generate calendar payload","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nvar query = {entity : msg.RevotioData.FlowData.Data.gadgetOptions.entity, entityId : new ObjectID(msg.RevotioData.FlowData.Data.gadgetOptions.entityId)  }\n\n// if (msg.RevotioData.FlowData.level === \"organization\"){\n//     query = {organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n//             removeEvent : false \n//     }\n    \n// }\n\nquery.start = {\"$lte\": new Date(msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange)}\nquery.end = {\"$gte\": new Date(msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange)}\n\n// find \n    findObj = {\n            query : {\n                    query :query, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'events',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            list = []\n\n            _.each(res, function(Item, Index ){\n                \n                \n                data = {\n                    start : Item.start,\n                    end : Item.end,\n                    _id : Item._id,\n                    title: Item.title,\n                    notes: Item.notes,\n                    \"eventSettings\": {\n                          \"type\": \"String\",                      //  ==> for legend */\n                          \"backgroundColor\": \"#F5A623\", // || warning / danger/ success/ info / black/ white/ etc   ==> for calendar view && legend\n                          \"avatar\": \"https://abc.com/image.jpg\",  //  ==> to do later\n                          \"textColor\": \"#ffffff\", // \"#000000\" || warning / danger/ success/ info / black/ white/ etc ==> for calendar view\n                        }\n                }\n                \n                if (Item.hasOwnProperty(\"notification_type\") &&Item.notification_type === true ){\n                    data[\"Notification\"] = \"Active\"\n                    data[\"Time entity\"] = Item.notification_entity\n                    data[\"Time value\"] = Item.notification_number\n                }\n                \n                list.push(data)\n                \n                \n            })\n\n            msg.payload  = {gadgetsList : [{\n\n            \"gadgetId\":  \"d2223f0e-257d-a0f3-727f-5b0a4e35a632\",\n            \"gadgetName\": \"time registration\",\n            \"gadgetType\": \"revotio-calendar\",\n            GagdetOptions : msg.RevotioData.FlowData.Data.gadgetOptions,\n            \"gadgetData\": {\n                events: list\n                },\n                \n               \n                }]};\n            node.send(msg) \n    })   \n\n","outputs":1,"noerr":0,"x":1540,"y":4740,"wires":[["249bc257.6a40be"]]},{"id":"f4c9d8d5.57cff","type":"link in","z":"d8703926.e2eca","name":"","links":["467d0b4f.4e3ac4","9b228683.4159c8","4accdfc2.f64ef","97ff67ed.ad6fb8","230cd013.c6bc8"],"x":1355,"y":4740,"wires":[["29c02eb5.1409a2"]]},{"id":"249bc257.6a40be","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":1735,"y":4740,"wires":[]},{"id":"ce645beb.8625f","type":"function","z":"d8703926.e2eca","name":"Route POST","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  menu, Calendar,RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect;\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n           menu = msg;\n        } else if (PostData.gadgetType=== \"revotio-calendar\"){\n            Calendar = msg;\n        }else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n            RevotioBreadCrumbs  = msg;\n        }else if (PostData.gadgetType=== \"custom-form\"){\n            \n            if (PostData.gadgetData.formObj.FormType  ===  \"event\"){\n                CalFormAction = msg;\n            } else {\n                FormAction = msg;\n            }\n        }\n        else if (PostData.gadgetType=== \"revotio-tabs-select\"){\n            tabsSelect  = msg;\n        }\n        \n\n\n        \n}\n\nreturn [menu, Calendar, RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect];\n\n\n\n","outputs":6,"noerr":0,"x":2190,"y":4620,"wires":[["b640533d.63cf98"],["ab74fb75.a2f9c8"],[],["ee57ec52.803768"],["ccf0913f.026a08"],[]],"outputLabels":["menu","Calendar","RevotioBreadCrumbs, ","FormAction","CalFormAction","tabsSelect"]},{"id":"ee57ec52.803768","type":"function","z":"d8703926.e2eca","name":"Set Form Data","func":"msg.RevotioData.FlowData.Form.FormActionType = \"Post\" ;\nreturn msg;","outputs":1,"noerr":0,"x":2581.4287071228027,"y":4772.356815338135,"wires":[["144526fb.ead301"]]},{"id":"ab74fb75.a2f9c8","type":"function","z":"d8703926.e2eca","name":"process Calendar post","func":"var newState, editState, deleteState, changeView, onDropOnResize, getEvents\n\nif (msg.RevotioData.PostData.gadgetData.state === \"new\"){\n    newState = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"changeView\"){\n    changeView = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"onDrop\" || msg.RevotioData.PostData.gadgetData.state === \"onResize\"  ){\n    onDropOnResize = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"getEvents\"){\n    getEvents = msg;\n} else if (msg.RevotioData.PostData.gadgetData.state === \"edit\"){\n    editState = msg;\n}\n\n\n\nreturn [newState,editState, deleteState, changeView, onDropOnResize , getEvents];","outputs":6,"noerr":0,"x":2580,"y":4540,"wires":[["b29ae77b.c78ac"],["df2e00b2.08f5e8"],[],["ac94eec2.b3c0e8"],["a6500814.529b98"],["3d0e1a95.bdcb36"]],"outputLabels":["newState","editState","deleteState","changeView","onDropOnResize","getEvents"]},{"id":"b29ae77b.c78ac","type":"function","z":"d8703926.e2eca","name":"create new form","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nmsg.form = {\n      id: 'new-event',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      FormType : \"event\",\n      title: 'Create event',\n      steps: [\n        {\n          title: '',\n          subtitle: '',\n          fields: [\n              {\n              name: 'title',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Title',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                required: true // false by default\n              }\n            },\n            {\n              name: 'allDay',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'All day event?',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 255\n              }\n            },\n            {\n              name: 'startDate',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.start),\n                label: 'Start date',\n                type: 'datetime', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: 'Start date/time of the event',\n                required: false, // false by default\n                maxlength: 255,\n                max :\"endDate\"\n                // \"width\": 50\n              }\n            },\n             {\n              name: 'endDate',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.end),\n                label: 'End date',\n                type: 'datetime', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: 'End date/time of the event',\n                required: false, // false by default\n                maxlength: 255,\n                min : 'startDate'\n                //  \"width\": 50\n              }\n            },\n            \n            // {\n            //   name: 'notification_type',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: '',\n            //     label: 'Notification',\n            //     type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: '',\n            //     required: false, // false by default\n            //     maxlength: 50\n            //   }\n            // },\n            // {\n            //   name: 'notification_number',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   execActionData: [\n            //     { 'notification_type': true }\n            //     ],\n            //   options: {\n            //     value: '',\n            //     label: 'Amount',\n            //     type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: '',\n            //     required: false, // false by default\n            //     maxlength: 50\n            //   }\n            // },\n            // {\n            //       name: 'notification_entity',\n            //       htmlTag: 'select',  // button | select | textarea\n            //       optionsGroup: {\n            //             'minutes' : \"Minutes\",\n            //             'hours': \"Hours\",\n            //             'days': \"Days\",\n            //       },\n            //       execActionData: [\n            //             { 'notification_type': true }\n            //             ],\n            //       options: {\n            //         value: '',\n            //         label: 'Type',\n            //         type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //         placeholder: '',\n            //         required: true, // false by default\n            //         maxlength: 50\n            //       }\n            // },\n            {\n              name: 'notes',\n              htmlTag: 'textarea',  // button | select | textarea\n            //   execActionData: [\n            //     { 'notification_type': true }\n            //     ],\n              options: {\n                value: '',\n                label: 'Notes',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 500\n              }\n            },\n    ]}]}\n    \nvar projects = {}\n\nif (Object.keys(msg.RevotioData.FlowData.Data.memberships).length >0){\n    \n    _.each(msg.RevotioData.FlowData.Data.memberships, function(memberships, project_id){\n        \n        projects[project_id] = memberships[0].projectData.name\n        \n        \n    })\n msg.form.steps[0].fields.push({\n                  name: 'project_id',\n                  htmlTag: 'select',  // button | select | textarea\n                  optionsGroup: projects,\n                //   execActionData: [\n                //         { 'notification_type': true }\n                //         ],\n                  options: {\n                    value: '',\n                    label: 'Project',\n                    type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: false, // false by default\n                    maxlength: 50\n                  }\n            })   \n}\n\n    \nreturn msg;","outputs":1,"noerr":0,"x":2840,"y":4460,"wires":[["f1569ea9.b8ffd"]]},{"id":"f1569ea9.b8ffd","type":"function","z":"d8703926.e2eca","name":"prepair GadgetsList","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"e74d2f37-bdae-e0cc-4ea2-6028ce718a7a\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"show\"}},\n            {\n                \"gadgetId\": \"25e2e5af-51c2-7ebf-e666-6d24b3c2c408\",\n              \"gadgetName\": \"time registration FORM\",\n              \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form}\n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\n\n           \n            \n            \nreturn msg;","outputs":1,"noerr":0,"x":3030,"y":4506,"wires":[["bf81f94.908f988"]]},{"id":"bf81f94.908f988","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":3135,"y":4500,"wires":[]},{"id":"ccf0913f.026a08","type":"function","z":"d8703926.e2eca","name":"Preform events DB action","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\nif (moment(msg.RevotioData.PostData.gadgetData.formData.endDate).isBefore(moment(msg.RevotioData.PostData.gadgetData.formData.startDate))){\n    msg.RevotioData.PostData.gadgetData.formData.endDate = moment(msg.RevotioData.PostData.gadgetData.formData.startDate)\n}\n\nobj = \n    {\n      \n        \"title\":msg.RevotioData.PostData.gadgetData.formData.title,\n        \"notes\":msg.RevotioData.PostData.gadgetData.formData.notes,\n        \"entity\": msg.RevotioData.FlowData.Data.gadgetOptions.entity,\n        \"entityId\": new ObjectID(msg.RevotioData.FlowData.Data.gadgetOptions.entityId)\n    }\n    \nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"removeEvent\") && msg.RevotioData.PostData.gadgetData.formData.removeEvent === true){\n    obj.removeEvent = true\n} else {\n obj.removeEvent = false\n \n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"allDay\") === true){\n        obj[\"allDay\"]   = msg.RevotioData.PostData.gadgetData.formData.allDay\n         obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n        //  obj[\"startTime\"] =  \"00:00\"\n        //  obj[\"endTime\"] = \"00:00\"\n\n    }\nelse {\n     obj[\"allDay\"]  = false\n         obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n}\n\n\n    \nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"notification_type\") === true){\n    obj[\"notification_type\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_type\n     obj[\"notification_number\"] = msg.RevotioData.PostData.gadgetData.formData.notification_number\n      obj[\"notification_entity\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_entity\n  \n} else {\n    obj[\"notification_type\"] = false \n}\n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"project_id\")){\n     obj[\"project_id\"]  = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.project_id)\n}\n\n\n\nif (msg.RevotioData.FlowData.level === \"organization\"){\n    obj[\"organization_id\"] = new ObjectID(msg.RevotioData.FlowData.organization_id)\n}\n}\n\n query = {\n                query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj._id)},\n                update :{\"$set\": obj},\n                options : {upsert : true }\n            }\n            Obj = { \n                    query : query,\n                \n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'events',\n                operation:\"update\",\n                        }  \n               \n                mongodbTools.resolveAsync(Obj, node, function(res){\n                \n                    node.send(msg)\n                })\n","outputs":1,"noerr":0,"x":2611.4287071228027,"y":4852.356815338135,"wires":[["230cd013.c6bc8","26cb0735.c61718"]]},{"id":"230cd013.c6bc8","type":"link out","z":"d8703926.e2eca","name":"","links":["f4c9d8d5.57cff"],"x":2756.4287071228027,"y":4872.356815338135,"wires":[]},{"id":"ac94eec2.b3c0e8","type":"function","z":"d8703926.e2eca","name":"changeView","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\nmsg.RevotioData.FlowData.Data.gadgetOptions.view = msg.RevotioData.PostData.gadgetData.calendarEvent.view;\n\nif (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"year\"){\n    \n    msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).startOf(\"year\").subtract(2, 'months'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).startOf(\"year\").add(2, 'months'))\n    \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"month\"){\n    \n    msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'months'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'months'))\n     \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"week\"){\n    \n       msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'weeks'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'weeks'))\n      \n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.view === \"day\"){\n    \n           msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'weeks'))\n    msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).add(2, 'weeks'))\n      \n}\nreturn msg;","outputs":1,"noerr":0,"x":2830,"y":4560,"wires":[["97ff67ed.ad6fb8"]]},{"id":"97ff67ed.ad6fb8","type":"link out","z":"d8703926.e2eca","name":"","links":["f4c9d8d5.57cff"],"x":2915,"y":4560,"wires":[]},{"id":"4accdfc2.f64ef","type":"link out","z":"d8703926.e2eca","name":"","links":["f4c9d8d5.57cff"],"x":3075,"y":4600,"wires":[]},{"id":"a6500814.529b98","type":"function","z":"d8703926.e2eca","name":"Preform events DB action","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\n// if ( msg.RevotioData.PostData.gadgetData.hasOwnProperty(\"formData\") && msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"removeEvent\") && msg.RevotioData.PostData.gadgetData.formData.removeEvent === true){\n//     obj.removeEvent = true\n// } else {\n\n    obj = \n                {\n                    \"title\":msg.RevotioData.PostData.gadgetData.calendarEvent.title,\n                    \"removeEvent\":false,\n                    \"start\":new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.start),\n                    \"end\":new Date(msg.RevotioData.PostData.gadgetData.calendarEvent.end),\n                    \"notes\":msg.RevotioData.PostData.gadgetData.calendarEvent.notes,\n                }\n                \n                if (msg.RevotioData.PostData.gadgetData.calendarEvent.hasOwnProperty(\"notification_type\") === true){\n                    obj.notification_type  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_type\n                    obj.notification_number  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_number\n                    obj.notification_entity  = msg.RevotioData.PostData.gadgetData.calendarEvent.notification_entity\n                    \n                  \n                } else {\n                    obj.notification_type = false \n                }\n// }\n        \n        \n         query = {\n                        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.calendarEvent._id)},\n                        update : {\"$set\": obj},\n                        options : {upsert : true }\n                    }\n                    Obj = { \n                            query : query,\n                        \n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'events',\n                        operation:\"update\",\n                                }  \n                       \n                        mongodbTools.resolveAsync(Obj, node, function(res){\n                        \n                            node.send(msg)\n                        })\n","outputs":1,"noerr":0,"x":2870,"y":4600,"wires":[["4accdfc2.f64ef"]]},{"id":"3d0e1a95.bdcb36","type":"function","z":"d8703926.e2eca","name":"changeView","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n msg.RevotioData.FlowData.Data.gadgetOptions.startDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.start).subtract(2, 'w'))\n  msg.RevotioData.FlowData.Data.gadgetOptions.endDateRange = new Date(moment(msg.RevotioData.PostData.gadgetData.calendarEvent.end).add(2, 'w'))\nreturn msg;","outputs":1,"noerr":0,"x":2830,"y":4640,"wires":[["9b228683.4159c8"]]},{"id":"9b228683.4159c8","type":"link out","z":"d8703926.e2eca","name":"","links":["f4c9d8d5.57cff"],"x":2915,"y":4640,"wires":[]},{"id":"26cb0735.c61718","type":"function","z":"d8703926.e2eca","name":"Set modal hide Data","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"e74d2f37-bdae-e0cc-4ea2-6028ce718a7a\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"hide\"}},\n            \n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\nreturn msg;\n\n","outputs":1,"noerr":0,"x":2841.4287071228027,"y":4832.356815338135,"wires":[["4e7dc4ba.e53dec"]]},{"id":"4e7dc4ba.e53dec","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2956.4287071228027,"y":4832.356815338135,"wires":[]},{"id":"df2e00b2.08f5e8","type":"function","z":"d8703926.e2eca","name":"DB operation","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n// find \n    findObj = {\n            query : {\n                    query :{_id : new ObjectID(msg.RevotioData.PostData.gadgetData.calendarEvent._id)\n                    }, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'events',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n        \n        if(Array.isArray(res)){\n            newRes = res[0];\n            res = newRes\n        }\n        \n        msg.eventDBrecord = res\n        var projects = {}\n            if (Object.keys(msg.RevotioData.FlowData.Data.memberships).length >0){\n                _.each(msg.RevotioData.FlowData.Data.memberships, function(memberships, project_id){\n                    projects[project_id] = memberships[0].projectData.name\n                })\n            }   \n            \n            msg.form = {\n                      id: 'edit-event',\n                      canceled: true, // false\n                      submitButtonText: 'Submit',\n                      prevButtonText: 'Previous',\n                      nextButtonText: 'Next',\n                      showPrevious: false, //false\n                      FormType : \"event\",\n                      _id : msg.RevotioData.PostData.gadgetData.calendarEvent._id,\n                      title: 'Edit event',\n                      steps: [\n                        {\n                          title: '',\n                          subtitle: '',\n                          fields: [\n                              {\n                              name: 'title',\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value:res.title,\n                                label: 'Title',\n                                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                required: true // false by default\n                              }\n                            },\n                            {\n                              name: 'allDay',\n                              htmlTag: 'input',  // button | select | textarea\n                              execActionData: [\n                                        { 'removeEvent': false }\n                                        ],\n                              options: {\n                                value: res.allDay,\n                                label: 'All day event?',\n                                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 255,\n                                \"width\": 50\n                              }\n                            },\n                             {\n                              name: 'removeEvent',\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value: false,\n                                label: 'Remove event?',\n                                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 255,\n                                \"width\": 50\n                              }\n                            },\n                          {\n                              name: 'startDate',\n                              execActionData: [{ 'removeEvent': false }, ],\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value: new Date(res.start),\n                                label: 'Start date',\n                                type: 'datetime', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: 'Start date/time of the event',\n                                required: false, // false by default\n                                maxlength: 255,\n                                \n                                // \"width\": 50\n                              }\n                            },\n                             {\n                              name: 'endDate',\n                              htmlTag: 'input',  // button | select | textarea\n                              execActionData: [{ 'removeEvent': false }],\n                              options: {\n                                value: new Date(res.end),\n                                label: 'End date',\n                                type: 'datetime', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: 'End date/time of the event',\n                                required: false, // false by default\n                                maxlength: 255,\n                                min : 'startDate'\n                                //  \"width\": 50\n                              }\n            },\n                            {\n                              name: 'project_id',\n                              htmlTag: 'select',  // button | select | textarea\n                              optionsGroup: projects,\n                              execActionData: [ { 'removeEvent': false },],\n                              options: {\n                                value: res.project_id,\n                                label: 'Project',\n                                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 50\n                              }\n                         },\n                        {\n                          name: 'notification_type',\n                          htmlTag: 'input',  // button | select | textarea\n                          execActionData: [\n                                    { 'removeEvent': false },\n                                    //  { 'removeEvent': false }\n                                    ],\n                          options: {\n                            value: res.notification_type,\n                            label: 'Notification',\n                            type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: '',\n                            required: false, // false by default\n                            maxlength: 50\n                          }\n                        },\n                        {\n                          name: 'notification_number',\n                          htmlTag: 'input',  // button | select | textarea\n                          execActionData: [\n                            { 'notification_type': true },\n                             { 'removeEvent': false }\n                            ],\n                          options: {\n                            value: res.notification_number,\n                            label: 'Amount',\n                            type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: '',\n                            required: false, // false by default\n                            maxlength: 50\n                          }\n                        },\n                        {\n                              name: 'notification_entity',\n                              htmlTag: 'select',  // button | select | textarea\n                              optionsGroup: {\n                                    'minutes' : \"Minutes\",\n                                    'hours': \"Hours\",\n                                    'days': \"Days\",\n                              },\n                              execActionData: [\n                                    { 'notification_type': true },\n                                     { 'removeEvent': false }\n                                    ],\n                              options: {\n                                value: res.notification_number,\n                                label: 'Type',\n                                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: true, // false by default\n                                maxlength: 50\n                              }\n                        },\n                        {\n                          name: 'notes',\n                          htmlTag: 'textarea',  // button | select | textarea\n                          execActionData: [\n                                    { 'removeEvent': false },\n                                     { 'removeEvent': false }\n                                    ],\n                          options: {\n                            value: res.notes,\n                            label: 'Notes',\n                            type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: '',\n                            required: false, // false by default\n                            maxlength: 500\n                          }\n                        },\n        \n                        ]}]}\n            \n            node.send(msg) \n    })   \n","outputs":1,"noerr":0,"x":2827.737850189209,"y":4507.809545516968,"wires":[["f1569ea9.b8ffd"]]},{"id":"3835b64a.b8e03a","type":"link in","z":"d8703926.e2eca","name":"","links":["cbbdb354.3aebc","9f5effff.357bd8","bc1e82d3.0e56d"],"x":2030,"y":4093.333646774292,"wires":[["f15b0094.d5f208"]]},{"id":"bc1e82d3.0e56d","type":"link out","z":"d8703926.e2eca","name":"","links":["3835b64a.b8e03a","2ed96131.b45fde"],"x":815,"y":3940,"wires":[]},{"id":"2ed96131.b45fde","type":"link in","z":"d8703926.e2eca","name":"","links":["bc1e82d3.0e56d"],"x":1095,"y":3860,"wires":[["ae22ca70.a31c18"]]},{"id":"77fb1981.1e8c48","type":"link in","z":"d8703926.e2eca","name":"","links":["2de08b73.f7fefc"],"x":1095,"y":3800,"wires":[["615eea0b.763ce4"]]},{"id":"2de08b73.f7fefc","type":"link out","z":"d8703926.e2eca","name":"","links":["77fb1981.1e8c48"],"x":815,"y":3900,"wires":[]},{"id":"253608e4.93d938","type":"link in","z":"d8703926.e2eca","name":"","links":["2bd16e9e.7c8812"],"x":1095,"y":3760,"wires":[["7f018ec2.915d68"]]},{"id":"2bd16e9e.7c8812","type":"link out","z":"d8703926.e2eca","name":"","links":["253608e4.93d938"],"x":815,"y":3860,"wires":[]},{"id":"5731bf65.0fc278","type":"link out","z":"d8703926.e2eca","name":"","links":["cc658dba.c7f2d8"],"x":4515,"y":2340,"wires":[]},{"id":"696e802.154d48","type":"function","z":"d8703926.e2eca","name":"Set modal hide Data","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"5b191e30-5ed1-96df-f517-e963164ab500\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"hide\"}},\n            \n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\nreturn msg;","outputs":1,"noerr":0,"x":4600,"y":2300,"wires":[["6aabdce9.91cf04"]]},{"id":"6aabdce9.91cf04","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":4735,"y":2300,"wires":[]},{"id":"530d6b13.9826d4","type":"function","z":"d8703926.e2eca","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"67f1b4b1-9dc5-a787-de7d-d44892d31ba2\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":1580,"y":4700,"wires":[["f79ed97a.685ca"]]},{"id":"c8704e8e.e5cf88","type":"subflow:45759581.11da84","z":"d8703926.e2eca","name":"","x":1430,"y":4700,"wires":[["530d6b13.9826d4"]]},{"id":"f79ed97a.685ca","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":1695,"y":4700,"wires":[]},{"id":"464211e5.f2bdc","type":"link out","z":"d8703926.e2eca","name":"","links":["cc658dba.c7f2d8"],"x":4375,"y":2340,"wires":[]},{"id":"6535b938.767ac8","type":"function","z":"2294209a.0c95b","name":"Prepair delete queries","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar user, other;\n \n \nother = {   payload : {user_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)},\n            operation : \"remove\"\n}\n\nmsg.payload = {_id: new ObjectID(msg.RevotioData.PostData.actionType.data.appUserId)}\nmsg.operation = \"remove\"\nuser= msg;\n\nreturn [user, other];","outputs":2,"noerr":0,"x":4120,"y":600,"wires":[["35b3b956.affe26"],["8b08f368.889138"]]},{"id":"a00aba6e.69bb58","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["2cc71536.88996a"],"x":1395,"y":440,"wires":[["3e910553.3e65aa"]]},{"id":"bdcc23ed.ccf9c8","type":"comment","z":"d8703926.e2eca","name":"gantt","info":"","x":1410,"y":3020,"wires":[]},{"id":"608adfac.958dc","type":"comment","z":"d8703926.e2eca","name":"Calendar Gagdet actions","info":"","x":2470,"y":2880,"wires":[]},{"id":"a9c50456.44613","type":"comment","z":"d8703926.e2eca","name":"Calendar gadgets","info":"","x":4890,"y":2780,"wires":[]},{"id":"9deb39e1.c0f1f","type":"link in","z":"d8703926.e2eca","name":"gantt INIT","links":["2cd937aa.7a1d28","866407b7.b88488","6c162efd.158dd8"],"x":1455,"y":3100,"wires":[["c5ae5d94.331568","70efba07.1a7c14"]]},{"id":"c5ae5d94.331568","type":"debug","z":"d8703926.e2eca","name":"Gantt INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData","targetType":"msg","x":1550,"y":3060,"wires":[]},{"id":"36dd95cf.14c4ba","type":"link in","z":"d8703926.e2eca","name":"gantt Action","links":["bc7d8393.692e6","90a81459.069478","ded78440.200f6"],"x":3575,"y":3040,"wires":[["3880624b.c59cc6","56e4943f.88ec04"]]},{"id":"3880624b.c59cc6","type":"debug","z":"d8703926.e2eca","name":"Gantt Action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"RevotioData.PostData","targetType":"msg","x":3648.5712928771973,"y":2907.6431846618652,"wires":[]},{"id":"e7db9cb8.a3f61","type":"link out","z":"d8703926.e2eca","name":"","links":["570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2935,"y":2940,"wires":[]},{"id":"56e4943f.88ec04","type":"function","z":"d8703926.e2eca","name":"Route POST","func":"// Get libraries\nvar moment = global.get('moment');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delair output var's\nvar  menu, Calendar,RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect, chartType;\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n// Check if it is a Gadget action\nif ( PostData.hasOwnProperty('gadgetType')) {\n        // Check if it was a menu action\n\n        if (PostData.gadgetType === \"Menu\") {\n           menu = msg;\n        } else if (PostData.gadgetType=== \"revotio-calendar\"){\n            Calendar = msg;\n        }else if (PostData.gadgetType=== \"revotio-breadcrumbs\"){\n            RevotioBreadCrumbs  = msg;\n        }else if (PostData.gadgetType=== \"custom-form\"){\n            \n            if (PostData.gadgetData.formObj.FormType  ===  \"event\"){\n                CalFormAction = msg;\n            } else {\n                FormAction = msg;\n            }\n        }\n        else if (PostData.gadgetType=== \"revotio-tabs-select\"){\n            tabsSelect  = msg;\n        }\n        else if (PostData.gadgetType=== \"dynamic-btn\" ){\n            chartType  = msg;\n        }\n\n\n        \n}\n\nreturn [menu, Calendar, RevotioBreadCrumbs, FormAction, CalFormAction, tabsSelect, chartType];\n\n\n\n","outputs":7,"noerr":0,"x":3676.0712890625,"y":3053.64306640625,"wires":[["97795aa4.2851f8"],[],[],["40d5a22b.e595a4"],["e3dcce3d.42ae8"],[],["c61cc568.898a08"]],"outputLabels":["menu","Calendar","RevotioBreadCrumbs, ","FormAction","CalFormAction","tabsSelect","chartType"]},{"id":"40d5a22b.e595a4","type":"function","z":"d8703926.e2eca","name":"Set Form Data","func":"msg.RevotioData.FlowData.Form.FormActionType = \"Post\" ;\nreturn msg;","outputs":1,"noerr":0,"x":4000,"y":3100,"wires":[["34c83019.cd3e"]]},{"id":"27687860.1bd24","type":"link in","z":"d8703926.e2eca","name":"Calendar gadget INIT","links":["244228b3.fa2aa8","66042c32.e9d394","2ceaa7fe.203ec","92932815.099168","4549c73c.72eaa","e5d610e5.ac8508"],"x":2035,"y":3000,"wires":[["fb87cad4.cf0938"]]},{"id":"e3dcce3d.42ae8","type":"function","z":"d8703926.e2eca","name":"Preform events DB action","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\n// if (moment(msg.RevotioData.PostData.gadgetData.formData.endDate).isBefore(moment(msg.RevotioData.PostData.gadgetData.formData.startDate))){\n//     msg.RevotioData.PostData.gadgetData.formData.endDate = moment(msg.RevotioData.PostData.gadgetData.formData.startDate)\n// }\n\nobj = \n    {\n      \n        \"title\":msg.RevotioData.PostData.gadgetData.formData.title,\n        \"notes\":msg.RevotioData.PostData.gadgetData.formData.notes,\n        \"entity\": msg.RevotioData.FlowData.entity,\n        \"entityId\": new ObjectID(msg.RevotioData.FlowData.entityId)\n    }\n    \nif (msg.RevotioData.PostData.gadgetData.hasOwnProperty(\"formData\") && msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"removeEvent\") && msg.RevotioData.PostData.gadgetData.formData.removeEvent === true){\n    obj.removeEvent = true\n} else {\n obj.removeEvent = false\n \n\nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"allDay\") === true){\n        obj[\"allDay\"]   = msg.RevotioData.PostData.gadgetData.formData.allDay\n        //  obj[\"start\"]   = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.startDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + \"00:00\" + \":00Z\")\n        //  obj[\"end\"]     = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.endDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + \"00:00\" + \":00Z\")\n        //  obj[\"startTime\"] =  \"00:00\"\n        //  obj[\"endTime\"] = \"00:00\"\n           obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n        \n\n    }\nelse {\n     obj[\"allDay\"]  = false\n    //  obj[\"start\"]  = new Date(moment(msg.RevotioData.PostData.gadgetData.formData.startDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + msg.RevotioData.PostData.gadgetData.formData.startTime+ \":00Z\")\n    //  obj[\"end\"]  =new Date(moment(msg.RevotioData.PostData.gadgetData.formData.endDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") + \"T\" + msg.RevotioData.PostData.gadgetData.formData.endTime+ \":00Z\")\n    //  obj[\"startTime\"] = msg.RevotioData.PostData.gadgetData.formData.startTime\n    //  obj[\"endTime\"] = msg.RevotioData.PostData.gadgetData.formData.endTime\n               obj[\"start\"]   = new Date(msg.RevotioData.PostData.gadgetData.formData.startDate)\n         obj[\"end\"]     = new Date(msg.RevotioData.PostData.gadgetData.formData.endDate)\n}\n\n\n    \nif (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"notification_type\") === true){\n    obj[\"notification_type\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_type\n     obj[\"notification_number\"] = msg.RevotioData.PostData.gadgetData.formData.notification_number\n      obj[\"notification_entity\"]  = msg.RevotioData.PostData.gadgetData.formData.notification_entity\n  \n} else {\n    obj[\"notification_type\"] = false \n}\n\n\n\n\nif (msg.RevotioData.FlowData.level === \"organization\"){\n    obj[\"organization_id\"] = new ObjectID(msg.RevotioData.FlowData.organization_id)\n}\n}\n\n query = {\n                query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj._id)},\n                update :{\"$set\": obj},\n                options : {upsert : true }\n            }\n            Obj = { \n                    query : query,\n                \n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'events',\n                operation:\"update\",\n                        }  \n               \n                mongodbTools.resolveAsync(Obj, node, function(res){\n                \n                    node.send(msg)\n                })\n","outputs":1,"noerr":0,"x":4030,"y":3180,"wires":[["66042c32.e9d394","3ecc1dbb.1dd27a"]]},{"id":"66042c32.e9d394","type":"link out","z":"d8703926.e2eca","name":"","links":["27687860.1bd24"],"x":4175,"y":3200,"wires":[]},{"id":"b9584615.a119c8","type":"comment","z":"d8703926.e2eca","name":"Gadget payload","info":"","x":2131.666561126709,"y":2954.166479110718,"wires":[]},{"id":"3ecc1dbb.1dd27a","type":"function","z":"d8703926.e2eca","name":"Set modal hide Data","func":"var gadgetsList =[ {\n             \"gadgetId\":  \"5b191e30-5ed1-96df-f517-e963164ab500\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":\"hide\"}},\n            \n            ];\n\n\n    \n\nmsg.payload = {gadgetsList:gadgetsList};\nreturn msg;","outputs":1,"noerr":0,"x":4260,"y":3160,"wires":[["7bf09f51.39e638"]]},{"id":"7bf09f51.39e638","type":"link out","z":"d8703926.e2eca","name":"","links":["7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":4375,"y":3160,"wires":[]},{"id":"c561fdf3.b276c","type":"link in","z":"d8703926.e2eca","name":"gantt - design","links":["e9e8a837.baac","3f9683f3.861d14","f16d4d07.1e2f28"],"x":1475,"y":2860,"wires":[["4c799513.e81f0c"]]},{"id":"6d1463d3.f65d04","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":2050,"y":2700,"wires":[]},{"id":"abb11a97.719948","type":"function","z":"d8703926.e2eca","name":"gantt -  design","func":"msg.topbarContanerId =  \"9981600d-1d01-729c-66eb-aeb81f6c55a3\";\nreturn msg;","outputs":1,"noerr":0,"x":1740,"y":2860,"wires":[["d7e3b62f.c80e08"]]},{"id":"d0a1eaab.13dd1","type":"function","z":"d8703926.e2eca","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"5389815a-9736-d836-ea48-18de46660676\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2291.666561126709,"y":3114.166479110718,"wires":[["cb71ddc7.f86018"]]},{"id":"540cf497.83fa9c","type":"subflow:45759581.11da84","z":"d8703926.e2eca","name":"","env":[],"x":2141.666561126709,"y":3114.166479110718,"wires":[["d0a1eaab.13dd1"]]},{"id":"cb71ddc7.f86018","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2406.666561126709,"y":3114.166479110718,"wires":[]},{"id":"d9e1d560.16989","type":"link in","z":"d8703926.e2eca","name":"","links":["244228b3.fa2aa8"],"x":2066.666561126709,"y":3114.166479110718,"wires":[["540cf497.83fa9c"]]},{"id":"58bc9c76.f84104","type":"link in","z":"d8703926.e2eca","name":"","links":["244228b3.fa2aa8"],"x":2075,"y":3160,"wires":[["56ddad72.495aac"]]},{"id":"ab0b0518.41d1f","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2415,"y":3160,"wires":[]},{"id":"56ddad72.495aac","type":"function","z":"d8703926.e2eca","name":"Gadget payload","func":"msg.payload = {gadgetsList : [ {\n    \"gadgetId\":\"077c91ee-3d83-9213-2923-1823f40d7fd3\",\n      \"gadgetName\":\"Scope tabs\",\n      \"gadgetType\":\"revotio-tabs-select\",\n      \"gadgetData\":{\n         \"dropdown\":{\n            // \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n            // \"options\":DropDown\n         },\n         \"tabs\":[ {\n               \"dropdownKey\":msg.RevotioData.session.Page,\n               \"fields\":\"\"\n         }],\n          \n      }}]};\n      \nmsg.tabsSettings = {\n    entity : msg.RevotioData.FlowData.Data.gadgetOptions.entity,\n    entityId : msg.RevotioData.FlowData.Data.gadgetOptions.entityId,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2160,"y":3160,"wires":[[]]},{"id":"70efba07.1a7c14","type":"function","z":"d8703926.e2eca","name":"INIT flow","func":"msg.RevotioData.FlowData.Data.gadgetOptions = {\n    chartType: \"funnel\",\n}\n\n if (msg.RevotioData.FlowData.hasOwnProperty(\"project_id\")){\n        \n                msg.RevotioData.FlowData.Data.gadgetOptions.entity ='project';\n                msg.RevotioData.FlowData.Data.gadgetOptions.entityId = msg.RevotioData.FlowData.project_id;\n }else {\n                msg.RevotioData.FlowData.Data.gadgetOptions.entity ='organization';\n                msg.RevotioData.FlowData.Data.gadgetOptions.entityId = msg.RevotioData.FlowData.organization_id;\n } \nreturn msg;","outputs":1,"noerr":0,"x":1540,"y":3100,"wires":[["244228b3.fa2aa8"]]},{"id":"244228b3.fa2aa8","type":"link out","z":"d8703926.e2eca","name":"cal. INIT link out","links":["27687860.1bd24","d9e1d560.16989","858189b4.687e28","58bc9c76.f84104","33b5e89a.25e1d8"],"x":1735,"y":3100,"wires":[]},{"id":"33b5e89a.25e1d8","type":"link in","z":"d8703926.e2eca","name":"","links":["244228b3.fa2aa8"],"x":2075,"y":3240,"wires":[["d313cbfd.0bb9c8"]]},{"id":"5bdc7bec.cdb68c","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2415,"y":3240,"wires":[]},{"id":"d313cbfd.0bb9c8","type":"function","z":"d8703926.e2eca","name":"Chart type Btn","func":"\n// msg.payload = \n//     {\n//   \"gadgetsList\":[{            \n//       \"gadgetId\": \"12e906e5-a070-2fd9-1b4d-0f11957f3bfd\",\n//             \"gadgetName\":\"chartType selector\",\n//             \"gadgetType\":\"dynamic-btn\",\n//             \"gadgetOptions\":\n//                 {\"types\":\"\",\n//                 \"styles\":[\"btn-embossed\",\n//                 \"btn-warning\", \"btn-square\"],\n//                 \"buttonalign\":\"right\",\n//                 \"textcolor\":\"black\",\n//                 \"buttonlabel\":\"Edit project\"},\n//                 \"gadgetData\":\"\"\n       \n//   }]\n\n//                 // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n// } ;   \n\n\n//   DropdownData = [{\n//         \"label\":\"Remove - \" + msg.RevotioData.FlowData.Data.OrganizationData.name  + \" from \"+ msg.RevotioData.FlowData.Data.ProjectParticipantData.ProjectData.name , \"action\": \"Project\"\n//     }]\n    \n//     _.each(msg.RevotioData.FlowData.Data.ParticipantData, function(Item, Index){\n        \n//         if (Item.type === \"work_package\" &&Item.WorkPackageData !== null ){\n            \n//           DropdownData.push({\n//               \"label\":\"Remove - \" + msg.RevotioData.FlowData.Data.OrganizationData.name  + \" from \"+ Item.WorkPackageData.work_package_name , \"action\":Item.WorkPackageData._id\n    \n//           }) \n//         }\n        \n//     })\n    \n   \n\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n\"gadgetId\": \"12e906e5-a070-2fd9-1b4d-0f11957f3bfd\",\n            \"gadgetName\":\"chartType selector\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                { types:['dropdown'],\n                \"styles\":[\"btn-embossed\",\n                \"btn-info\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Select chart type\"},\n            \"gadgetData\":{\"DropdownData\":   [{\n                                            label: \"Gantt\",\n                                            action : \"gantt\"\n                                            },\n                                            {\n                                            label: \"Funnel\",\n                                            action : \"funnel\"\n                                        }]}\n  }]};\nreturn msg;","outputs":1,"noerr":0,"x":2260,"y":3240,"wires":[["5bdc7bec.cdb68c"]]},{"id":"fb87cad4.cf0938","type":"function","z":"d8703926.e2eca","name":"Route based on chart type","func":"var gantt, funnel;\n\nif (msg.RevotioData.FlowData.Data.gadgetOptions.chartType === 'gantt'){\n    gantt = msg;\n} else if (msg.RevotioData.FlowData.Data.gadgetOptions.chartType === 'funnel'){\n    funnel = msg;\n}\nreturn [gantt, funnel];","outputs":2,"noerr":0,"x":2220,"y":3000,"wires":[["739f6edc.e5be"],["389c7a14.78d116"]],"outputLabels":["gantt","funnel"]},{"id":"c61cc568.898a08","type":"function","z":"d8703926.e2eca","name":"Set ActionType in gadgetSettings","func":"\nmsg.RevotioData.FlowData.Data.gadgetOptions.chartType = msg.RevotioData.PostData.actionType\n           \nreturn msg;","outputs":1,"noerr":0,"x":4100,"y":3340,"wires":[["4549c73c.72eaa"]]},{"id":"4549c73c.72eaa","type":"link out","z":"d8703926.e2eca","name":"","links":["27687860.1bd24"],"x":4335,"y":3340,"wires":[]},{"id":"389c7a14.78d116","type":"function","z":"d8703926.e2eca","name":"get All participated projects","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n// Get UserData\n\n\n        if (msg.RevotioData.FlowData.Data.gadgetOptions.entity ==='project'){\n            match = { \n                    \"$match\" : {\n                        \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                        \"type\" : \"project\"\n                    }\n            }\n        }\n\n                           \nelse {\n\n  \n\n    match = { \n                \"$match\" : {\n                    \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                    \"type\" : \"project\"\n                }\n            }\n}\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [\n            match,\n        { \n            \"$lookup\" : {\n                \"from\" : \"projects\", \n                \"localField\" : \"project_id\", \n                \"foreignField\" : \"_id\", \n                \"as\" : \"ProjectData\"\n            }\n        }, \n        { \n            \"$unwind\" : {\n                \"path\" : \"$ProjectData\", \n                \"includeArrayIndex\" : \"arrayIndex\", \n                \"preserveNullAndEmptyArrays\" : false\n            }\n        }, \n        { \n            \"$group\" : {\n                \"_id\" : \"$project_id\", \n                \"submitted_funding_amount\" : {\n                    \"$sum\" : \"$ProjectData.submitted_funding_amount\"\n                }, \n                \"approved_funding_amount\" : {\n                    \"$sum\" : \"$ProjectData.approved_funding_amount\"\n                }, \n                \"end_date\" : {\n                    \"$first\" : \"$ProjectData.end_date\"\n                }, \n                \"name\" : {\n                    \"$first\" : \"$ProjectData.name\"\n                }\n            }\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"transactions\", \n                \"localField\" : \"_id\", \n                \"foreignField\" : \"project_id\", \n                \"as\" : \"workPackageTransactions\"\n            }\n        }, \n        { \n            \"$group\" : {\n                \"_id\" : \"$_id\", \n                \"submitted_funding_amount\" : {\n                    \"$first\" : \"$submitted_funding_amount\"\n                }, \n                \"approved_funding_amount\" : {\n                    \"$first\" : \"$approved_funding_amount\"\n                }, \n                \"end_date\" : {\n                    \"$first\" : \"$end_date\"\n                }, \n                \"name\" : {\n                    \"$first\" : \"$name\"\n                }, \n                \"transactions\" : {\n                    \"$first\" : \"$workPackageTransactions\"\n                }\n            }\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"members\", \n                \"localField\" : \"_id\", \n                \"foreignField\" : \"project_id\", \n                \"as\" : \"memberData\"\n            }\n        }, \n        { \n            \"$group\" : {\n                \"_id\" : \"$_id\", \n                \"submitted_funding_amount\" : {\n                    \"$first\" : \"$submitted_funding_amount\"\n                }, \n                \"approved_funding_amount\" : {\n                    \"$first\" : \"$approved_funding_amount\"\n                }, \n                \"end_date\" : {\n                    \"$first\" : \"$end_date\"\n                }, \n                \"name\" : {\n                    \"$first\" : \"$name\"\n                }, \n                \"transactions\" : {\n                    \"$first\" : \"$transactions\"\n                }, \n                \"memberData\" : {\n                    \"$first\" : \"$memberData\"\n                }\n            }\n        }\n                                    ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n                aggregateObj.query.query.unshift(match)\n                 \n                mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                        \n                        msg.projects = res;\n                        \n                       \n                        \n                        \n                        node.send(msg) \n                        \n                       \n                }) \n            \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":2540,"y":2960,"wires":[["600c13c2.8abacc"]]},{"id":"739f6edc.e5be","type":"function","z":"d8703926.e2eca","name":"get All participated projects","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n// Get UserData\n      \n               \n        if (msg.RevotioData.FlowData.Data.gadgetOptions.entity ==='project'){\n        \n               \n     \n                \n                match = { \n                    \"$match\" : {\n                        \"project_id\" : new ObjectID(msg.RevotioData.FlowData.project_id), \n                        \"type\" : \"project\"\n                    }\n            }\n        }\n\n                           \nelse {\n\n  \n\n    match = { \n                \"$match\" : {\n                    \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                    \"type\" : \"project\"\n                }\n            }\n}\n\n                           \n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [\n                                        \n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"projects\", \n                                                \"localField\" : \"project_id\", \n                                                \"foreignField\" : \"_id\", \n                                                \"as\" : \"ProjectData\"\n                                            }\n                                        }, \n                                        { \n                                            \"$unwind\" : {\n                                                \"path\" : \"$ProjectData\", \n                                                \"includeArrayIndex\" : \"arrayIndex\", \n                                                \"preserveNullAndEmptyArrays\" : false\n                                            }\n                                        },      \n                                                                                 { \n                                            \"$lookup\" : {\n                                                \"from\" : \"members\", \n                                                \"localField\" : \"ProjectData._id\", \n                                                \"foreignField\" : \"project_id\", \n                                                \"as\" : \"members\"\n                                            }\n                                        }, \n                                        // { \n                                        //     \"$unwind\" : {\n                                        //         \"path\" : \"$members\", \n                                        //         \"includeArrayIndex\" : \"arrayIndex\", \n                                        //         \"preserveNullAndEmptyArrays\" : false\n                                        //     }\n                                        // },  \n                                        \n                                        // {\n                                        //     \"$match\":{\n                                        //         \"members.record_type\": \"membership\"\n                                        //     }\n                                        // },\n                                        \n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"employee\", \n                                                \"localField\" : \"organization_id\", \n                                                \"foreignField\" : \"organization_id\", \n                                                \"as\" : \"employees\"\n                                            }\n                                        }, \n                                        // { \n                                        //     \"$unwind\" : {\n                                        //         \"path\" : \"$members.employee\", \n                                        //         \"includeArrayIndex\" : \"arrayIndex\", \n                                        //         \"preserveNullAndEmptyArrays\" : false\n                                        //     }\n                                        // }, \n                                         { \n                                            \"$project\" : {\n                                                \n                                                    \"Department\":1,\n                                                    \"project_id\":1,\n                                                    \"ProjectData.project_type\":1,\n                                                    'ProjectData.name' : 1, \n                                                    'ProjectData.end_date' : 1, \n                                                    'ProjectData.project_end_date' : 1, \n                                                    'ProjectData.start_date' : 1, \n                                                    'ProjectData.projectDepartment' : 1, \n                                                    'ProjectData.ProjectType' : 1, \n                                                    'ProjectData.status' : 1, \n                                                    \"ProjectData.date_of_submission_application\":1,\n                                                    \"ProjectData.date_of_approval\":1,\n                                                    \"members\":1,\n                                                    \"employees\":1,\n                                                    // \"members.employee_id\":1,\n                                                    // \"members.start_date\":1,\n                                                    // \"members.end_date\":1,\n                                                    // \"members._id\" : 1,\n                                                    // \"members.employee.first_name\":1,\n                                                    // \"members.employee.last_name\":1,\n                                                    // \"members.employee.avatar\":1,\n                                                    \"ProjectData.Department\":1,\n                                                    \"ProjectData.funding_scheme\":1,\n                                                    // \"ProjectData.Department\":1,\n                                                    // \"ProjectData.Department\":1,\n                                                    // \"ProjectData.Department\":1,\n                                            }\n                                        },\n                                        \n                                        \n                                        {\"$group\":\n                                        {\n                                            //  _id : \"$members.employee_id\",\n                                            _id : \"$project_id\",\n                                        \t\"members\": {\"$first\": \"$members\"},\n                                        \t\"Department\": {\"$first\": \"$Department\"},\n                                        \t\"name\": {\"$first\": \"$ProjectData.name\"},\n                                            \"end_date\": {\"$first\": \"$ProjectData.end_date\"},\n                                        \t\"project_id\": {\"$first\": \"$project_id\"},\n                                        \t\"project_end_date\": {\"$first\": \"$ProjectData.project_end_date\"},\n                                        \t\"start_date\": {\"$first\": \"$ProjectData.start_date\"},\n                                        \t\"projectDepartment\": {\"$first\": \"$ProjectData.Department\"},\n                                        \t\"ProjectType\": {\"$first\": \"$ProjectData.ProjectType\"},\n                                        \t\"date_of_submission_application\": {\"$first\": \"$ProjectData.date_of_submission_application\"},\n                                        // \t\"contact_person_organization\": {\"$first\": \"$ProjectData.contact_person_organization\"},\n                                        // \t\"project_leader\": {\"$first\": \"$ProjectData.project_leader\"},\n                                        \t\"status\": {\"$first\": \"$ProjectData.status\"},\n                                        \t\"funding_scheme\": {\"$first\": \"$ProjectData.funding_scheme\"},\n                                        // \t\"contact_person_pno_consultants\": {\"$first\": \"$ProjectData.contact_person_pno_consultants\"},\n                                        \t\"date_of_approval\": {\"$first\": \"$ProjectData.date_of_approval\"},\n                                        \t\"employees\":{\"$first\":\"$employees\"}\n                                        }},\n                                        \n                                        // {\"$group\":\n                                        // {\n                                        //      _id : \"$project_id\",\n                                        // \t\"members\": {\"$first\": [\"first_name\" , \"last_name\" , \"avatar\" ] , \"$push\":\"$members\"},\n                                        // \t\"Department\": {\"$first\": \"$Department\"},\n                                        // \t\"name\": {\"$first\": \"$name\"},\n                                        //     \"end_date\": {\"$first\": \"$end_date\"},\n                                        // \t\"project_id\": {\"$first\": \"$project_id\"},\n                                        // \t\"project_end_date\": {\"$first\": \"$project_end_date\"},\n                                        // \t\"start_date\": {\"$first\": \"$tart_date\"},\n                                        // \t\"projectDepartment\": {\"$first\": \"$Department\"},\n                                        // \t\"ProjectType\": {\"$first\": \"$ProjectType\"},\n                                        // \t\"date_of_submission_application\": {\"$first\": \"$date_of_submission_application\"},\n                                        // // \t\"contact_person_organization\": {\"$first\": \"$ProjectData.contact_person_organization\"},\n                                        // // \t\"project_leader\": {\"$first\": \"$ProjectData.project_leader\"},\n                                        // \t\"status\": {\"$first\": \"$status\"},\n                                        // \t\"funding_scheme\": {\"$first\": \"$funding_scheme\"},\n                                        // // \t\"contact_person_pno_consultants\": {\"$first\": \"$ProjectData.contact_person_pno_consultants\"},\n                                        // \t\"date_of_approval\": {\"$first\": \"$date_of_approval\"},\n                                        // }},\n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"work_packages\", \n                                                \"localField\" : \"project_id\", \n                                                \"foreignField\" : \"project_id\", \n                                                \"as\" : \"workPackages\"\n                                            }\n                                        }, \n                                        \n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"settings\", \n                                                \"localField\" : \"funding_scheme\", \n                                                \"foreignField\" : \"_id\", \n                                                \"as\" : \"FundingScheme\"\n                                            }\n                                        }, \n\n                                        { \n                                            \"$lookup\" : {\n                                                \"from\" : \"settings\", \n                                                \"localField\" : \"status\", \n                                                \"foreignField\" : \"_id\", \n                                                \"as\" : \"projectStatus\"\n                                            }\n                                        }, \n                                          { \n                                            \"$lookup\" : {\n                                                \"from\" : \"settings\", \n                                                \"localField\" : \"Department\", \n                                                \"foreignField\" : \"_id\", \n                                                \"as\" : \"departmentData\"\n                                            }\n                                        }, \n                                        // { \n                                        //     \"$lookup\" : {\n                                        //         \"from\" : \"user_accounts\", \n                                        //         \"localField\" : \"project_leader\", \n                                        //         \"foreignField\" : \"user\", \n                                        //         \"as\" : \"ProjectLeader\"\n                                        //     }\n                                        // }, \n                                        // { \n                                        //     \"$lookup\" : {\n                                        //         \"from\" : \"user_accounts\", \n                                        //         \"localField\" : \"contact_person_pno_consultants\", \n                                        //         \"foreignField\" : \"user\", \n                                        //         \"as\" : \"PNOConsultantContact\"\n                                        //     }\n                                        // }, \n                  \n                                        { \n                                            \"$unwind\" : {\n                                                \"path\" : \"$FundingScheme\", \n                                                \"includeArrayIndex\" : \"arrayIndex\", \n                                                \"preserveNullAndEmptyArrays\" : false\n                                            }\n                                        }, \n                                         { \n                                            \"$unwind\" : {\n                                                \"path\" : \"$projectStatus\", \n                                                \"includeArrayIndex\" : \"arrayIndex\", \n                                                \"preserveNullAndEmptyArrays\" : false\n                                            }\n                                        }, \n                                         { \n                                            \"$project\" : {\n                                                \n                                                    \"Department\":1,\n                                                    \"project_id\":1,\n                                                    \n                                                    \"project_type\":1,\n                                                    'name' : 1, \n                                                    'end_date' : 1, \n                                                    'project_end_date' : 1, \n                                                    'start_date' : 1, \n                                                    'projectDepartment' : 1, \n                                                    \n                                                    'ProjectType' : 1, \n                                                    // 'contact_person_pno_consultants' : 1, \n                                                    \n                                                    // 'contact_person_organization' : 1, \n                                                    // 'project_leader' : 1, \n                                                    'status' : 1, \n                                                    \n                                                    'FundingScheme.name' : 1, \n                                                    'PNOConsultantContact' : 1, \n                                                    'ProjectLeader' : 1, \n                                                    'projectStatus.name' : 1, \n                                                    \"workPackages\":1,\n                                                    \"departmentData\" : 1,\n                                                    \"date_of_submission_application\":1,\n                                                    \"date_of_approval\":1,\n                                                    \"members\":1,\n                                                    \"employees\":1\n                                                    \n                                                    \n                                                    \n                                            }\n                                        }\n                                    ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n                aggregateObj.query.query.unshift(match)\n                 \n                mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    \n                        \n                    \n                        msg.projects = res\n                        node.send(msg) \n                }) \n            \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":2540,"y":2920,"wires":[["409c5c21.f9a63c"]]},{"id":"409c5c21.f9a63c","type":"function","z":"d8703926.e2eca","name":"Gantt chart","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nday = 1000 * 60 * 60 * 24 ;\ntoday = new Date() ;\n\ncategories =  []\n// var today = new Date(),\n    // day = 1000 * 60 * 60 * 24,\n    // Utility functions\n    // dateFormat = Highcharts.dateFormat,\n    // defined = Highcharts.defined,\n    // isObject = Highcharts.isObject,\n    // reduce = Highcharts.reduce;\n\n// Set to 00:00:00:000 today\ntoday.setUTCHours(0);\ntoday.setUTCMinutes(0);\ntoday.setUTCSeconds(0);\ntoday.setUTCMilliseconds(0);\ntoday = today.getTime();\n\nvar series = []\n _.each(lodash.orderBy(msg.projects, [\"start_date\", \"name\"], [\"asc\", \"asc\"]) , function(Projects, index){\n\n    obj = {\n        name: Projects.name,\n        \n        data : []\n    }\n    \n    \n        \n    \n    obj.data.push({\n            name: Projects.name,\n            id:  Projects.name,\n            y:categories.length,\n            fontSymbol : global.get(\"icons.fas.project\"),\n            start: new Date(Number(moment(Projects.date_of_submission_application).format('x'))),\n            end: new Date(Number(moment(Projects.end_date).format('x'))),\n            // avatar : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n           type: '<strong>'\n        })\n        \n        categories.push(Projects.name)\n         \n         \n    \n    obj.data.push(\n              {\n            name: Projects.name + \" - submission\",\n            id:Projects.name + \" - submission\",\n            fontSymbol : global.get(\"icons.fas.project\"),\n            y:categories.length,\n            parent: Projects.name,\n            start: new Date(Number(moment(Projects.date_of_submission_application).format('x'))),\n            end: new Date(Number(moment(Projects.date_of_approval).format('x'))),\n            // avatar : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n            \n        })\n        categories.push(Projects.name + \" - submission\")\n        \n        \n        \n        obj.data.push(\n        {\n            name: Projects.name + \" - approved\",\n            id: Projects.name + \" - approved\",\n            dependency: Projects.name + \" - submission\",\n            fontSymbol : global.get(\"icons.fas.project\"),\n            y:categories.length, \n            parent: Projects.name,\n            start: new Date(Number(moment(Projects.date_of_approval).format('x'))),\n            end: new Date(Number(moment(Projects.start_date).format('x'))),\n            // avatar : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n        })\n        categories.push(Projects.name+ \" - approved\")\n         \n        \nobj.data.push({\n            name: Projects.name + \" - running\",\n            id:  Projects.name + \" - running\",\n            dependency: Projects.name + \" - approved\",\n            fontSymbol : global.get(\"icons.fas.project\"),\n            y:categories.length,\n            parent: Projects.name,\n            start: new Date(Number(moment(Projects.start_date).format('x'))),\n            end: new Date(Number(moment(Projects.end_date).format('x'))),\n            // avatar : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n        })\n        categories.push(Projects.name+ \" - running\")\n\n// add work packages   \n    _.each(lodash.orderBy(Projects.workPackages, [\"start_date_work_package\", \"end_date_work_package\"], [\"asc\", \"desc\"]), function(workPackageItem,workPackageItemIndex ){\n    \n        rangeStart  = moment.range(moment(workPackageItem.start_date_work_package), moment());\n        \n        if (moment(moment().isAfter(moment(workPackageItem.end_date_work_package))) === true){\n            rangeEnd = moment.range(moment(workPackageItem.end_date_work_package), moment(workPackageItem.end_date_work_package));\n        } else {\n            rangeEnd    = moment.range(moment(), moment(workPackageItem.end_date_work_package));\n        }\n            rangeTotal  = moment.range(moment(workPackageItem.start_date_work_package), moment(workPackageItem.end_date_work_package));\n            \n       obj.data.push({\n            name: String(workPackageItem.work_package_name),\n            id: workPackageItem.work_package_name,\n            project_id: workPackageItem.project_id,\n            work_package_id: workPackageItem._id,\n            // avatar : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n            dependency: \"     \" + Projects.name + \" - approved\",\n             y:categories.length, \n            fontSymbol : global.get(\"icons.fas.work_package\"),\n            parent: Projects.name,\n            togo : rangeEnd.diff('days') + \" days to go!\",\n            start: new Date(Number(moment(workPackageItem.start_date_work_package).format('x'))),\n            end: new Date(Number(moment(workPackageItem.end_date_work_package).format('x'))),\n            completed: {\n                amount: rangeStart.diff('days') / rangeTotal.diff('days')\n            },\n       }) \n       categories.push(String(workPackageItem.work_package_name))\n    })\n\n// add members\n\n    _.each(lodash.groupBy(lodash.filter(Projects.members, { \"record_type\": \"membership\" }),\"employee_id\" ), function(memberships,employeeId ){\n        EmployeeObj = {}\n        _.each(Projects.employees, function(employeeItem, employeeIndex){\n            if (String(employeeId) === String(employeeItem._id)){\n                EmployeeObj = employeeItem\n            }\n        })\n        \n        // EmployeeObj = lodash.find(Projects.employees, {_id: new ObjectID(employeeId)})\n        _.each(lodash.orderBy(memberships, [\"start_date\"], [\"asc\"]), function(memberItem,memberItemIndex ){\n            \n            \n            if (memberItem.start_date ){\n                rangeStart  = moment.range(moment(memberItem.start_date), moment());\n                if (moment(moment().isAfter(moment(memberItem.end_date))) === true){\n                    rangeEnd = moment.range(moment(memberItem.end_date), moment(memberItem.end_date));\n                } else {\n                    rangeEnd    = moment.range(moment(), moment(memberItem.end_date));\n                }\n                    rangeTotal  = moment.range(moment(memberItem.start_date), moment(memberItem.end_date));\n        \n                // check if membership exists\n                existingArr = lodash.orderBy(lodash.filter(obj.data, {employee_id : new ObjectID(memberItem.employee_id)}, [\"start\"], [\"asc\"]))\n                \n                if (existingArr.length === 0){\n                       obj.data.push({\n                            // name: \"1 - \" + Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name ,\n                            // id:  \"1 - \" + Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name ,\n                            name:Projects.name + \" - \" +  EmployeeObj.first_name + \" \" + EmployeeObj.last_name ,\n                            id:  Projects.name + \" - \" +  EmployeeObj.first_name + \" \" + EmployeeObj.last_name ,\n                            employee_id: new ObjectID(memberItem.employee_id) ,\n                            avatar : global.get(\"functions.fileManagement\")( EmployeeObj.avatar, EmployeeObj.avatar ,msg.RevotioData.session._id, \"copySync\"), \n                            membership_id : memberItem._id ,\n                            y:categories.length, \n                            fontSymbol : global.get(\"icons.fas.user\"),\n                            dependency: Projects.name + \" - approved\",\n                            parent: Projects.name,\n                            togo : rangeEnd.diff('days') + \" days to go!\",\n                            start: new Date(Number(moment(memberItem.start_date).format('x'))),\n                            end: new Date(Number(moment(memberItem.end_date).format('x'))),\n                            completed: {\n                                amount: rangeStart.diff('days') / rangeTotal.diff('days')\n                            },\n                       })\n                    categories.push(String(Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name))\n                } else if (existingArr.length > 0){\n                    \n                    \n                    \n                   obj.data.push({\n                        // name: existingArr.length + 1 + \" - \" +  Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name ,\n                        // id: existingArr.length  + 1 + \" - \" +  Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name ,\n                        name: Projects.name + \" - \" +  EmployeeObj.first_name + \" \" + EmployeeObj.last_name ,\n                        id:  Projects.name + \" - \" +  EmployeeObj.first_name + \" \" + EmployeeObj.last_name ,\n                        employee_id: new ObjectID(memberItem.employee_id) ,\n                        membership_id : memberItem._id ,\n                        fontSymbol : global.get(\"icons.fas.user\"),\n                        // avatar : global.get(\"functions.fileManagement\")( memberItem.employee.avatar, memberItem.employee.avatar ,msg.RevotioData.session._id, \"copySync\"),\n                        y: lodash.indexOf(categories ,String(Projects.name + \" - \" +  EmployeeObj.first_name + \" \" + EmployeeObj.last_name)) ,\n                        // dependency: existingArr[existingArr.length - 1].name , //  + \" - \" +  Projects.name + \" - \" +  memberItem.employee.first_name + \" \" + memberItem.employee.last_name,\n                        parent: Projects.name,\n                        togo : rangeEnd.diff('days') + \" days to go!\",\n                        start: new Date(Number(moment(memberItem.start_date).format('x'))),\n                        end: new Date(Number(moment(memberItem.end_date).format('x'))),\n                        completed: {\n                            amount: rangeStart.diff('days') / rangeTotal.diff('days')\n                        },\n                    }) \n                }\n            }\n        })\n    })\n    \n    obj.dataLabels=[{\n            enabled: true,\n            format: '<div style=\"width: 40px; height: 40px; overflow: hidden; border-radius: 50%; margin-left: -50px\">' + \n                '<img src={point.avatar} ' + \n                'style=\"width: 50px; margin-left: -5px; margin-top: -2px\"></div>',\n            useHTML: true,\n            align: 'left'\n        }, {\n            enabled: true,\n            format: '<i class=\"{point.fontSymbol}\" style=\"font-size: 1.5em\"></i>',\n            useHTML: true,\n            align: 'right'\n        }],\n    series.push(obj);\n})\n\n\nif (msg.projects.length > 0 ){\n     min =  new Date(Number(moment(lodash.orderBy(msg.projects, [\"date_of_submission_application\"], [\"asc\"])[0].date_of_submission_application).subtract(1,\"months\").format('x')));   \n     max =  new Date(Number(moment(lodash.orderBy(msg.projects, [\"end_date\"], [\"desc\"])[0].end_date).add(1,\"months\").format('x')));\n} else {\n    min = new Date();\n    max = new Date();\n}\ngadgetData =  {\n    title: {\n        text: ' Gantt ' + msg.RevotioData.FlowData.Data.gadgetOptions.entity + \" view\"\n    },\n    yAxis: {\n        categories: categories,\n         labels: {\n            align: 'left',\n            x: 5,\n            y: -2,\n            // enabled: true,\n            // format:\" <b> '{point.type}' <em> <br/> \"   ,\n            // useHTML: true,\n            // align: 'left'\n        }\n    },\n    plotOptions: {\n        series: {\n            animation: true, // Do not animate dependency connectors\n            // dragDrop: {\n            //     draggableX: true,\n            //     draggableY: true,\n            //     dragMinY: 0,\n            //     dragMaxY: 2,\n            //     dragPrecisionX: day / 3 // Snap to eight hours\n            // },\n            dataLabels: {\n                enabled: true,\n                format: '{point.name} {point.togo}' ,\n                style: {\n                    cursor: 'default',\n                    pointerEvents: 'none'\n                }\n            },\n            allowPointSelect: true,\n            // point: {\n            //     events: {\n            //         select: updateRemoveButtonStatus,\n            //         unselect: updateRemoveButtonStatus,\n            //         remove: updateRemoveButtonStatus\n            //     }\n            // }\n        }\n    },\n    xAxis: {\n        currentDateIndicator: true,\n        min: min,\n        max: max,\n        minPadding: 5,\n        maxPadding: 5\n        // min: moment().subtract('days', 2).format(\"DD-MM-YYYY\"),\n        // max: moment().add('days', 18).format(\"DD-MM-YYYY\"),\n    },\n    // title: {\n    //     text: 'Habitat of the Rusty Blackbird'\n    // },\n\n    // subtitle: {\n    //     text: 'An example of a distribution map in Highcharts.<br/>' +\n    //         'Source: <a href=\"http://en.wikipedia.org/wiki/File:Euphagus_carolinus_map.svg\">Wikipedia</a>.'\n    // },\n\n    // plotOptions: {\n    //     series: {\n    //         tooltip: {\n    //             headerFormat: '',\n    //             pointFormat: '{series.name} area'\n    //         }\n    //     }\n    // },\n\n    // legend: {\n    //     align: 'left',\n    //     backgroundColor: \"('Highcharts.theme' && 'Highcharts.theme.legendBackgroundColor') || 'rgba(255, 255, 255, 0.85)'\",\n    //     floating: true,\n    //     layout: 'vertical',\n    //     verticalAlign: 'bottom',\n    //     reversed: true\n    // },\n\n    series: series,\n\n    tooltip: {\n        outside: true\n    },\n    //  navigator: {\n    //     enabled: true,\n    //     liveRedraw: true,\n    //     series: {\n    //         type: 'gantt',\n    //         pointPlacement: 0.5,\n    //         pointPadding: 0.25\n    //     },\n    //     yAxis: {\n    //         min: 0,\n    //         max: 3,\n    //         reversed: true,\n    //         categories: []\n    //     }\n    // },\n    // scrollbar: {\n    //     enabled: true\n    // },\n    // rangeSelector: {\n    //     enabled: true,\n    //     selected: 0\n    // },\n    //     yAxis: {\n    //     uniqueNames: true\n    // },\n    \n\n    \n};\n\n\nmsg.payload = {\n    gadgetsList: [\n        {\n          \n            \"gadgetType\":\"highcharts\",\n            \"gadgetName\":\"gantt\",\n            \"gadgetId\": \"3e62e166-d923-95d6-6ac0-9e697aaf10ba\",\n            \n            \n              gadgetData: gadgetData,\n            gadgetOptions :{\n                type: \"ganttChart\",\n                  theme: \"grid\", // \"\"dark\" // grid, sand\n                  action : true , // false\n                  export : true\n                \n            }\n\n\n}]  }\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2730,"y":2920,"wires":[["e7db9cb8.a3f61"]]},{"id":"600c13c2.8abacc","type":"function","z":"d8703926.e2eca","name":"Funnel chart","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n    \n\nvar totals = {\n            submitted_funding_amount : 0,\n            approved_funding_amount : 0,\n            approved_budget : 0,\n            project_budget : 0,\n            eligible_budget : 0,\n            projects :{\n            \n                }\n    \n}\n\n\n _.each(msg.projects, function(item, index){\n                            \n                            totals.submitted_funding_amount = totals.submitted_funding_amount + item.submitted_funding_amount\n                            totals.approved_funding_amount = totals.approved_funding_amount + item.approved_funding_amount\n                            \n                          \n\n                           \n                            _.each(item.transactions, function(trans_item,trans_index ){\n                                \n                                if (isNaN(trans_item.project_budget) === false){\n                                    totals.project_budget =  totals.project_budget + Number(trans_item.project_budget) \n                                }\n                                if (isNaN(trans_item.eligible_budget) === false){\n                                   totals.eligible_budget = totals.eligible_budget + Number(trans_item.eligible_budget) \n                                }\n                                if (isNaN(trans_item.approved_budget) === false){\n                                   totals.approved_budget = totals.approved_budget + Number(trans_item.approved_budget) \n                                }\n                                \n                                \n                            })\n                            \n                            //  item.member_cost = 0\n                            // _.each(item.memberData, function(memberData_item,memberData_index ){\n                            //     if (isNaN(memberData_item.employee_sal_cost_fte) === false){\n                            //       item.member_cost = item.member_cost + Number(memberData_item.employee_sal_cost_fte) \n                            //     }\n                            // })\n                           \n                        })\n                        \n                        \nvar series =  []\n\n// var totals = {\n//             submitted_funding_amount : 0,\n//             approved_funding_amount : 0,\n//             approved_budget : 0,\n//             project_budget : 0,\n//             eligible_budget : 0,\n//             projects :{\n            \n//                 }\n    \n// }\n\n// _.each(msg.projects, function(projectItem, projectIndex){\n    \n//     totals.submitted_funding_amount = totals.submitted_funding_amount + projectItem.submitted_funding_amount\n//     totals.approved_funding_amount = totals.approved_funding_amount + projectItem.approved_funding_amount\n//     totals.project_budget = totals.project_budget + projectItem.project_budget\n//     totals.eligible_budget = totals.eligible_budget + projectItem.eligible_budget\n//     totals.approved_budget = totals.approved_budget + projectItem.approved_budget\n    \n//     totals.projects[projectItem.name] = {\n//             submitted_funding_amount    :  projectItem.submitted_funding_amount,\n//             approved_funding_amount     :  projectItem.approved_funding_amount,\n//             project_budget              : projectItem.project_budget,\n//             eligible_budget             : projectItem.eligible_budget,\n//             approved_budget             : projectItem.approved_budget,\n//     }\n// })\n\n\n\n\n    \n    \n    gadgetData = {\n    \n    chart: {\n        type: 'funnel',\n          borderWidth: 0,\n    },\n    title: {\n        text: ' Funnel ' + msg.RevotioData.FlowData.Data.gadgetOptions.entity + \" view\"\n    },\n    plotOptions: {\n        series: {\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b> ({point.y:,.0f})',\n                softConnector: true\n            },\n            center: ['40%', '50%'],\n            neckWidth: '30%',\n            neckHeight: '25%',\n            width: '80%'\n        }\n    },\n    legend: {\n        enabled: false\n    },\n    series: [{\n        name: ' Funnel ' + msg.RevotioData.FlowData.Data.gadgetOptions.entity + \" view\",\n        data: [\n            ['Submitted funding amount', totals.submitted_funding_amount, totals.submitted_funding_amount],\n            ['Approved funding amount', totals.approved_funding_amount],\n            ['Project budget', totals.project_budget],\n            ['Eligible budget', totals.eligible_budget],\n            ['Approved budget', totals.approved_budget],\n           \n        ]\n    }],\n\n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 500\n            },\n            chartOptions: {\n                plotOptions: {\n                    series: {\n                        dataLabels: {\n                            inside: true\n                        },\n                        center: ['50%', '50%'],\n                        width: '100%'\n                    }\n                }\n            }\n        }]\n    }\n }\n \nmsg.payload = {\n    gadgetsList: [\n        {\n          \n            \"gadgetType\":\"highcharts\",\n            \"gadgetName\":\"gantt\",\n            \"gadgetId\": \"3e62e166-d923-95d6-6ac0-9e697aaf10ba\",\n            \n            \n              gadgetData: gadgetData,\n            gadgetOptions :{\n                type: \"chart\",\n                  theme: \"grid\", // \"\"dark\" // grid, sand\n                  action : true , // false\n                  export : true\n                \n            }\n\n\n}]  }\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2730,"y":2960,"wires":[["e7db9cb8.a3f61"]]},{"id":"1bb649ce.6a1376","type":"function","z":"508957a1.dd5398","name":"Get Page object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n// set all response data\nmsg.responseObj                     = msg.payload;\nmsg.responseObj.deviceId            = msg.RevotioData.session.deviceId ;\nmsg.responseObj.revotioSessionId    = msg.RevotioData.session.revotioSessionId ;\nmsg.responseObj.user_id             = msg.RevotioData.session.user_id ;\nmsg.responseObj.applicationId       = new ObjectID(global.get(\"applicationId\"));\nmsg.responseObj.token               = msg.RevotioData.session.token;\nmsg.responseObj.Page                = msg.payload.Page.toLowerCase().trim();//.replace(/^\\s*|\\s*$/g, '');\n// msg.payload.Page                    = msg.responseObj.Page;\n\nmsg.headers = {};\nmsg.rejectUnauthorized =  false;\n\nif (    msg.responseObj.Page === \"project overview\" && \n        msg.responseObj.hasOwnProperty(\"RevotioData\") &&\n        msg.responseObj.RevotioData.hasOwnProperty(\"project_id\") ){\n    \n    // get funding_scheme object\n    \n    // aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.responseObj.RevotioData.project_id),\n                                \n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"settings\",\n                                  \"localField\": \"funding_scheme\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"funding_scheme_data\"\n                                }\n                              },\n                 \n                              {\n                                $unwind: {\n                                  \"path\": \"$funding_scheme_data\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    // if (Array.isArray(res)=== true && res.length>0 && res[0].funding_scheme_data.hasOwnProperty(\"project_template\")){\n                \n               \n                        \n                    //     msg.responseObj.Page = res[0].funding_scheme_data.project_template + \" \" + msg.responseObj.Page\n                    //     url = \"https://new-services.revotio.com/pages?\" +  \"applicationId=\"  + msg.responseObj.applicationId + \"&pageName=\"+  msg.responseObj.Page ;\n                        \n                    // } else {\n                         msg.responseObj.Page = \"default \" + msg.responseObj.Page.trim()\n                        url = \"https://new-services.revotio.com/pages?\" +  \"applicationId=\"  + msg.responseObj.applicationId + \"&pageName=\"+  msg.responseObj.Page.trim() ;\n                     \n                    // }\n                   \n                    // url = \"https://new-services.revotio.com/pages?\" +  \"applicationId=\"  + msg.responseObj.applicationId + \"&pageName=\"+  msg.responseObj.Page ;\n                    res = encodeURI(url);\n                    \n                    msg.url = res\n\n                    node.send(msg) \n            })\n    \n       \n        \n        \n} else {\n  \n        url = global.get(\"revotio_api\")+ \"/pages?\" +  \"applicationId=\"  + msg.responseObj.applicationId + \"&pageName=\"+  msg.responseObj.Page ;\n        res = encodeURI(url);\n        \n        msg.url = res\n        node.send(msg)\n\n}\n\n\n\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":400,"y":900,"wires":[["5ddd0309.2d77fc","3199acdc.5d559c"]]},{"id":"9ceaac27.f3dc2","type":"comment","z":"508957a1.dd5398","name":"Redirect","info":"Expected object :\n\n msg.payload = {\n        DeviceId: ** From publised app **,\n        RevotioSessionId : ** From publised app **,\n        Page:  ** defigned in the Node-Red API **,\n        timestamp :  ** Last update of DB session object **,\n        user_id:  ** suplied by publeshed app **,\n        applicationId : ** applicationId Defigned in global context of the server **,\n    }","x":100,"y":920,"wires":[]},{"id":"bbdc3383.cf54c8","type":"function","z":"508957a1.dd5398","name":"Setup msg.RevotioData obj","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar unauth, auth,activate, reset,   error; \nmsg.RevotioData =\n{\n    session : JSON.parse(msg.dataResult.dataContent.SessionData),\n    type : msg.dataResult.dataContent.payload,\n    BrowserFP : JSON.parse(msg.dataResult.dataContent.PostData)\n}\n\n\n\n        \nif (msg.RevotioData.session.entranceType === \"activate\"){\n    activate = msg;\n} else if (msg.RevotioData.session.entranceType === \"reset\"){\n    reset = msg;\n} \nelse {\n    \n \n  \n    if (typeof msg.tokenResult.TokenContent  === \"object\" &&  msg.tokenResult.TokenContent.type === \"authorized\"){\n        msg.RevotioData.tokenInfo ={\n            deviceId: msg.tokenResult.TokenContent.deviceId,\n            revotioSessionId: msg.tokenResult.TokenContent.revotioSessionId,\n            tokenCreated:  moment.unix(msg.tokenResult.TokenContent.iat),\n            tokenDateNow: moment(),\n            tokenCreatedDiffDays : moment().diff(moment.unix(msg.tokenResult.TokenContent.iat), 'days'),// (msg.RevotioData.tokenCreatedDiff / (1000 * 60 * 60)).toFixed(1);\n            currentTimeZone: msg.RevotioData.session.timezone,\n            tokenData:msg.tokenResult.TokenContent\n        }\n        \n        \n        auth = msg;\n    } else if (typeof msg.tokenResult.TokenContent  === \"object\" && msg.tokenResult.TokenContent.type === \"unauthorized\") {\n        \n        unauth = msg;\n    } \n    else {\n        \n        // msg.tokenData = tokenData;\n        error = msg;\n    }\n    \n}\n\nreturn [unauth, auth , activate ,reset,  error];","outputs":5,"noerr":0,"initialize":"","finalize":"","x":380,"y":340,"wires":[["92449c5.fd42de"],["10e1e3b.d1d519c"],["15c4a8bb.5b28af"],["84c26a9f.683b7"],[]],"outputLabels":["unauth","auth","activate","reset","error"]},{"id":"a6ecac2e.964a9","type":"function","z":"508957a1.dd5398","name":"Check if session exists and is valid or create new one & INIT FS","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif ( msg.payload && msg.payload.hasOwnProperty(\"UserData\") ){\n    \n    msg.SessionObj = msg.payload ;\n\n    Obj =  {\n        _id: new ObjectID(msg.SessionObj._id),\n        token: msg.SessionObj.token,\n        deviceId: msg.SessionObj.deviceId,\n        revotioSessionId :msg.SessionObj.revotioSessionId,\n        Page: msg.SessionObj.Page,\n        timestamp : new Date(),\n        user_id: new ObjectID(msg.RevotioData.session.user_id),\n        applicationId : new ObjectID(global.get(\"applicationId\")),\n        UserData : msg.RevotioData.userData,\n        timezone: msg.RevotioData.session.timezone,\n        currentUserTime: msg.RevotioData.session.currentUserTime ,\n        gmtTime: msg.RevotioData.session.gmtTime\n    }\n\n    operation = 'update'\n    \n} else {\n    \n    Obj = {\n         _id: new ObjectID(),\n        token: msg.RevotioData.session.token,\n        deviceId: msg.RevotioData.session.deviceId,\n        revotioSessionId :msg.RevotioData.session.revotioSessionId,\n        timestamp : new Date(),\n        user_id: new ObjectID(msg.RevotioData.session.user_id),\n        applicationId : new ObjectID(global.get(\"applicationId\")),\n        UserData : msg.RevotioData.session.UserData,\n        timezone: msg.RevotioData.session.timezone,\n        currentUserTime: msg.RevotioData.session.currentUserTime ,\n        gmtTime: msg.RevotioData.session.gmtTime\n    };\n\n    if (msg.RevotioData.session.UserData.UserAccountData.user_type && msg.RevotioData.session.UserData.UserAccountData.user_type === \"Client_User\" ){\n        Obj.Page =  global.get(\"DomainProperties.ClientDefaultPage\");\n        Obj.RevotioData = {organization_id : new ObjectID(msg.RevotioData.session.UserData.organization_id)}\n    }else {\n        Obj.Page =  global.get(\"DomainProperties.PNODefaultPage\");\n    }\n    operation = 'update'\n\n}\n    msg.payload = Obj ; \n// update    \n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(Obj._id)}, \n                            update : { \"$set\" : Obj},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.result = res\n                    node.send(msg) \n            })  \n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2670,"y":340,"wires":[["c8fb96e2.82848"]]},{"id":"4a28c697.d7c878","type":"function","z":"508957a1.dd5398","name":"Prepair msg.RevotioData Obj","func":"\nif (typeof msg.payload.FlowData === 'object' ){\n    FlowData = msg.payload.FlowData\n    delete msg.payload.FlowData\n} else {\n     FlowData = {Data : {}}\n}\n\n\nmsg.RevotioData = {\n    init:msg.INIT,\n    entity: \"INIT\",\n    session : msg.payload,\n    FlowData: FlowData\n    };\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":600,"wires":[["e0a7d33c.5622b"]]},{"id":"65cb1ffa.0f19d","type":"function","z":"508957a1.dd5398","name":"Prepair session lookup","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n//  get session\n\nvar query = {\n    deviceId: msg.RevotioData.session.deviceId,\n    revotioSessionId :msg.RevotioData.session.revotioSessionId,\n};\n\n// find  \nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })   \n\n// return msg;","outputs":1,"noerr":0,"x":2320,"y":340,"wires":[["a6ecac2e.964a9"]]},{"id":"a6e28b45.2c7798","type":"catch","z":"508957a1.dd5398","name":"","scope":null,"x":100,"y":40,"wires":[["8a7161b7.e34dd"]]},{"id":"8a7161b7.e34dd","type":"debug","z":"508957a1.dd5398","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":220,"y":40,"wires":[]},{"id":"1a7afd51.7ed1e3","type":"function","z":"508957a1.dd5398","name":"Update Session to match location user","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nresponseObj = msg.responseObj;\n\nObj =  {timestamp : new Date(),\n        applicationId: new ObjectID(global.get(\"applicationId\")),\n        // session : msg.RevotioData.session\n}\n\nif (responseObj.deviceId){\n    Obj.deviceId =  responseObj.deviceId;\n}\n\nif (responseObj.revotioSessionId){\n    Obj.revotioSessionId =  responseObj.revotioSessionId;\n}\n\nif (responseObj.user_id){\n    Obj.user_id =  responseObj.user_id;\n}\n\nif (msg.RevotioData.userData){\n    Obj.userData =  msg.RevotioData.userData;\n}\n\nif (responseObj.Page){\n    Obj.Page =  responseObj.Page;\n}\n\nif (typeof msg.responseObj.RevotioData === 'object'){\n    Obj.FlowData = msg.responseObj.RevotioData\n    Obj.FlowData.Data  = {}\n} else {\n     Obj.FlowData = {Data:{}}\n}\n\nif (responseObj.presentationLayer && responseObj.presentationLayer.container && responseObj.presentationLayer.container !== null){\n    Obj.container =  responseObj.presentationLayer.container;\n}\n\nupdateObj = {\n                    query : {\n                            query :{deviceId: responseObj.deviceId, revotioSessionId: responseObj.revotioSessionId}, \n                            update : {\"$set\" : Obj},\n                            options : {upsert: true, returnOriginal: false}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'findOneAndUpdate', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                \n                if (typeof res === 'object' && res.hasOwnProperty(\"value\")){\n                    \n                     msg.payload = res.value\n                     \n                } else {\n                    msg.payload = {};\n                }\n                \n                node.send(msg)\n            })\n                     \n    // // update    \n    // updateObj = {\n    //                 query : {\n    //                         query :{deviceId: responseObj.deviceId, revotioSessionId: responseObj.revotioSessionId}, \n    //                         update : {\"$set\" : Obj},\n    //                         options : {upsert: true}\n    //                         },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'sessions',\n    //                 operation:'update', // updateMany , updateOne\n    //                 }\n\n    //                         mongodbTools.resolveAsync(updateObj, node, function(res){\n                                \n    //                             findObj = {\n    //                                 query : {\n    //                                         query :{deviceId: responseObj.deviceId, revotioSessionId: responseObj.revotioSessionId}, \n    //                                         },\n    //                                 connection:global.get(\"DB_data.connection\"),\n    //                                 database:global.get(\"DB_data.appDB\"),\n    //                                 collection:'sessions',\n    //                                 operation:'find', // updateMany , updateOne\n    //                                 }\n                \n    //                         mongodbTools.resolveAsync(findObj, node, function(res){\n    //                                 msg.payload  = res[0]\n    //                                 node.send(msg) \n    //                         })  \n    //         })  \n            \n            \n  \n// return msg;","outputs":1,"noerr":0,"x":930,"y":900,"wires":[["107e8b58.7328f5"]]},{"id":"301e688d.349888","type":"comment","z":"508957a1.dd5398","name":"Initialize post","info":"Expected object :\n\n msg.payload = {\n        DeviceId: ** From publised app **,\n        RevotioSessionId : ** From publised app **,\n   }","x":130,"y":560,"wires":[]},{"id":"7e2e45e5.66251c","type":"function","z":"508957a1.dd5398","name":"Prepair msg.RevotioData Obj","func":"\n\nmsg.RevotioData.session = msg.payload \nmsg.RevotioData.entity = msg.RevotioData.PostData.gadgetId\n\nif (typeof msg.payload.FlowData === 'object' ){\n    msg.RevotioData.FlowData = msg.payload.FlowData\n    delete msg.payload.FlowData\n} else {\n     msg.RevotioData.FlowData = {Data : {}}\n}\n\nmsg.RevotioData.session = msg.payload \n    \nreturn msg;","outputs":1,"noerr":0,"x":800,"y":760,"wires":[["40d072f4.03fce4"]]},{"id":"92449c5.fd42de","type":"function","z":"508957a1.dd5398","name":"prepair redirect to user authentication && update session object","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.payload  = {\n    Page :global.get(\"DomainProperties.NonAuthDefaultPage\")\n}\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{\n                                    revotioSessionId:msg.RevotioData.session.revotioSessionId, \n                                    deviceId : msg.RevotioData.session.deviceId\n                            }, \n                            update : { \"$set\" : msg.RevotioData.session},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n                    node.send(msg) \n            })  \n\n","outputs":1,"noerr":0,"x":1470,"y":280,"wires":[["3d5d3142.cf1206"]]},{"id":"8ebf17ec.2f4a48","type":"function","z":"508957a1.dd5398","name":"check token content","func":"var jsonwebtoken = global.get('jsonwebtoken');\n\n\nmsg.RevotioData =\n{\n    session : JSON.parse(msg.payload.SessionData),\n    type : msg.payload.payload,\n    BrowserFP : JSON.parse(msg.payload.PostData)\n}\n\n jsonwebtoken.verify(msg.RevotioData.session.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n          if (decoded !== undefined){\n              tokenState = \"valid\"\n              msg.tokenData = decoded\n          }\n        });\n       \n\n\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":280,"wires":[[]]},{"id":"6b3b5ad8.614bac","type":"function","z":"508957a1.dd5398","name":"check token content","func":"var jsonwebtoken = global.get('jsonwebtoken');\n\n\npayload = JSON.parse(msg.payload.RevotioData)\n\n jsonwebtoken.verify(payload.token , global.get(\"SystemVars.secret\"), function(err, decoded) {\n          if (decoded !== undefined){\n              tokenState = \"valid\"\n              msg.tokenData = decoded\n          }\n        });\n       \n\n\nreturn msg;","outputs":1,"noerr":0,"x":381.6666450500488,"y":561.0833415985107,"wires":[[]]},{"id":"15c4a8bb.5b28af","type":"function","z":"508957a1.dd5398","name":"prepair redirect to user authentication","func":"msg.payload  = {\n    Page :\"user account activation\",\n    RevotioData: {\n        activationToken :  msg.RevotioData.session.activationToken\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":380,"wires":[["5fba24de.5173fc"]]},{"id":"c964af3e.013ae8","type":"function","z":"508957a1.dd5398","name":"Check if token is valid - Action","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar secret = global.get(\"SystemVars.secret\");\n\nvar valid, invalid;\n\n\n// verify a token symmetric\njsonwebtoken.verify(msg.RevotioData.session.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n      if (decoded !== undefined){\n        valid = msg;\n      } else {\n          invalid = msg;\n      }\n    });\n    \n  \n    \n    \nreturn [valid, invalid];","outputs":2,"noerr":0,"x":530,"y":780,"wires":[["7e2e45e5.66251c"],["e39b5dab.d5db78"]],"outputLabels":["valid","invalid"]},{"id":"e39b5dab.d5db78","type":"function","z":"508957a1.dd5398","name":"Redirect to user authentication","func":"msg.payload  = {\n    Page :\"user authentication\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":800,"wires":[["7167ce92.3c59c"]]},{"id":"8cd48535.9010d8","type":"function","z":"508957a1.dd5398","name":"Check if token is valid - INIT","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar secret = global.get(\"SystemVars.secret\");\nvar request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar valid, invalid;\n//  get session\nmsg.starttime = new Date()\n\n\nmsg.INIT = JSON.parse(msg.dataResult.dataContent.RevotioData);\nvar query =\n    {deviceId : msg.payload.deviceId, \n    revotioSessionId:msg.payload.revotioSessionId}\n\n// msg.operation = 'findOne'\n\n// find  \nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                if (res.length > 0){\n                     msg.payload = res[0]\n                } else {\n                    msg.payload  = {}\n                }\n                    node.send(msg) \n            })   \n\n\n\n// // verify a token symmetric\n// jsonwebtoken.verify(msg.INIT.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n//       if (decoded !== undefined){\n//         valid = msg;\n//       } else {\n//           invalid = msg;\n//       }\n//     });\n    \n  \n    \n    \n// return [valid, invalid];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":600,"wires":[["4a28c697.d7c878"]],"outputLabels":["valid"]},{"id":"84c26a9f.683b7","type":"function","z":"508957a1.dd5398","name":"prepair redirect to reset ","func":"msg.payload  = {\n    Page :'reset password',\n    RevotioData:{\n        resetToken : msg.RevotioData.session.resetToken\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":420,"wires":[["5fba24de.5173fc"]]},{"id":"2c492795.625c38","type":"function","z":"508957a1.dd5398","name":"Create msg.RevotioData and get UserData","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// Get UserData\n\n// aggregate\n\n\n            aggregateObj = {\n                    query : { query : [\n                                        {$match : { _id : new ObjectID(msg.RevotioData.session.user_id)}},\n                                        \n                                        {    $lookup: {\n                                                from: \"user_accounts\",\n                                                localField: \"_id\",\n                                                foreignField: \"user\",\n                                                as: \"UserAccountData\"\n                                            }},\n                                        {    $lookup: {\n                                            from: \"user_permissions\",\n                                            localField: \"_id\",\n                                            foreignField: \"user\",\n                                            as: \"AppUserPermissionInfo\"\n                                        }},\n                                        {\n                                          $unwind:\"$UserAccountData\"\n                                        },\n                                                ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                if (res.length > 0){\n                     msg.payload = res[0]\n                } else {\n                     msg.payload = {}\n                }\n                   \n                    node.send(msg) \n            }) \n ","outputs":1,"noerr":0,"x":930,"y":340,"wires":[["a45c0a9e.4de0e"]]},{"id":"10e1e3b.d1d519c","type":"function","z":"508957a1.dd5398","name":"Decrypt token","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar tokenState\n\n// Decrypt token\n    jsonwebtoken.verify(msg.RevotioData.session.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n      if (decoded !== undefined){\n          tokenState = \"valid\"\n          TokenContent = decoded\n      }\n    });\n                \nmsg.RevotioData.session.user_id = new ObjectID(TokenContent.user_id);\n\nmsg.RevotioData.applicationId = new ObjectID(global.get(\"applicationId\"));\n\nmsg.payload = {\n    deviceId: msg.RevotioData.session.deviceId,\n    revotioSessionId :msg.RevotioData.session.revotioSessionId,\n};\n\nmsg.operation = 'findOne'\n\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":340,"wires":[["2c492795.625c38"]]},{"id":"a45c0a9e.4de0e","type":"function","z":"508957a1.dd5398","name":"Prepair redirect","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nvar PNO , Client, none;\n\n\n// delete msg.RevotioData.SessionData\n// if (msg.payload.length > 0){\nmsg.RevotioData.session.UserData =  msg.payload;\n\nmsg.RevotioData.session.UserData.type = \"NonPNOAdmin\"\n\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index){\n    \n    if (Item.type === \"organization\"){\n        \n        if (String(Item.type_id) === String(global.get(\"MasterOrganizationData._id\")) && Item.permission === 0){\n            msg.RevotioData.session.UserData.type = \"PNOAdmin\"\n        }\n        \n        \n    }\n    \n})\n\nif (msg.RevotioData.session.UserData.type === \"PNOAdmin\"){\n\nPNO = msg;\n\n} else {\n        \nClient = msg\n        \n}\n\n   \n\n\n\nreturn [PNO , Client, none];","outputs":3,"noerr":0,"x":1180,"y":340,"wires":[["65cb1ffa.0f19d"],["414c3d6c.df3964"],["92449c5.fd42de"]],"outputLabels":["PNO","Client","none"]},{"id":"414c3d6c.df3964","type":"function","z":"508957a1.dd5398","name":"Check user inv","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar resume, login;\n\nUserOrgPermissionObjIndex = lodash.findIndex(msg.RevotioData.session.UserData.AppUserPermissionInfo,{type: \"organization\"} );\n\nif (UserOrgPermissionObjIndex === -1){\n    login = msg;\n}else {\n    UserOrgPermissionObj = msg.RevotioData.session.UserData.AppUserPermissionInfo[UserOrgPermissionObjIndex]\n\nresume = msg \n}\n\n\nreturn [resume, login ];","outputs":2,"noerr":0,"x":1360,"y":400,"wires":[["b0299765.306ab"],["c4762256.4d3218"]],"outputLabels":["resume, ","login"]},{"id":"cd09b08b.c1c3d","type":"function","z":"508957a1.dd5398","name":"Permission check 2/3","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.RevotioData.session.UserData.OrgRepresentativeProjects = msg.payload;\n\nvar query = { project_leader : new ObjectID(msg.RevotioData.session.UserData._id)} ;\n\nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n\n// return msg;","outputs":1,"noerr":0,"x":1900,"y":380,"wires":[["d4d30d3a.b0fd78"]]},{"id":"d4d30d3a.b0fd78","type":"function","z":"508957a1.dd5398","name":"Permission check 3/3","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.RevotioData.session.UserData.ProjectLeaderProjects = msg.payload;\n\nOrgObj = lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo, {type: \"organization\"})\n\nif (msg.RevotioData.hasOwnProperty(\"FlowData\") === false){\n    msg.RevotioData.FlowData = {}\n}\n\nif (msg.RevotioData.session.UserData.ProjectLeaderProjects.length === 0 && msg.RevotioData.session.UserData.OrgRepresentativeProjects.length === 0){\n    \n            msg.RevotioData.FlowData.Page = global.get(\"DomainProperties.ClientDefaultPage\")\n            msg.RevotioData.OrganzationId = OrgObj.type_id;\n            msg.RevotioData.FlowData.organization_id = OrgObj.type_id;\n        \n       \n} else {\n        \n                msg.RevotioData.FlowData.Page = global.get(\"DomainProperties.ClientDefaultPage\")\n                msg.RevotioData.OrganzationId = OrgObj.type_id;\n                msg.RevotioData.FlowData.organization_id = OrgObj.type_id;\n         \n         \n\n}\n\n            msg.payload = {\n                    Page :   msg.RevotioData.FlowData.Page,\n                    RevotioData         : {\n                        organization_id : OrgObj.type_id\n                    }\n                }\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2100,"y":380,"wires":[["65cb1ffa.0f19d"]]},{"id":"a37d665a.27b8c8","type":"function","z":"508957a1.dd5398","name":"Parse object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\nmsg.responseObj.presentationLayer = JSON.parse(msg.payload).pages[0];\nmsg.appObj = JSON.parse(msg.payload);\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":960,"wires":[["af5c8a5f.64c24"]],"outputLabels":["Items, "]},{"id":"5ddd0309.2d77fc","type":"http request","z":"508957a1.dd5398","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","x":550,"y":960,"wires":[["a37d665a.27b8c8"]]},{"id":"107e8b58.7328f5","type":"function","z":"508957a1.dd5398","name":"manage file system - Manage FS","func":"if (msg.payload.hasOwnProperty(\"value\") && msg.payload.value !== null){\n\nmsg.RevotioData.session._id = msg.payload.value._id\nmsg.RevotioData.session.container = msg.payload.value.container\n\nresult = global.get(\"functions.fileManagement\")( '', '',msg.RevotioData.session._id, \"initSessionFolder\") // source, destination, operation\n\nresult = global.get(\"functions.fileManagement\")( '', '',msg.RevotioData.session._id, \"emptyDirSync\") // source, destination, operation\n\n\nif (result.state === \"success\"){\n    \n} else {\n    \n}\n}\n\nmsg.payload = msg.responseObj;\nmsg.payload.Type = \"Redirect\";\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1260,"y":940,"wires":[["dee52d4e.18fdb"]]},{"id":"28095b53.fd6c2c","type":"comment","z":"508957a1.dd5398","name":"Action post","info":"Expected object :\n\n msg.payload = {\n        DeviceId: ** From publised app **,\n        RevotioSessionId : ** From publised app **,\n   }","x":110,"y":740,"wires":[]},{"id":"e0a7d33c.5622b","type":"function","z":"508957a1.dd5398","name":"create request ****TEMP FIX**** INIT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nmessage = {\n    \n    RevotioData: msg.RevotioData,\n    payload : msg.payload,\n    starttime : msg.starttime\n}\nid = new ObjectID()\n// msg = {}\n\nmsg.payload = [{ _id: id},\n    {requestData : message},\n    {upsert : true}\n]\n\nmsg.operation = \"updateOne\"\n\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nif (msg.RevotioData.session.container && msg.RevotioData.session.container !== null && global.get(\"DomainProperties.routing\") &&  global.get(\"DomainProperties.routing\") !== \"local\"){\n// ******************************************************************\n    msg.url =  msg.RevotioData.session.container + \"/\"\n    // msg.url = global.get(\"DomainProperties.url\")\n// ******************************************************************\n} else {\n    msg.url = global.get(\"DomainProperties.url\")\n}\n\n_.each(message.RevotioData.session.Page.replace(/[^\\w\\s]/gi,\"\").split(\" \"), function(value, index){\n    msg.url = msg.url + capitalizeFirstLetter(value);\n})\n\n\n// msg.url = message.RevotioData.session.Page.replace(/ /g, '');\n\n\n\n\nmsg.requestPayload = {id:id, type :\"init\", data :message}\n\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":600,"wires":[["1aa3f57a.f7d443"]]},{"id":"efdc3569.8d19","type":"http request","z":"508957a1.dd5398","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":1270,"y":600,"wires":[["4912f95d.e12f"]]},{"id":"1aa3f57a.f7d443","type":"function","z":"508957a1.dd5398","name":"create request","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nmsg.payload = msg.requestPayload\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1120,"y":600,"wires":[["efdc3569.8d19"]]},{"id":"4912f95d.e12f","type":"json","z":"508957a1.dd5398","name":"","property":"payload","action":"","pretty":false,"x":1390,"y":600,"wires":[["96960c1b.0a5558"]]},{"id":"5a048ebe.6b364","type":"http in","z":"aec22158.fe4e38","name":"UserAuthentication","url":"/UserAuthentication","method":"post","upload":false,"swaggerDoc":"","x":145,"y":539.9999961853027,"wires":[["ecd2c396.4d9af"]]},{"id":"2927f5ef.05639a","type":"function","z":"a55f7aee.572be","name":"Prepair flow","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nmsg.communicationData = msg.payload\n\nif (msg.payload.hasOwnProperty(\"data\")){\n   _.each(msg.payload.data, function(value, key ){\n                        if (key !== \"_id\"){\n                            msg[key] = value\n                        }\n                    })\n    node.send(msg) \n} else {\n\n// find \n            findObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.payload.id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'temp_sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                \n                if (Array.isArray(res)){\n                    temp  = res[0];\n                    res = temp\n                }\n                \n                \n                    _.each(res.requestData, function(value, key ){\n                        if (key !== \"_id\"){\n                            msg[key] = value\n                        }\n                    })\n                    \n                    \n                    \n                    node.send(msg) \n            }) \n}\n// return msg;","outputs":1,"noerr":0,"x":150,"y":80,"wires":[["4e19b9ea.51eff8"]]},{"id":"96960c1b.0a5558","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":1490,"y":600,"wires":[]},{"id":"d65791.a28bc07","type":"http in","z":"aec22158.fe4e38","name":"UserAccountActivation","url":"/UserAccountActivation","method":"post","upload":false,"swaggerDoc":"","x":155,"y":1059.9999961853027,"wires":[["f467989a.2c7b"]]},{"id":"c8f85a27.6c8cf","type":"http in","z":"aec22158.fe4e38","name":"TwoStepAuthentication","url":"/TwoStepAuthentication","method":"post","upload":false,"swaggerDoc":"","x":195,"y":1539.9999961853027,"wires":[["fc712911.f455d8"]]},{"id":"77af50e2.589c78","type":"http in","z":"aec22158.fe4e38","name":"ResetPassword","url":"/ResetPassword","method":"post","upload":false,"swaggerDoc":"","x":175,"y":2339.9999961853027,"wires":[["3f566bdd.bca52c"]]},{"id":"3e12189a.39eac","type":"http in","z":"2294209a.0c95b","name":"UsersGlobal","url":"/UsersGlobal","method":"post","upload":false,"swaggerDoc":"","x":90,"y":480,"wires":[["e5a5de01.a1ac3"]]},{"id":"c199e887.a6da4","type":"link out","z":"aec22158.fe4e38","name":"","links":["a206fa2f.9bb658"],"x":510,"y":499.99999618530273,"wires":[]},{"id":"e130563c.567048","type":"link out","z":"aec22158.fe4e38","name":"","links":["ffb8ad05.fe04"],"x":510,"y":539.9999961853027,"wires":[]},{"id":"82e73790.6bba78","type":"link out","z":"aec22158.fe4e38","name":"","links":["3ab682ae.10e656"],"x":510,"y":579.9999961853027,"wires":[]},{"id":"4e19b9ea.51eff8","type":"switch","z":"a55f7aee.572be","name":" Route","property":"communicationData.type","propertyType":"msg","rules":[{"t":"eq","v":"design","vt":"str"},{"t":"eq","v":"init","vt":"str"},{"t":"eq","v":"action","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":310,"y":80,"wires":[[],[],[]],"outputLabels":["design","init","action"]},{"id":"c6521856.c46ec","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":585,"y":539.9999961853027,"wires":[]},{"id":"ffbabbe8.5d0cb","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":595,"y":499.99999618530273,"wires":[]},{"id":"215a6aa.6a2d296","type":"comment","z":"aec22158.fe4e38","name":"ROUTE","info":"","x":585,"y":579.9999961853027,"wires":[]},{"id":"18c634ff.b1dad3","type":"link out","z":"aec22158.fe4e38","name":"","links":["dd573c4c.643968"],"x":530,"y":1019.9999961853027,"wires":[]},{"id":"6537bec2.9226e8","type":"link out","z":"aec22158.fe4e38","name":"","links":["f08a12de.bf0fd"],"x":530,"y":1059.9999961853027,"wires":[]},{"id":"e8682458.5b8fb","type":"link out","z":"aec22158.fe4e38","name":"","links":["579313d7.2430dc"],"x":530,"y":1099.9999961853027,"wires":[]},{"id":"86aac31e.60e968","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":605,"y":1059.9999961853027,"wires":[]},{"id":"d26e6d75.630648","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":615,"y":1019.9999961853027,"wires":[]},{"id":"bbd839b4.9edf48","type":"comment","z":"aec22158.fe4e38","name":"ROUTE","info":"","x":605,"y":1099.9999961853027,"wires":[]},{"id":"c42395c9.e7a698","type":"link out","z":"aec22158.fe4e38","name":"","links":["ce9cd56d.b714d"],"x":570,"y":1499.9999961853027,"wires":[]},{"id":"839b0669.2a35d","type":"link out","z":"aec22158.fe4e38","name":"","links":["a27da0ef.7fe0c8"],"x":570,"y":1539.9999961853027,"wires":[]},{"id":"e84a1d06.e6f258","type":"link out","z":"aec22158.fe4e38","name":"","links":["e8c424c8.a91d3"],"x":570,"y":1579.9999961853027,"wires":[]},{"id":"77b5177.8cc3ae8","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":645,"y":1539.9999961853027,"wires":[]},{"id":"7423e4f2.3972ec","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":655,"y":1499.9999961853027,"wires":[]},{"id":"9304d6af.5a4b1","type":"comment","z":"aec22158.fe4e38","name":"ROUTE","info":"","x":645,"y":1579.9999961853027,"wires":[]},{"id":"e98e6ae3.ce1128","type":"link out","z":"aec22158.fe4e38","name":"","links":["a885e943.ebfb1"],"x":550,"y":2299.9999961853027,"wires":[]},{"id":"8b9609e7.cfa4c8","type":"link out","z":"aec22158.fe4e38","name":"","links":["d431a2e4.6d283","cae94cae.9e3458"],"x":550,"y":2339.9999961853027,"wires":[]},{"id":"32198700.e5b5b8","type":"link out","z":"aec22158.fe4e38","name":"","links":["e298dd8d.cbd328"],"x":550,"y":2379.9999961853027,"wires":[]},{"id":"29a350c1.e1c58","type":"comment","z":"aec22158.fe4e38","name":"INIT","info":"","x":625,"y":2339.9999961853027,"wires":[]},{"id":"a9ec6176.11b33","type":"comment","z":"aec22158.fe4e38","name":"DESIGN","info":"","x":635,"y":2299.9999961853027,"wires":[]},{"id":"63484a7a.f6eca4","type":"comment","z":"aec22158.fe4e38","name":"ROUTE","info":"","x":625,"y":2379.9999961853027,"wires":[]},{"id":"ff290d23.18df18","type":"link out","z":"2294209a.0c95b","name":"","links":["7d1a67c6.b7534"],"x":355,"y":440,"wires":[]},{"id":"b0ae31e0.11c9e8","type":"link out","z":"2294209a.0c95b","name":"","links":["32bc6eb7.c073aa"],"x":355,"y":480,"wires":[]},{"id":"be4224db.bfd728","type":"link out","z":"2294209a.0c95b","name":"","links":["3a23c4b4.bdc8a4"],"x":355,"y":520,"wires":[]},{"id":"e9eab74e.5cd3c","type":"comment","z":"2294209a.0c95b","name":"INIT","info":"","x":430,"y":480,"wires":[]},{"id":"354b4b47.56bff4","type":"comment","z":"2294209a.0c95b","name":"DESIGN","info":"","x":440,"y":440,"wires":[]},{"id":"b3b838e8.1d485","type":"comment","z":"2294209a.0c95b","name":"ROUTE","info":"","x":430,"y":520,"wires":[]},{"id":"ab8b9205.06cbe","type":"http request","z":"508957a1.dd5398","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","persist":false,"proxy":"","authType":"basic","x":1910,"y":1000,"wires":[["917b5262.1f0b9"]]},{"id":"3f2e4a2d.25f27e","type":"function","z":"508957a1.dd5398","name":"create request","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nmsg.payload = msg.requestPayload\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1820,"y":940,"wires":[["ab8b9205.06cbe","7300eaa0.fbf76c"]]},{"id":"917b5262.1f0b9","type":"json","z":"508957a1.dd5398","name":"","property":"payload","action":"","pretty":false,"x":2010,"y":1000,"wires":[["4c1b020f.633964"]]},{"id":"cf8d96f9.9c98d","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":2170,"y":960,"wires":[]},{"id":"975f47b0.683f3","type":"http request","z":"508957a1.dd5398","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":1470,"y":760,"wires":[["4d37f804.d37c5"]]},{"id":"6965c6fa.5073d8","type":"function","z":"508957a1.dd5398","name":"create request","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nmsg.payload = msg.requestPayload\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1320,"y":760,"wires":[["975f47b0.683f3"]]},{"id":"4d37f804.d37c5","type":"json","z":"508957a1.dd5398","name":"","property":"payload","action":"","pretty":false,"x":1590,"y":760,"wires":[["a6042701.1dde"]]},{"id":"a6042701.1dde","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":1690,"y":760,"wires":[]},{"id":"40d072f4.03fce4","type":"function","z":"508957a1.dd5398","name":"create request ****TEMP FIX**** ACTION","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nmessage = {\n    RevotioData: msg.RevotioData,\n    payload : msg.payload,\n    starttime : msg.starttime\n}\nid = new ObjectID()\n// msg = {}\n\nmsg.payload = [{ _id: id},\n    {requestData : message},\n    {upsert : true}\n]\n\nmsg.operation = \"updateOne\"\n\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nif (msg.RevotioData.session.container && msg.RevotioData.session.container !== null && global.get(\"DomainProperties.routing\") &&  global.get(\"DomainProperties.routing\") !== \"local\"){\n// ******************************************************************\n    msg.url = msg.RevotioData.session.container + \"/\"\n    // msg.url = global.get(\"DomainProperties.url\")\n// ******************************************************************\n} else {\n    msg.url = global.get(\"DomainProperties.url\")\n}\n\n_.each(message.payload.Page.replace(/[^\\w\\s]/gi,\"\").split(\" \"), function(value, index){\n    msg.url = msg.url + capitalizeFirstLetter(value);\n})\n\n\n// msg.url = message.RevotioData.session.Page.replace(/ /g, '');\n\n\n\n\nmsg.requestPayload = {id:id, type :\"action\", data :message}\n\nreturn msg;","outputs":1,"noerr":0,"x":1080,"y":760,"wires":[["6965c6fa.5073d8"]]},{"id":"dee52d4e.18fdb","type":"function","z":"508957a1.dd5398","name":"create request ****TEMP FIX**** REDIRECT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nmessage = {\n    // RevotioData: msg.RevotioData,\n    payload : msg.payload\n}\n\n// _.each(msg.payload, function(Item, key){\n    \n//     if (typeof Item === \"object\"){\n//         message[key] = {}\n//     } else {\n//         message[key] = Item\n//     }\n// })\nid = new ObjectID()\n// msg = {}\n\n// msg.payload = [{ _id: id},\n//     {requestData : message},\n//     {upsert : true}\n// ]\n\n// msg.operation = \"updateOne\"\n\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nif (msg.payload.hasOwnProperty(\"presentationLayer\") === true && msg.payload.presentationLayer.hasOwnProperty(\"container\") === true && msg.RevotioData.session.container !== null  && global.get(\"DomainProperties.routing\") &&  global.get(\"DomainProperties.routing\") !== \"local\"){\n// ******************************************************************\n    msg.url =message.payload.presentationLayer.container + \"/\"\n    // msg.url = global.get(\"DomainProperties.url\")\n// ******************************************************************\n} else {\n    msg.url = global.get(\"DomainProperties.url\")\n}\n\n\n// if (msg.payload.presentationLayer.hasOwnProperty(\"groupedObject\") === true ){\n//     message.payload.presentationLayer = {\n//         groupedObject : msg.payload.presentationLayer.groupedObject\n//     }\n//         // groupedObject = msg.payload.presentationLayer.groupedObject\n// // groupedObject = groupedObject\n//     // msg.url = global.get(\"DomainProperties.url\")\n// // ******************************************************************\n// } \n\n\n_.each(message.payload.Page.replace(/[^\\w\\s]/gi,\"\").split(\" \"), function(value, index){\n    msg.url = msg.url + capitalizeFirstLetter(value);\n})\n\n//  msg.url.replace(/-/, \"\")\n\n// msg.url = message.RevotioData.session.Page.replace(/ /g, '');\n\n\n\n\nmsg.requestPayload = {id:id, type :\"design\", data : message}\n\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":940,"wires":[["3f2e4a2d.25f27e"]]},{"id":"fb965307.f2bdc","type":"http in","z":"e5822137.be45d","name":"OrganizationsGlobal","url":"/OrganizationsGlobal","method":"post","upload":false,"swaggerDoc":"","x":110,"y":360,"wires":[["5ad96e17.a754f8"]]},{"id":"5a5da070.ff4398","type":"link out","z":"e5822137.be45d","name":"","links":["ec952e8b.ee99"],"x":495,"y":320,"wires":[]},{"id":"e6c8f68c.3a8fd","type":"link out","z":"e5822137.be45d","name":"","links":["90f055d0.958ee8"],"x":495,"y":360,"wires":[]},{"id":"c44b4bde.0df218","type":"link out","z":"e5822137.be45d","name":"","links":["91850e71.061e1"],"x":495,"y":400,"wires":[]},{"id":"3e417daa.0d1532","type":"comment","z":"e5822137.be45d","name":"INIT","info":"","x":570,"y":360,"wires":[]},{"id":"b90601a5.f77f68","type":"comment","z":"e5822137.be45d","name":"DESIGN","info":"","x":580,"y":320,"wires":[]},{"id":"2d03ba7a.8f386e","type":"comment","z":"e5822137.be45d","name":"ROUTE","info":"","x":570,"y":400,"wires":[]},{"id":"54406f9e.729e28","type":"http in","z":"e5822137.be45d","name":"OrganizationOverview","url":"/OrganizationOverview","method":"post","upload":false,"swaggerDoc":"","x":100,"y":800,"wires":[["a961a3fb.f785f8","92dcb378.bb255"]]},{"id":"b848d91c.ac4328","type":"link out","z":"e5822137.be45d","name":"","links":["d67bfacb.bc99a"],"x":495,"y":760,"wires":[]},{"id":"b55357f7.301158","type":"link out","z":"e5822137.be45d","name":"","links":["1ec340b3.482ec7"],"x":495,"y":800,"wires":[]},{"id":"4e5ae1ce.872488","type":"link out","z":"e5822137.be45d","name":"","links":["30f56518.695ab2"],"x":495,"y":840,"wires":[]},{"id":"2b5e8457.55a2ac","type":"comment","z":"e5822137.be45d","name":"INIT","info":"","x":570,"y":800,"wires":[]},{"id":"a4b37a2.a6f5a88","type":"comment","z":"e5822137.be45d","name":"DESIGN","info":"","x":580,"y":760,"wires":[]},{"id":"cce43cbe.9051a8","type":"comment","z":"e5822137.be45d","name":"ROUTE","info":"","x":570,"y":840,"wires":[]},{"id":"92184179.e9b88","type":"http in","z":"d8703926.e2eca","name":"Calendar","url":"/Calendar","method":"post","upload":false,"swaggerDoc":"","x":160,"y":2340,"wires":[["dc4e7f35.0f9568"]]},{"id":"54ddefb7.546dd8","type":"link out","z":"d8703926.e2eca","name":"","links":["58f638d8.6411a8"],"x":415,"y":2300,"wires":[]},{"id":"99062bf1.b4f22","type":"link out","z":"d8703926.e2eca","name":"","links":["be82be0b.e244e8"],"x":415,"y":2340,"wires":[]},{"id":"16cc9821.fb3bf","type":"link out","z":"d8703926.e2eca","name":"","links":["713de56c.6ef084"],"x":415,"y":2380,"wires":[]},{"id":"506e7e7c.a6668","type":"comment","z":"d8703926.e2eca","name":"INIT","info":"","x":490,"y":2340,"wires":[]},{"id":"d0a709b6.bd9198","type":"comment","z":"d8703926.e2eca","name":"DESIGN","info":"","x":500,"y":2300,"wires":[]},{"id":"be323cf6.04e268","type":"comment","z":"d8703926.e2eca","name":"ROUTE","info":"","x":490,"y":2380,"wires":[]},{"id":"cc9f792e.d800f","type":"http in","z":"d8703926.e2eca","name":"Gantt","url":"/Gantt","method":"post","upload":false,"swaggerDoc":"","x":110,"y":2940,"wires":[["694e63c7.31379c"]]},{"id":"f16d4d07.1e2f28","type":"link out","z":"d8703926.e2eca","name":"","links":["c561fdf3.b276c"],"x":395,"y":2920,"wires":[]},{"id":"6c162efd.158dd8","type":"link out","z":"d8703926.e2eca","name":"","links":["9deb39e1.c0f1f"],"x":395,"y":2960,"wires":[]},{"id":"ded78440.200f6","type":"link out","z":"d8703926.e2eca","name":"","links":["36dd95cf.14c4ba"],"x":395,"y":3000,"wires":[]},{"id":"f32e58a9.a8f4","type":"comment","z":"d8703926.e2eca","name":"INIT","info":"","x":470,"y":2960,"wires":[]},{"id":"f726e5c5.77adc8","type":"comment","z":"d8703926.e2eca","name":"DESIGN","info":"","x":480,"y":2920,"wires":[]},{"id":"ae5d0f65.537b98","type":"comment","z":"d8703926.e2eca","name":"ROUTE","info":"","x":470,"y":3000,"wires":[]},{"id":"d495eb77.e8d19","type":"http in","z":"d8703926.e2eca","name":"FileManagement","url":"/FileManagement","method":"post","upload":false,"swaggerDoc":"","x":80,"y":3820,"wires":[["7db79c80.25543c"]]},{"id":"cba02ed1.86e7e8","type":"link out","z":"d8703926.e2eca","name":"","links":["e3db2cd5.f280f"],"x":415,"y":3780,"wires":[]},{"id":"3faaafe4.5d305","type":"link out","z":"d8703926.e2eca","name":"","links":["b32092dd.fe7c28"],"x":415,"y":3820,"wires":[]},{"id":"b8ffa12.8f00be","type":"link out","z":"d8703926.e2eca","name":"","links":["c11e0879.f54c68"],"x":415,"y":3860,"wires":[]},{"id":"da8af554.c3ceb","type":"comment","z":"d8703926.e2eca","name":"INIT","info":"","x":490,"y":3820,"wires":[]},{"id":"6d963d17.bd19a4","type":"comment","z":"d8703926.e2eca","name":"DESIGN","info":"","x":500,"y":3780,"wires":[]},{"id":"51fd33ec.04185c","type":"comment","z":"d8703926.e2eca","name":"ROUTE","info":"","x":490,"y":3860,"wires":[]},{"id":"daa34e14.6ace78","type":"http in","z":"d8703926.e2eca","name":"TimeRegistration","url":"/TimeRegistration","method":"post","upload":false,"swaggerDoc":"","x":100,"y":4640,"wires":[["a658973a.c56988"]]},{"id":"e0a6433b.b90ac","type":"link out","z":"d8703926.e2eca","name":"","links":["e3f2e299.1c23a8"],"x":435,"y":4600,"wires":[]},{"id":"f3612948.731ac","type":"link out","z":"d8703926.e2eca","name":"","links":["9d209b2e.91ffd8"],"x":435,"y":4640,"wires":[]},{"id":"af896cc2.619c9","type":"link out","z":"d8703926.e2eca","name":"","links":["9972f568.634fd"],"x":435,"y":4680,"wires":[]},{"id":"89f67a1.90d3608","type":"comment","z":"d8703926.e2eca","name":"INIT","info":"","x":510,"y":4640,"wires":[]},{"id":"1a49e428.c004e4","type":"comment","z":"d8703926.e2eca","name":"DESIGN","info":"","x":520,"y":4600,"wires":[]},{"id":"43d669a6.67891","type":"comment","z":"d8703926.e2eca","name":"ROUTE","info":"","x":510,"y":4680,"wires":[]},{"id":"bc77063b.1d43c8","type":"comment","z":"2294209a.0c95b","nameinfo":"","x":2470,"y":860.9998779296875,"wires":[]},{"id":"a903be50.bcacb8","type":"comment","z":"d8703926.e2eca","name":"Gantt","info":"","x":150,"y":2660,"wires":[]},{"id":"bea3cc5d.68793","type":"comment","z":"d8703926.e2eca","name":"time registration","info":"","x":100,"y":4320,"wires":[]},{"id":"827557d5.fcca3","type":"subflow:39834eee.0dd5a2","z":"aec22158.fe4e38","name":"","env":[],"x":195,"y":299.99999618530273,"wires":[["1c72090c.42333f"]]},{"id":"c78d53d2.e65ff","type":"subflow:39834eee.0dd5a2","z":"aec22158.fe4e38","name":"","x":195,"y":859.9999961853027,"wires":[["35a2a99e.50eb36"]]},{"id":"cb673224.c23b78","type":"subflow:39834eee.0dd5a2","z":"aec22158.fe4e38","name":"","x":215,"y":1319.9999961853027,"wires":[["1121a4d9.54acc3"]]},{"id":"c4b9da22.c433d8","type":"subflow:39834eee.0dd5a2","z":"aec22158.fe4e38","name":"","x":215,"y":2119.9999961853027,"wires":[["777344ad.7bee8c"]]},{"id":"d7e5d821.5a91a8","type":"subflow:39834eee.0dd5a2","z":"2294209a.0c95b","name":"","x":1000,"y":380,"wires":[["693f75d0.9e78f4"]]},{"id":"c14b21e1.bdb88","type":"subflow:39834eee.0dd5a2","z":"e5822137.be45d","name":"","env":[],"x":800,"y":320,"wires":[["6953bde2.d417fc"]]},{"id":"33793ee0.00690a","type":"subflow:39834eee.0dd5a2","z":"e5822137.be45d","name":"","x":1080,"y":720,"wires":[["1b7d0cd5.8d326b"]]},{"id":"81d84cd6.eb46a","type":"subflow:39834eee.0dd5a2","z":"d8703926.e2eca","name":"","x":940,"y":2200,"wires":[["832d99f5.acbba8"]]},{"id":"4c799513.e81f0c","type":"subflow:39834eee.0dd5a2","z":"d8703926.e2eca","name":"","x":1580,"y":2860,"wires":[["abb11a97.719948"]]},{"id":"9b32f7a0.4eb6f","type":"subflow:39834eee.0dd5a2","z":"d8703926.e2eca","name":"","x":740,"y":3620,"wires":[["b6a11db5.8c34a8"]]},{"id":"f37f6a7b.fbee78","type":"subflow:39834eee.0dd5a2","z":"d8703926.e2eca","name":"","x":1080,"y":4320,"wires":[["468a1bc9.db7f14"]]},{"id":"66ac4ed4.7ee12","type":"http in","z":"508957a1.dd5398","name":"redirect","url":"/redirect","method":"post","upload":false,"swaggerDoc":"","x":90,"y":960,"wires":[["da7d3a96.7d58e"]]},{"id":"da7d3a96.7d58e","type":"function","z":"508957a1.dd5398","name":"Setup msg object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\npayload = msg.payload ;\n\ndelete msg.payload ;\n\n_.each(payload, function(value, key){\n    // if (typeof value ===  'string'){\n    //     msg[key] = value.trim()\n    // } else {\n        msg[key] = value\n    // }\n})\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":960,"wires":[["1bb649ce.6a1376"]]},{"id":"e0e863cc.aff03","type":"http request","z":"5e9b9c1d.bbe4a4","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":830,"y":140,"wires":[["c51282a.019e8"]]},{"id":"79d28e11.52934","type":"function","z":"5e9b9c1d.bbe4a4","name":"Prepair redirect (subflow)","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.payload = {\n    RevotioData : msg.RevotioData,\n    payload : msg.payload\n}\n\nif (!msg.payload.payload.Page ){//||  msg.payload.payload.Page.length  === 0 ){\n    msg.payload.payload.Page = global.get(\"DomainProperties.DefaultPage\")\n    msg.test123 = new Date()\n}\n\n msg.url = global.get(\"DomainProperties.url\") + \"redirect\"\n \n\n\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":140,"wires":[["e0e863cc.aff03"]]},{"id":"c51282a.019e8","type":"json","z":"5e9b9c1d.bbe4a4","name":"","property":"payload","action":"","pretty":false,"x":990,"y":140,"wires":[["5529ca09.8894a4"]]},{"id":"5529ca09.8894a4","type":"http response","z":"5e9b9c1d.bbe4a4","name":"","statusCode":"","headers":{},"x":1130,"y":140,"wires":[]},{"id":"3d5d3142.cf1206","type":"subflow:5e9b9c1d.bbe4a4","z":"508957a1.dd5398","name":"","env":[],"x":1780,"y":280,"wires":[]},{"id":"c8fb96e2.82848","type":"subflow:5e9b9c1d.bbe4a4","z":"508957a1.dd5398","name":"","env":[],"x":3020,"y":340,"wires":[]},{"id":"5fba24de.5173fc","type":"subflow:5e9b9c1d.bbe4a4","z":"508957a1.dd5398","name":"","env":[],"x":1000,"y":420,"wires":[]},{"id":"7167ce92.3c59c","type":"subflow:5e9b9c1d.bbe4a4","z":"508957a1.dd5398","name":"","env":[],"x":1000,"y":800,"wires":[]},{"id":"aee578b.d1a4a88","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":1635,"y":359.99999618530273,"wires":[]},{"id":"c374e685.14751","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":1895,"y":839.9999961853027,"wires":[]},{"id":"fa60834f.7ab0f","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":2035,"y":919.9999961853027,"wires":[]},{"id":"50553c0.ca774c4","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":4380,"y":920,"wires":[]},{"id":"4a4fa343.c95144","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":2855,"y":1339.9999961853027,"wires":[]},{"id":"74c995c2.07940c","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":3000,"y":2360,"wires":[]},{"id":"85e06edd.f24208","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":4640,"y":400,"wires":[]},{"id":"c0f97a1f.81ffc8","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":4640,"y":320,"wires":[]},{"id":"b42e2891.03848","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":2955,"y":299.99999618530273,"wires":[]},{"id":"5e3c68e9.35887","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":1340,"y":2240,"wires":[]},{"id":"6f35ce9c.ca2728","type":"subflow:5e9b9c1d.bbe4a4","z":"e5822137.be45d","name":"","env":[],"x":3760,"y":360,"wires":[]},{"id":"6e95417b.0deff","type":"subflow:5e9b9c1d.bbe4a4","z":"e5822137.be45d","name":"","env":[],"x":3880,"y":420,"wires":[]},{"id":"cf53d7bc.4c3468","type":"subflow:5e9b9c1d.bbe4a4","z":"e5822137.be45d","name":"","env":[],"x":4920,"y":860,"wires":[]},{"id":"d4e822a6.d28f38","type":"subflow:5e9b9c1d.bbe4a4","z":"e5822137.be45d","name":"","env":[],"x":3800,"y":1020,"wires":[]},{"id":"93465945.a914c8","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4200,"y":2380,"wires":[]},{"id":"93d86bf2.5ea3f","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4220,"y":2600,"wires":[]},{"id":"638aa1a8.33e9b","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4240,"y":3020,"wires":[]},{"id":"cc72ad8f.9cf75","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4260,"y":3240,"wires":[]},{"id":"4bd5c726.c58bb","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4240,"y":3900,"wires":[]},{"id":"5917f88d.a1ad4","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4300,"y":4120,"wires":[]},{"id":"8a709a3.5078768","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":2820,"y":4700,"wires":[]},{"id":"74b048e7.b1b6e","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":2840,"y":4920,"wires":[]},{"id":"7fefc455.ea5a3c","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":4000,"y":4060,"wires":[]},{"id":"a961a3fb.f785f8","type":"debug","z":"e5822137.be45d","name":"OrganizationOverview","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":380,"y":700,"wires":[]},{"id":"ecd2c396.4d9af","type":"subflow:a55f7aee.572be","z":"aec22158.fe4e38","name":"","env":[],"x":305,"y":539.9999961853027,"wires":[["c199e887.a6da4"],["e130563c.567048"],["82e73790.6bba78"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"f467989a.2c7b","type":"subflow:a55f7aee.572be","z":"aec22158.fe4e38","name":"","env":[],"x":345,"y":1059.9999961853027,"wires":[["18c634ff.b1dad3"],["6537bec2.9226e8"],["e8682458.5b8fb"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"fc712911.f455d8","type":"subflow:a55f7aee.572be","z":"aec22158.fe4e38","name":"","env":[],"x":445,"y":1539.9999961853027,"wires":[["c42395c9.e7a698"],["839b0669.2a35d"],["e84a1d06.e6f258"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"3f566bdd.bca52c","type":"subflow:a55f7aee.572be","z":"aec22158.fe4e38","name":"","env":[],"x":385,"y":2339.9999961853027,"wires":[["e98e6ae3.ce1128"],["8b9609e7.cfa4c8"],["32198700.e5b5b8"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"e5a5de01.a1ac3","type":"subflow:a55f7aee.572be","z":"2294209a.0c95b","name":"","env":[],"x":230,"y":480,"wires":[["ff290d23.18df18"],["b0ae31e0.11c9e8"],["be4224db.bfd728"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"5ad96e17.a754f8","type":"subflow:a55f7aee.572be","z":"e5822137.be45d","name":"","env":[],"x":330,"y":360,"wires":[["5a5da070.ff4398"],["e6c8f68c.3a8fd"],["c44b4bde.0df218"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"92dcb378.bb255","type":"subflow:a55f7aee.572be","z":"e5822137.be45d","name":"","env":[],"x":330,"y":800,"wires":[["b848d91c.ac4328"],["b55357f7.301158"],["4e5ae1ce.872488"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"dc4e7f35.0f9568","type":"subflow:a55f7aee.572be","z":"d8703926.e2eca","name":"","env":[],"x":290,"y":2340,"wires":[["54ddefb7.546dd8"],["99062bf1.b4f22"],["16cc9821.fb3bf"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"694e63c7.31379c","type":"subflow:a55f7aee.572be","z":"d8703926.e2eca","name":"","env":[],"x":230,"y":2940,"wires":[["f16d4d07.1e2f28"],["6c162efd.158dd8"],["ded78440.200f6"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"7db79c80.25543c","type":"subflow:a55f7aee.572be","z":"d8703926.e2eca","name":"","env":[],"x":250,"y":3820,"wires":[["cba02ed1.86e7e8"],["3faaafe4.5d305"],["b8ffa12.8f00be"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"a658973a.c56988","type":"subflow:a55f7aee.572be","z":"d8703926.e2eca","name":"","env":[],"x":290,"y":4640,"wires":[["e0a6433b.b90ac"],["f3612948.731ac"],["af896cc2.619c9"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"8a98de87.332c38","type":"comment","z":"508957a1.dd5398","name":"Global gadgets","info":"","x":160,"y":2000,"wires":[]},{"id":"a6bb1f75.b71ea","type":"function","z":"508957a1.dd5398","name":"Trigger remove actions per entity","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// delete all sub entities first\n_.each(msg.payload,function(SubItem, SubIndex){\n    node.send({organization_id:new ObjectID(SubItem._id)})\n} )\n\n// continue with main entity removal\n\nreturn msg;","outputs":1,"noerr":0,"x":1220,"y":2060,"wires":[["e4a2cb6b.ee4418","b842fe40.90a778","9c1da85e.48053"]]},{"id":"9548cd04.dd18","type":"function","z":"508957a1.dd5398","name":"Trigger delete project data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nif (msg.done === false ){\n    node.send(msg)\n}\n","outputs":1,"noerr":0,"x":1860,"y":2020,"wires":[["1b541ac0.d02bb5"]]},{"id":"772ffe54.54c5e8","type":"function","z":"508957a1.dd5398","name":"check if msg.organization_id is present and prepair child lookup","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nvar valid, invalid\nif (msg.payload.hasOwnProperty(\"organization_id\")){\n\n    payload = {\"$or\": [{parent_id : new ObjectID(msg.payload.organization_id)}, {_id : new ObjectID(msg.payload.organization_id)} ] }\n    msg.operation = 'find.toArray'\n    msg.payload = payload\n    valid = msg\n} else {\n    invalid = msg\n}\n\nreturn [valid, invalid]","outputs":2,"noerr":0,"x":650,"y":2080,"wires":[["49d18cf3.10bffc"],["84581731.46c528"]],"outputLabels":["valid, ","invalid"]},{"id":"5e3674f6.75785c","type":"comment","z":"508957a1.dd5398","name":"Delete all organization Data","info":"","x":280,"y":2040,"wires":[]},{"id":"96251a.42faa2e8","type":"link in","z":"508957a1.dd5398","name":"Delete all organization Data","links":["755fb71d.d2028","bfc74af8.6937b"],"x":415,"y":2040,"wires":[["772ffe54.54c5e8","92f7b82b.753758"]]},{"id":"95fbcc07.06d0d8","type":"function","z":"508957a1.dd5398","name":"Get all app pages ","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// find  \nfindObj = {\n                    query : {\n                            query : {\tapplication_id : new ObjectID(msg.payload.application_id)},\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n// return msg;","outputs":1,"noerr":0,"x":990,"y":2140,"wires":[["58489cdd.d68c94"]]},{"id":"470f9615.b75dc","type":"comment","z":"508957a1.dd5398","name":"Delete all application data","info":"","x":310,"y":2160,"wires":[]},{"id":"7a432a0c.79afbc","type":"link in","z":"508957a1.dd5398","name":"Delete all project data","links":["1b541ac0.d02bb5","b298aff4.badb78","e9fb6492.5b068"],"x":395,"y":2160,"wires":[["5991555.e1515ac","1ea0e68c.3991f9"]]},{"id":"6a22c9d1.d1b99","type":"function","z":"508957a1.dd5398","name":"Libs","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nif ( Array.isArray(msg.payload)){\n   _.each(msg.payload, function(Item, Index){\n    \n    msg.page_id = Item._id\n    node.send(msg);\n    \n    \n}); \n} else if (msg.payload.hasOwnProperty(\"page_id\")) {\n    msg.page_id = msg.payload.page_id\n    node.send(msg);\n} else{\n      msg.page_id = msg.payload._id\n    node.send(msg);\n}\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":450,"y":2280,"wires":[["7ceb5cfd.26cd9c"]]},{"id":"cfb9798c.de63c8","type":"comment","z":"508957a1.dd5398","name":"Remove all page data","info":"","x":280,"y":2240,"wires":[]},{"id":"1c315256.30db66","type":"link in","z":"508957a1.dd5398","name":"Remove all wp data","links":["58489cdd.d68c94","5bc91a39.2b348c","cf312f50.45a118","148a291d.254577"],"x":375,"y":2240,"wires":[["6a22c9d1.d1b99","7af2cd05.9b0044"]]},{"id":"1b541ac0.d02bb5","type":"link out","z":"508957a1.dd5398","name":"","links":["7a432a0c.79afbc"],"x":1995,"y":2020,"wires":[]},{"id":"58489cdd.d68c94","type":"link out","z":"508957a1.dd5398","name":"","links":["1c315256.30db66"],"x":1115,"y":2140,"wires":[]},{"id":"73343394.a4587c","type":"http in","z":"508957a1.dd5398","name":"removeOrganization","url":"/removeOrganization","method":"post","upload":false,"swaggerDoc":"","x":310,"y":2080,"wires":[["772ffe54.54c5e8","92f7b82b.753758"]]},{"id":"834dea4d.06b3a8","type":"http in","z":"508957a1.dd5398","name":"removeApplication","url":"/removeApplication","method":"post","upload":false,"swaggerDoc":"","x":270,"y":2200,"wires":[["5991555.e1515ac","1ea0e68c.3991f9"]]},{"id":"9aa58cd7.cd31b","type":"http in","z":"508957a1.dd5398","name":"removePage","url":"/removePage","method":"post","upload":false,"swaggerDoc":"","x":270,"y":2280,"wires":[["6a22c9d1.d1b99","7af2cd05.9b0044"]]},{"id":"521fb03f.d3a258","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":770,"y":2280,"wires":[]},{"id":"e08e933.a60427","type":"http request","z":"e5822137.be45d","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":4230,"y":820,"wires":[["7bb21709.53314"]]},{"id":"dffb3629.a3865","type":"function","z":"e5822137.be45d","name":"Fire remove action","func":"msg.url = global.get(\"DomainProperties.url\") + \"removeOrganization\"\n\nmsg.payload = {\n    organization_id : msg.organization_id\n}\nreturn msg;","outputs":1,"noerr":0,"x":4050,"y":820,"wires":[["e08e933.a60427"]]},{"id":"84581731.46c528","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":950,"y":2100,"wires":[]},{"id":"5991555.e1515ac","type":"function","z":"508957a1.dd5398","name":"check if msg.application_id is present and prepair child lookup","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar valid, invalid\nif (msg.payload.hasOwnProperty(\"application_id\")){\n\n    // payload = {parent_id : new ObjectID(msg.payload.project_id)}\n    // msg.operation = 'find.toArray'\n    // msg.payload = payload\n    valid = msg\n} else {\n    invalid = msg\n}\n\nreturn [valid, invalid]","outputs":2,"noerr":0,"x":650,"y":2200,"wires":[["95fbcc07.06d0d8","6fd6f4e9.852dfc"],["71ca154d.fb77fc"]],"outputLabels":["valid, ","invalid"]},{"id":"71ca154d.fb77fc","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":950,"y":2220,"wires":[]},{"id":"b742db6e.8148f","type":"link out","z":"2294209a.0c95b","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","480dae32.8a339"],"x":3035,"y":600,"wires":[]},{"id":"c6410018.e4f6e","type":"http request","z":"152aab03.7a806d","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":530,"y":380,"wires":[["58c085e7.5e88a4"]]},{"id":"b4440fc5.ad787","type":"function","z":"152aab03.7a806d","name":"menu call","func":"\npayload = {\n    payload : msg.payload,\n    RevotioData: msg.RevotioData\n}\n\nmsg.payload = payload\n\nmsg.url = global.get(\"DomainProperties.form-menu\")+ \"menu\"\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":380,"wires":[["c6410018.e4f6e"]]},{"id":"de32b4e0.6e0cb","type":"subflow:152aab03.7a806d","z":"2294209a.0c95b","name":"","env":[],"x":2960,"y":600,"wires":[["b742db6e.8148f"]]},{"id":"301d64c9.14362c","type":"function","z":"3170c4ab.fadb9c","name":"Form call","func":"\npayload = {\n    payload : msg.payload,\n    RevotioData: msg.RevotioData\n}\nmsg.payload = payload\nmsg.url = global.get(\"DomainProperties.form-menu\")+ \"form\"\nreturn msg;","outputs":1,"noerr":0,"x":500,"y":260,"wires":[["9f77dd79.1dfd58"]]},{"id":"9f77dd79.1dfd58","type":"http request","z":"3170c4ab.fadb9c","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":630,"y":340,"wires":[["4cf371cf.b278d8"]]},{"id":"a59768fe.a6a258","type":"subflow:3170c4ab.fadb9c","z":"2294209a.0c95b","name":"","x":3560,"y":420,"wires":[["da96270c.50aa4"]]},{"id":"da96270c.50aa4","type":"link out","z":"2294209a.0c95b","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","480dae32.8a339"],"x":3635,"y":420,"wires":[]},{"id":"6db87728.a54d58","type":"subflow:3170c4ab.fadb9c","z":"2294209a.0c95b","name":"","env":[],"x":3120,"y":540,"wires":[["2a3f6b04.a7f3bc"]]},{"id":"2a3f6b04.a7f3bc","type":"link out","z":"2294209a.0c95b","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","480dae32.8a339"],"x":3195,"y":540,"wires":[]},{"id":"b0ed4707.f5ac","type":"subflow:3170c4ab.fadb9c","z":"2294209a.0c95b","name":"","env":[],"x":3100,"y":760,"wires":[["f438ead1.51c198"]]},{"id":"f438ead1.51c198","type":"link out","z":"2294209a.0c95b","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","480dae32.8a339"],"x":3175,"y":760,"wires":[]},{"id":"e7a48cc8.cc60d8","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":3735,"y":400,"wires":[]},{"id":"b4232b59.fc3c9","type":"subflow:152aab03.7a806d","z":"e5822137.be45d","name":"","env":[],"x":3640,"y":400,"wires":[["e7a48cc8.cc60d8"]]},{"id":"229e849a.2b771c","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","env":[],"x":3800,"y":280,"wires":[["402f0b1e.b2f10c"]]},{"id":"402f0b1e.b2f10c","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":3915,"y":280,"wires":[]},{"id":"bcb372ba.8288e8","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","env":[],"x":3880,"y":460,"wires":[["4e30d34a.94d17c"]]},{"id":"4e30d34a.94d17c","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":3955,"y":460,"wires":[]},{"id":"450c8292.150aa4","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":4100,"y":560,"wires":[["950e082d.458a48"]]},{"id":"950e082d.458a48","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":4195,"y":560,"wires":[]},{"id":"695fb9e3.b1aad8","type":"subflow:152aab03.7a806d","z":"e5822137.be45d","name":"","env":[],"x":3780,"y":640,"wires":[["b0cd1861.02c32"]]},{"id":"b0cd1861.02c32","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":3855,"y":640,"wires":[]},{"id":"98fd19a9.c086","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":4080,"y":680,"wires":[["d17b5e28.efa078"]]},{"id":"d17b5e28.efa078","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":4155,"y":680,"wires":[]},{"id":"ee736c73.bbaa2","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":3940,"y":720,"wires":[["f0a7f951.ad708"]]},{"id":"f0a7f951.ad708","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":4015,"y":720,"wires":[]},{"id":"914f157a.8ca06","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":4140,"y":940,"wires":[["332fcebf.47e5ea"]]},{"id":"332fcebf.47e5ea","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":4215,"y":940,"wires":[]},{"id":"1132ade.85a9e52","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":4140,"y":980,"wires":[["6c372d2d.56f66c"]]},{"id":"6c372d2d.56f66c","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":4215,"y":980,"wires":[]},{"id":"d5ba2f48.579028","type":"subflow:152aab03.7a806d","z":"d8703926.e2eca","name":"","env":[],"x":4020,"y":2140,"wires":[["55f75812.d4147"]]},{"id":"55f75812.d4147","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4095,"y":2140,"wires":[]},{"id":"6d10f241.f957bc","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","x":4200,"y":2420,"wires":[["2daf070a.78ed98"]]},{"id":"2daf070a.78ed98","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4275,"y":2420,"wires":[]},{"id":"27cb5131.da737e","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","x":4140,"y":2460,"wires":[["ca0414d.a9c7a68"]]},{"id":"ca0414d.a9c7a68","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4215,"y":2460,"wires":[]},{"id":"97795aa4.2851f8","type":"subflow:152aab03.7a806d","z":"d8703926.e2eca","name":"","env":[],"x":4000,"y":2980,"wires":[["192ccb9.8f0e834"]]},{"id":"192ccb9.8f0e834","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4075,"y":2980,"wires":[]},{"id":"34c83019.cd3e","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","x":4380,"y":3100,"wires":[["31cfbc66.cc8804"]]},{"id":"31cfbc66.cc8804","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4455,"y":3100,"wires":[]},{"id":"d80c0979.2ffed","type":"subflow:152aab03.7a806d","z":"d8703926.e2eca","name":"","env":[],"x":4040,"y":3740,"wires":[["b8d4d51b.d27168"]]},{"id":"b8d4d51b.d27168","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4115,"y":3740,"wires":[]},{"id":"cecc87aa.56b3c","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","x":4220,"y":3940,"wires":[["50d2a4eb.931acc"]]},{"id":"50d2a4eb.931acc","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":4295,"y":3940,"wires":[]},{"id":"b640533d.63cf98","type":"subflow:152aab03.7a806d","z":"d8703926.e2eca","name":"","env":[],"x":2540,"y":4460,"wires":[["6e19fdf0.93f8ac"]]},{"id":"6e19fdf0.93f8ac","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":2615,"y":4460,"wires":[]},{"id":"144526fb.ead301","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","x":2840,"y":4740,"wires":[["7e5248cb.e2b4e8"]]},{"id":"7e5248cb.e2b4e8","type":"link out","z":"d8703926.e2eca","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","6a41100.61cc07","85ce669.6b97d18"],"x":2915,"y":4740,"wires":[]},{"id":"3e910553.3e65aa","type":"subflow:152aab03.7a806d","z":"e5822137.be45d","name":"","env":[],"x":1480,"y":440,"wires":[["ec6b9f6a.c0a41"]]},{"id":"ec6b9f6a.c0a41","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":1735,"y":440,"wires":[]},{"id":"58c085e7.5e88a4","type":"json","z":"152aab03.7a806d","name":"","property":"payload","action":"","pretty":false,"x":650,"y":380,"wires":[["6fec3c3b.ef2c44"]]},{"id":"4cf371cf.b278d8","type":"json","z":"3170c4ab.fadb9c","name":"","property":"payload","action":"","pretty":false,"x":750,"y":260,"wires":[["3ca50242.9fc416"]]},{"id":"4602b7fe.7067e8","type":"subflow:5e9b9c1d.bbe4a4","z":"152aab03.7a806d","name":"","x":960,"y":360,"wires":[]},{"id":"a7b9f68.e4bd088","type":"http response","z":"152aab03.7a806d","name":"","statusCode":"","headers":{},"x":990,"y":380,"wires":[]},{"id":"6fec3c3b.ef2c44","type":"function","z":"152aab03.7a806d","name":"Route response menu","func":"var redirect,logout, other;\n\nif (msg.payload.hasOwnProperty(\"payload\")){\n    payload = msg.payload.payload\n    msg.RevotioData = msg.payload.RevotioData\n    msg.payload = payload\n}\n\n\nif (msg.payload.hasOwnProperty(\"Page\")){\n    redirect = msg;\n} else if (msg.payload.hasOwnProperty(\"RevotioData\")  && msg.payload.RevotioData.hasOwnProperty(\"logout\")  &&msg.payload.RevotioData.logout === true){\n    logout = msg;\n} else {\n    other = msg;\n}\n\nreturn [redirect,logout, other];","outputs":3,"noerr":0,"x":800,"y":380,"wires":[["4602b7fe.7067e8"],["a7b9f68.e4bd088"],[]],"outputLabels":["redirect","logout","other"]},{"id":"3ca50242.9fc416","type":"function","z":"3170c4ab.fadb9c","name":"Route response form","func":"\nif (msg.payload.hasOwnProperty('Form')){\n    payload = msg.payload.payload\n    msg.RevotioData.FlowData.Form = msg.payload.Form\n    msg.payload = payload\n}\n\n\nvar redirect, other\nif (msg.payload.hasOwnProperty(\"presentationLayer\")){\n   redirect = msg; \n} else {\n    other = msg;\n}\nreturn [redirect, other];","outputs":2,"noerr":0,"x":920,"y":260,"wires":[["63027655.f17e48"],[]],"outputLabels":["redirect, ","other"]},{"id":"63027655.f17e48","type":"http response","z":"3170c4ab.fadb9c","name":"","statusCode":"","headers":{},"x":1150,"y":240,"wires":[]},{"id":"62aa0677.77b8f","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":1650,"y":1980,"wires":[]},{"id":"e4a2cb6b.ee4418","type":"function","z":"508957a1.dd5398","name":"Remove Organization","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// remove \n            removeObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.organization_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    msg.result = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1500,"y":1980,"wires":[["62aa0677.77b8f"]]},{"id":"b5118d30.e7abd","type":"comment","z":"e25f5e2d.45871","name":"Push Gadgets to frontend","info":"","x":170,"y":160,"wires":[]},{"id":"242f58f1.b6c22","type":"function","z":"e25f5e2d.45871","name":"Get gadgetContainers Object","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar response, sessionUpdate , timer ;\nvar totalNumberOfGadgets, currentNumberOfGadgets;\nvar deviceId = msg.session.deviceId ; \nvar revotioSessionId = msg.session.revotioSessionId ;\nvar token = msg.session.token ;\n\nmsg.test = []\n\nmsg.endtime = new Date()\n\n\n// if ( msg.session.Gadgets.length === 0  ){\n//     timer = msg;\n// }\n\n// msg.test.push({level:1})\n// _.each(msg.payload.gadgetsList, function(item, Index){\n//     item.endtime = new Date()\n//     item.starttime = msg.starttime\n//     item.diff = new Date(item.endtime) - new Date(msg.starttime)\n//     // GadgetArray = global.get('gadgetGroups.' + deviceId + \".\" + revotioSessionId+\".Gadgets\")\n    \n//     msg.session.Gadgets.push(item)\n    \n//     // update    \n\n \n\n// })\n\n\n\n// *********************\n// msg.test.push({Gadgets :global.get('gadgetGroups.' + deviceId + \".\" + revotioSessionId+\".Gadgets\"), Type:\"stage 1\" })\n// *********************\n\ncurrentNumberOfGadgets = msg.session.Gadgets.length;\n\n// msg.test.push({level:2})\nif (msg.session.groupedObject.hasOwnProperty(msg.RevotioData.entity)){\n    msg.test.push({level:3.1})\n    totalNumberOfGadgets = msg.session.groupedObject[msg.RevotioData.entity].length\n    msg.test.push({level:3.2})\n    \n} else {\n     msg.test.push({level:4.1})\n    totalNumberOfGadgets = msg.session.groupedObject.INIT.length\n    // totalNumberOfGadgets = global.get('gadgetGroups.' + deviceId + \".\" + revotioSessionId+\".groupedObject.INIT\").length\n    msg.test.push({level:4.2})\n    \n}\n\n// *********************\n// msg.test.push({             Gadgets :global.get('gadgetGroups.' + deviceId + \".\" + revotioSessionId+\".Gadgets\"), \n//                             Type:\"stage 2\", \n//                             totalNumberOfGadgets:totalNumberOfGadgets, \n//                             currentNumberOfGadgets:currentNumberOfGadgets })\n// *********************\n\nif (  \n        (totalNumberOfGadgets <= currentNumberOfGadgets) ){\n    \n    msg.payload = {\n        deviceId: deviceId,\n        revotioSessionId: revotioSessionId,\n        token: token,\n        gadgetsList : msg.session.Gadgets,\n        Type: \"Update\"\n        \n    }\n    \n    msg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n    response = msg; \n    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.session._id)}, \n                            update : { \"$set\" : {Gadgets : [],\n                                                timestamp: new Date(),\n                                                responseSend : false\n                            }},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n            \n                \n            })  \n\n\n\n \nresponse = {\n    req : msg.req,\n    res : msg.res,\n    payload : msg.payload,\n    headers : msg.headers,\n}\nsessionUpdate = {RevotioData : msg.RevotioData}\n\nreturn [response, sessionUpdate] } \n\nelse {\n    return [response, sessionUpdate,timer];\n}\n\n    \n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":430,"y":220,"wires":[["54a1b615.985f98"],["c87843fd.57c39"],["20224679.81494a"]],"outputLabels":["response","sessionUpdate",""]},{"id":"9690ddef.823e3","type":"http response","z":"e25f5e2d.45871","name":"","statusCode":"","headers":{},"x":1570,"y":120,"wires":[]},{"id":"5d28c909.86bda","type":"comment","z":"e25f5e2d.45871","name":"Generate response Object","info":"","x":190,"y":80,"wires":[]},{"id":"c87843fd.57c39","type":"function","z":"e25f5e2d.45871","name":"Update DB Session object","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nObj =  {FlowData: msg.RevotioData.FlowData, timestamp : new Date()\n};\n// msg.payload = [{deviceId: msg.RevotioData.session.deviceId, revotioSessionId: msg.RevotioData.session.revotioSessionId},{\"$set\" : Obj},{upsert : true}];\n\n// msg.operation = 'updateOne';\n\n// update    \n    updateObj = {\n                    query : {\n                            query :{deviceId: msg.RevotioData.session.deviceId, revotioSessionId: msg.RevotioData.session.revotioSessionId}, \n                            update : {\"$set\" : Obj},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.result = res\n                    // node.send(msg) \n            })  \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":1200,"y":240,"wires":[[]]},{"id":"20224679.81494a","type":"delay","z":"e25f5e2d.45871","name":"Variable delay || 5000 milliseconds","pauseType":"delayv","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":440,"y":280,"wires":[["6c4dc95f.5f22c"]]},{"id":"6267a6f2.146138","type":"function","z":"e25f5e2d.45871","name":"`check if response needs to be enforced","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar delay, response, sessionUpdate;\nvar deviceId = msg.sessionNew.deviceId ; \nvar revotioSessionId = msg.sessionNew.revotioSessionId ;\n\n\nif (        msg.sessionNew.hasOwnProperty(\"timestamp\") && \n        moment().diff(moment(msg.sessionNew.timestamp) > global.get(\"SystemVars.responseTimeout\"))){\n            \n       \n    \n        payload = {\n            deviceId: deviceId,\n            revotioSessionId: revotioSessionId,\n            gadgetsList :msg.sessionNew.Gadgets,\n            Type: \"Update\",\n            TimeOut : true\n            \n        }\n    \n        headers = {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type',\n            'content-type': 'application/json',\n        };\n\n       \n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.sessionNew._id)}, \n                            update : { \"$set\" : {Gadgets : [],\n                                                timestamp: new Date(),\n                                                responseSend : false\n                            }},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n            }) \n \n        response = {\n            req : msg.req,\n            res : msg.res,\n            payload : payload,\n            headers : headers,\n        }\n        \n        sessionUpdate = {RevotioData : msg.RevotioData}\n\n            \n        } else if (msg.sessionNew.hasOwnProperty(\"timestamp\")) {\n            msg.time = moment().diff(moment(msg.sessionNew.timestamp))\n            \n            if ( global.get(\"SystemVars\").hasOwnProperty(\"delaySize\") ){\n                 msg.delay = global.get(\"SystemVars.delaySize\") \n            }\n          \n            delay = msg;\n        }\n   \n   \nreturn [delay, response, sessionUpdate];","outputs":3,"noerr":0,"x":740,"y":380,"wires":[["20224679.81494a"],["54a1b615.985f98"],["c87843fd.57c39"]],"outputLabels":["delay","response","sessionUpdate"]},{"id":"d6bad25b.32468","type":"catch","z":"a2b40f09.d18fd8","name":"","scope":null,"x":180,"y":60,"wires":[["a33af86.64c9d08"]]},{"id":"a33af86.64c9d08","type":"debug","z":"a2b40f09.d18fd8","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":300,"y":60,"wires":[]},{"id":"1a55a0c3.a8f35f","type":"link out","z":"508957a1.dd5398","name":"","links":["dc664b4f.0d82e","a1a4c9c0.c43b6"],"x":275,"y":400,"wires":[]},{"id":"9dfd3d8b.23a038","type":"comment","z":"508957a1.dd5398","name":"CHECK GC state","info":"","x":360,"y":400,"wires":[]},{"id":"d2a7b91c.174a08","type":"link out","z":"508957a1.dd5398","name":"","links":["dc664b4f.0d82e","a1a4c9c0.c43b6"],"x":295,"y":640,"wires":[]},{"id":"89012a78.5078c","type":"comment","z":"508957a1.dd5398","name":"CHECK GC state","info":"","x":400,"y":640,"wires":[]},{"id":"77a61ff7.3ac9d","type":"link out","z":"508957a1.dd5398","name":"","links":["dc664b4f.0d82e","a1a4c9c0.c43b6"],"x":235,"y":820,"wires":[]},{"id":"1212e3b2.f2f924","type":"comment","z":"508957a1.dd5398","name":"CHECK GC state","info":"","x":320,"y":820,"wires":[]},{"id":"3e7638dd.3e7238","type":"subflow:152aab03.7a806d","z":"e5822137.be45d","name":"","env":[],"x":2060,"y":560,"wires":[["63f480be.65ed78"]]},{"id":"63f480be.65ed78","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07"],"x":2235,"y":560,"wires":[]},{"id":"2d5db789.b218c","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1875,"y":560,"wires":[["3e7638dd.3e7238"]]},{"id":"f6d62ac3.629338","type":"function","z":"aec22158.fe4e38","name":"Cancel reset btn","func":"// Admin buttons\n\nmsg.payload = {\n    gadgetsList : [{            \n      \"gadgetId\": \"de786f35-541f-0e64-fc3f-089677920985\",\n      \"gadgetName\": \"Cancel reset btn\",\n      \"gadgetType\": \"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-info\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Cancel password reset\"},\n                // \"gadgetData\":\"create_project\"\n       \n   }]\n}\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":2180,"wires":[["b62f16e5.5c7998"]]},{"id":"cae94cae.9e3458","type":"link in","z":"aec22158.fe4e38","name":"","links":["8b9609e7.cfa4c8"],"x":615,"y":2180,"wires":[["f6d62ac3.629338"]]},{"id":"b62f16e5.5c7998","type":"link out","z":"aec22158.fe4e38","name":"","links":["1766e26.2df601e","15f8aeef.16f7d1","6510415f.c64d6","14c789ed.fd90f6","172bf3ee.b9865c","e6548cdd.b0501","43e1a714.c877a8","228b07a6.f5d6a8","101c6a60.58ca1e","b0f61403.73aa18","d6cfe34e.7be1d","2f3e87cf.a0111","5171869d.c0b8a8","ffc46262.694388","3356ae90.b06682","1f447df2.f79d1a","84cfac4f.42a868","3a82fd2b.90627a","4809e15c.231538","4675a1ec.757c6","82336b76.b7c958","b824f5cf.104838","6a1ab5fc.dff14c","692c6501.32656c","14264b85.6baf9c","e358d072.f3562","6cc00ce9.6960a4"],"x":795,"y":2180,"wires":[]},{"id":"ba5ecdcd.97009","type":"function","z":"aec22158.fe4e38","name":"prepair redirect to NonAuthDefaultPage","func":"\nmsg.payload  = {\n    Page :global.get(\"DomainProperties.NonAuthDefaultPage\"),\n}\nreturn msg;","outputs":1,"noerr":0,"x":2240,"y":2380,"wires":[["f374ea1a.cac74"]]},{"id":"f374ea1a.cac74","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":2440,"y":2380,"wires":[]},{"id":"dc2349a8.d26158","type":"http in","z":"508957a1.dd5398","name":"entrance","url":"/entrance","method":"post","upload":false,"swaggerDoc":"","x":120,"y":340,"wires":[["1a55a0c3.a8f35f","f6b3771f.d41548"]]},{"id":"180d6542.0d51fb","type":"http in","z":"508957a1.dd5398","name":"initialize","url":"/initialize","method":"post","upload":false,"swaggerDoc":"","x":110,"y":600,"wires":[["d2a7b91c.174a08","13c4294b.23613f"]]},{"id":"f0e5ba26.618eb8","type":"http in","z":"508957a1.dd5398","name":"action","url":"/action","method":"post","upload":false,"swaggerDoc":"","x":90,"y":780,"wires":[["77a61ff7.3ac9d","1d0b4bad.c78bcc"]]},{"id":"2780dc99.05adfc","type":"function","z":"2ef93158.ae5276","name":"Generic topbar design settings","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nif (msg.payload.hasOwnProperty(\"design\") === false ){\n    msg.payload.design = {}\n}\n\n_.each(global.get('topbar_design') , function(value, key){\n    \n    if (key === \"pageSpecificContanerPlaceholder\"){\n        msg.payload.design[msg.topbarContanerId] = value\n    } else {\n       msg.payload.design[key] = value\n    }\n    \n})\n\n\nreturn msg;","outputs":1,"noerr":0,"x":190,"y":80,"wires":[[]]},{"id":"bf03eb39.4bf4a8","type":"subflow:2ef93158.ae5276","z":"e5822137.be45d","name":"","env":[],"x":1170,"y":320,"wires":[["df6d2863.899c68"]]},{"id":"57f4e13b.f3b188","type":"subflow:2ef93158.ae5276","z":"e5822137.be45d","name":"","env":[],"x":1520,"y":720,"wires":[["5c3040ab.2074e8"]]},{"id":"9293b380.aed2b","type":"subflow:2ef93158.ae5276","z":"2294209a.0c95b","name":"","env":[],"x":1440,"y":380,"wires":[["225467fa.c7f1f"]]},{"id":"42c8b348.742f74","type":"subflow:2ef93158.ae5276","z":"d8703926.e2eca","name":"","env":[],"x":1340,"y":2180,"wires":[["9117f3ed.2b4b3"]]},{"id":"68f61fa.e439ee","type":"subflow:2ef93158.ae5276","z":"d8703926.e2eca","name":"","env":[],"x":1180,"y":3500,"wires":[["57c1ff73.586f"]]},{"id":"3cb438aa.c4cbc8","type":"subflow:2ef93158.ae5276","z":"d8703926.e2eca","name":"","env":[],"x":1440,"y":4320,"wires":[["ea436739.9e5ac8"]]},{"id":"d7e3b62f.c80e08","type":"subflow:2ef93158.ae5276","z":"d8703926.e2eca","name":"","env":[],"x":1920,"y":2760,"wires":[["6d1463d3.f65d04"]]},{"id":"ef28ebcf.e11cc8","type":"function","z":"2294209a.0c95b","name":"Gadget payload","func":"msg.payload = {gadgetsList : [ {\n    \"gadgetId\":\"4c0935bb-b3da-51bd-8a74-c952f4272193\",\n      \"gadgetName\":\"Scope tabs\",\n      \"gadgetType\":\"revotio-tabs-select\",\n      \"gadgetData\":{\n         \"dropdown\":{\n            // \"value\": msg.RevotioData.FlowData.gadgetOptions.ReportingPeriod,\n            // \"options\":DropDown\n         },\n         \"tabs\":[ {\n               \"dropdownKey\":msg.RevotioData.session.Page,\n               \"fields\":\"\"\n         }],\n          \n      }}]};\n      \nmsg.tabsSettings = {\n    entity : \"organization\" ,\n    entityId : msg.RevotioData.FlowData.organization_id,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1500,"y":760,"wires":[[]]},{"id":"56a2b4a6.6d588c","type":"link out","z":"2294209a.0c95b","name":"","links":["5185c631.530a58","cb87250c.966108","112320ff.7cff6f","d230180f.f3d19","e7f2e3d2.30705","ebf87699.c97f08","98813d9e.bcf0d","90045e69.ebd138","dd373359.040c4","ecd0ecf2.99d41","93aa962f.3144d","e5823b9b.d200f","dda61270.476b9","f0eeb60f.091b78","359e3b04.860634","dc6abb7.ed83248","ff0e6248.29e22","1cff0ac1.dc8705","147f3fb7.690568","f42bf06.8974d1","ef55a0fd.6d311","552f5d9b.570784","498662dd.42a45c","81c0cf07.5ef198","44daecc2.e5b2f4","cb902343.5f03a","e34f6cc2.af5ad8","480dae32.8a339"],"x":1775,"y":760,"wires":[]},{"id":"c114b448.029c4","type":"link in","z":"2294209a.0c95b","name":"users global = ACC Gagdet","links":["aea25a8a.fa4a58"],"x":1375,"y":760,"wires":[["ef28ebcf.e11cc8"]]},{"id":"54978e5a.104c68","type":"debug","z":"2294209a.0c95b","name":"Post Items gadgets","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2100,"y":720,"wires":[]},{"id":"b9579dac.5b5cc8","type":"debug","z":"e5822137.be45d","name":"Pre Project DT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2750,"y":860,"wires":[]},{"id":"838b51d.a20a9b","type":"websocket in","z":"e15a0fdb.64cc38","name":"","server":"c2e73722.28eeb8","client":"","x":350,"y":300,"wires":[["9a88dff3.3164f8","66543a25.bd4a5c"]]},{"id":"b5909b21.1383d8","type":"function","z":"e15a0fdb.64cc38","name":"","func":"delete msg._session;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":710,"y":300,"wires":[["3a21d8cf.6e7278","f91c9934.8b5258"]]},{"id":"3a21d8cf.6e7278","type":"websocket out","z":"e15a0fdb.64cc38","name":"","server":"c2e73722.28eeb8","x":870,"y":300,"wires":[]},{"id":"f54b37e8.f0faf8","type":"http in","z":"e15a0fdb.64cc38","name":"","url":"/chat","method":"get","upload":false,"swaggerDoc":"","x":320,"y":420,"wires":[["45553c9e.dc516c"]]},{"id":"45553c9e.dc516c","type":"template","z":"e15a0fdb.64cc38","name":"","field":"payload","fieldType":"msg","syntax":"mustache","template":"<!--<head>-->\n<!--  <meta name=\"viewport\" content=\"width=320, initial-scale=1\">-->\n<!--  <title>Chat</title>-->\n<!--</head>-->\n\n<!--<body>-->\n<!--  <div id=\"wrapper\">-->\n<!--    <div id=\"chat_box\" class=\"content\"></div>-->\n\n<!--    <div id=\"footer\">-->\n<!--      <div class=\"content\">-->\n<!--        <input type=\"text\" id=\"user\" placeholder=\"Who are you?\" />-->\n<!--        <input type=\"text\" id=\"userId\" placeholder=\"userId\" />-->\n<!--        <input type=\"text\" id=\"message\" placeholder=\"What do you want to say?\" />-->\n<!--        <input type=\"button\" id=\"send_btn\" value=\"Send\" onclick=\"sendMessage()\">-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n<!--</body>-->\n\n<!--<script type=\"text/javascript\">-->\n<!--  var wsUri = \"wss://{{req.headers.host}}/ws/chat\";-->\n<!--  var ws = new WebSocket(wsUri);-->\n\n<!--  function createSystemMessage(message) {-->\n<!--    var message = document.createTextNode(message);-->\n\n<!--    var messageBox = document.createElement('p');-->\n<!--    messageBox.className = 'system';-->\n\n<!--    messageBox.appendChild(message);-->\n\n<!--    var chat = document.getElementById('chat_box');-->\n<!--    chat.appendChild(messageBox);-->\n<!--  }-->\n\n<!--  function createUserMessage(user, message) {-->\n<!--    var user = document.createTextNode(user + ': ');-->\n\n<!--    var userBox = document.createElement('span');-->\n<!--    userBox.className = 'username';-->\n<!--    userBox.appendChild(user);-->\n\n<!--    var message = document.createTextNode(message);-->\n\n<!--    var messageBox = document.createElement('p');-->\n<!--    messageBox.appendChild(userBox);-->\n<!--    messageBox.appendChild(message);-->\n\n<!--    var chat = document.getElementById('chat_box');-->\n<!--    chat.appendChild(messageBox);-->\n<!--  }-->\n\n<!--  ws.onopen = function(ev) {-->\n<!--    createSystemMessage('[Connected]');-->\n<!--  };-->\n\n<!--  ws.onclose = function(ev) {-->\n<!--    createSystemMessage('[Disconnected]');-->\n<!--  }-->\n\n<!--  ws.onmessage = function(ev) {-->\n<!--    var payload = JSON.parse(ev.data);-->\n<!--    createUserMessage(payload.user, payload.message);-->\n\n<!--    var chat = document.getElementById('chat_box');-->\n<!--    chat.scrollTop = chat.scrollHeight;-->\n<!--  }-->\n\n<!--  function sendMessage() {-->\n<!--    var user = document.getElementById('user');-->\n<!--    var user = document.getElementById('userId');-->\n<!--    var message = document.getElementById('message');-->\n\n<!--    var payload = {-->\n<!--      message: message.value,-->\n<!--      user: user.value,-->\n<!--      userId : userId.value,-->\n<!--      ts: (new Date()).getTime()-->\n<!--    };-->\n\n<!--    ws.send(JSON.stringify(payload));-->\n<!--    message.value = \"\";-->\n<!--  };-->\n<!--</script>-->\n\n<!--<style type=\"text/css\">-->\n<!--  * {-->\n<!--    font-family: \"Palatino Linotype\", \"Book Antiqua\", Palatino, serif;-->\n<!--    font-style: italic;-->\n<!--    font-size: 24px;-->\n<!--  }-->\n\n<!--  html, body, #wrapper {-->\n<!--    margin: 0;-->\n<!--    padding: 0;-->\n<!--    height: 100%;-->\n<!--  }-->\n\n<!--  #wrapper {-->\n<!--    background-color: #ecf0f1;-->\n<!--  }-->\n\n<!--  #chat_box {-->\n<!--    box-sizing: border-box;-->\n<!--    height: 100%;-->\n<!--    overflow: auto;-->\n<!--    padding-bottom: 50px;-->\n<!--  }-->\n\n<!--  #footer {-->\n<!--    box-sizing: border-box;-->\n<!--    position: fixed;-->\n<!--    bottom: 0;-->\n<!--    height: 50px;-->\n<!--    width: 100%;-->\n<!--    background-color: #2980b9;-->\n<!--  }-->\n\n<!--  #footer .content {-->\n<!--    padding-top: 4px;-->\n<!--    position: relative;-->\n<!--  }-->\n\n<!--  #user { width: 20%; }-->\n<!--  #userId { width: 20%; }-->\n<!--  #message { width: 48%; }-->\n<!--  #send_btn {-->\n<!--    width: 10%;-->\n<!--    position: absolute;-->\n<!--    right: 0;-->\n<!--    bottom: 0;-->\n<!--    margin: 0;-->\n<!--  }-->\n\n<!--  .content {-->\n<!--    width: 70%;-->\n<!--    margin: 0 auto;-->\n<!--  }-->\n\n<!--  input[type=\"text\"],-->\n<!--  input[type=\"button\"] {-->\n<!--    border: 0;-->\n<!--    color: #fff;-->\n<!--  }-->\n\n<!--  input[type=\"text\"] {-->\n<!--    background-color: #146EA8;-->\n<!--    padding: 3px 10px;-->\n<!--  }-->\n\n<!--  input[type=\"button\"] {-->\n<!--    background-color: #f39c12;-->\n<!--    border-right: 2px solid #e67e22;-->\n<!--    border-bottom: 2px solid #e67e22;-->\n<!--    min-width: 70px;-->\n<!--    display: inline-block;-->\n<!--  }-->\n\n<!--  input[type=\"button\"]:hover {-->\n<!--    background-color: #e67e22;-->\n<!--    border-right: 2px solid #f39c12;-->\n<!--    border-bottom: 2px solid #f39c12;-->\n<!--    cursor: pointer;-->\n<!--  }-->\n\n<!--  .system,-->\n<!--  .username {-->\n<!--    color: #aaa;-->\n<!--    font-style: italic;-->\n<!--    font-family: monospace;-->\n<!--    font-size: 16px;-->\n<!--  }-->\n\n<!--  @media(max-width: 1000px) {-->\n<!--    .content { width: 90%; }-->\n<!--  }-->\n\n<!--  @media(max-width: 780px) {-->\n<!--    #footer { height: 91px; }-->\n<!--    #chat_box { padding-bottom: 91px; }-->\n\n<!--    #user { width: 100%; }-->\n<!--    #message { width: 80%; }-->\n<!--  }-->\n\n<!--  @media(max-width: 400px) {-->\n<!--    #footer { height: 135px; }-->\n<!--    #chat_box { padding-bottom: 135px; }-->\n\n<!--    #message { width: 100%; }-->\n<!--    #send_btn {-->\n<!--      position: relative;-->\n<!--      margin-top: 3px;-->\n<!--      width: 100%;-->\n<!--    }-->\n<!--  }-->\n<!--</style>-->\n\n\n<head>\n  <meta name=\"viewport\" content=\"width=320, initial-scale=1\">\n  <title>Chat</title>\n</head>\n<body>\n  <div id=\"wrapper\">\n    <div id=\"chat_box\" class=\"content\"></div>\n    <div id=\"footer\">\n      <div class=\"content\">\n        <input type=\"text\" id=\"user\" placeholder=\"Who are you? (userId)\" />\n        <input type=\"text\" id=\"channelId\" placeholder=\"Where do you want to send your message? (Channel Id\") />\n        <input type=\"text\" id=\"message\" placeholder=\"What do you want to say?\" />\n        <input type=\"button\" id=\"send_btn\" value=\"Send\" onclick=\"sendMessage()\">\n      </div>\n    </div>\n  </div>\n</body>\n<script type=\"text/javascript\">\n//   var wsUri = \"wss://{{req.headers.host}}/ws/chat\";\nvar wsUri = \"wss://services-development.revotio.com/ws/chat\";\n  var ws = new WebSocket(wsUri);\n  function createSystemMessage(message) {\n    var message = document.createTextNode(message);\n    var messageBox = document.createElement('p');\n    messageBox.className = 'system';\n    messageBox.appendChild(message);\n    var chat = document.getElementById('chat_box');\n    chat.appendChild(messageBox);\n  }\n  function createUserMessage(user, message) {\n    var user = document.createTextNode(user.displayName + ': ');\n    var userBox = document.createElement('span');\n    userBox.className = 'username';\n    userBox.appendChild(user);\n    var message = document.createTextNode(message);\n    var messageBox = document.createElement('p');\n    messageBox.appendChild(userBox);\n    messageBox.appendChild(message);\n    var chat = document.getElementById('chat_box');\n    chat.appendChild(messageBox);\n  }\n  ws.onopen = function(ev) {\n    createSystemMessage('[Connected]');\n  };\n  ws.onclose = function(ev) {\n    createSystemMessage('[Disconnected]');\n  }\n  ws.onmessage = function(ev) {\n    var payload = JSON.parse(ev.data);\n    createUserMessage(payload.userData, payload.message);\n    var chat = document.getElementById('chat_box');\n    chat.scrollTop = chat.scrollHeight;\n  }\n  function sendMessage() {\n    var user = document.getElementById('user');\n    var channelId = document.getElementById('channelId');\n    var message = document.getElementById('message');\n    var ts = (new Date()).getTime()\n    var sentData = new Date().toISOString()\n      //add the comment checker\n      let messageType = 'main'\n      var msgData = {\n        channelId: channelId.value,\n        messageId: \"L2\"+ ts,\n        message: message.value,\n        messageType: messageType,\n        status: 'sent',\n        dateSent: sentData,\n        dateReceived: \"\",\n        dateSeen: \"\",\n        userData: {\n          userId: user.value,\n          displayName: user.value,\n          firstName: user.value + 'Firstname',\n          lastName: user.value + 'Lastname',\n          filePath: \"/files/users/5d1e011063b3ab18e6b0f50e/profile.png\"\n        },\n        attachments: []\n      }\n      console.log(msgData)\n    ws.send(JSON.stringify(msgData));\n    message.value = \"\";\n  };\n</script>\n<style type=\"text/css\">\n  * {\n    font-family: \"Palatino Linotype\", \"Book Antiqua\", Palatino, serif;\n    font-style: italic;\n    font-size: 24px;\n  }\n  html, body, #wrapper {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n  #wrapper {\n    background-color: #ecf0f1;\n  }\n  #chat_box {\n    box-sizing: border-box;\n    height: 100%;\n    overflow: auto;\n    padding-bottom: 50px;\n  }\n  #footer {\n    box-sizing: border-box;\n    position: fixed;\n    bottom: 0;\n    height: 77px;\n    width: 100%;\n    background-color: #2980b9;\n  }\n  #footer .content {\n    padding-top: 4px;\n    position: relative;\n  }\n  #user { width: 20%; }\n  #message { width: 68%; }\n  #send_btn {\n    width: 10%;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    margin: 0;\n  }\n  .content {\n    width: 70%;\n    margin: 0 auto;\n  }\n  input[type=\"text\"],\n  input[type=\"button\"] {\n    border: 0;\n    color: #fff;\n  }\n  input[type=\"text\"] {\n    background-color: #146EA8;\n    padding: 3px 10px;\n    margin-bottom: 4px\n  }\n  input[type=\"button\"] {\n    background-color: #f39c12;\n    border-right: 2px solid #e67e22;\n    border-bottom: 2px solid #e67e22;\n    min-width: 78px;\n    display: inline-block;\n  }\n  input[type=\"button\"]:hover {\n    background-color: #e67e22;\n    border-right: 2px solid #f39c12;\n    border-bottom: 2px solid #f39c12;\n    cursor: pointer;\n  }\n  .system,\n  .username {\n    color: #aaa;\n    font-style: italic;\n    font-family: monospace;\n    font-size: 16px;\n  }\n  @media(max-width: 1000px) {\n    .content { width: 90%; }\n  }\n  @media(max-width: 780px) {\n    #footer { height: 91px; }\n    #chat_box { padding-bottom: 91px; }\n    #user { width: 100%; }\n    #message { width: 80%; }\n  }\n  @media(max-width: 400px) {\n    #footer { height: 135px; }\n    #chat_box { padding-bottom: 135px; }\n    #message { width: 100%; }\n    #send_btn {\n      position: relative;\n      margin-top: 3px;\n      width: 100%;\n    }\n  }\n</style>\n","x":566,"y":420,"wires":[["4728a010.eace78"]]},{"id":"4728a010.eace78","type":"http response","z":"e15a0fdb.64cc38","name":"","x":850,"y":420,"wires":[]},{"id":"9a88dff3.3164f8","type":"debug","z":"e15a0fdb.64cc38","name":"WS  chat","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":560,"y":260,"wires":[]},{"id":"7c555d25.e5519c","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":960,"y":200,"wires":[["9b5e48d1.cfafb"]]},{"id":"9b5e48d1.cfafb","type":"function","z":"51f1d48a.bfebf4","name":"Get employee data","func":"var mongodbTools = global.get('mongodbTools');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n// aggregate\nvar aggregateObj = {\n        query : { query : [{\n                    $match: { _id : new ObjectID(msg.id)\n                    }\n                  },\n                //   {\n                //     $lookup: {\n                //       \"from\": \"members\",\n                //       \"localField\": \"_id\",\n                //       \"foreignField\": \"employee_id\",\n                //       \"as\": \"Memberships\"\n                //     }\n                //   },\n                ],},\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'employee',\n        operation:'aggregate',\n        }\n        \n    mongodbTools.resolveAsync(aggregateObj, node, function(res){\n           msg.employeeData = res[0]\n            node.send(msg) \n    })  ","outputs":1,"noerr":0,"x":1150,"y":240,"wires":[["4f7b0a97.1dec0c"]]},{"id":"4f7b0a97.1dec0c","type":"http request","z":"51f1d48a.bfebf4","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"https://randomuser.me/api/","tls":"","proxy":"","authType":"basic","x":1310,"y":240,"wires":[["17bfa61f.4976d2"]]},{"id":"17bfa61f.4976d2","type":"json","z":"51f1d48a.bfebf4","name":"","property":"payload","action":"","pretty":false,"x":1430,"y":240,"wires":[["54816986.dc034"]]},{"id":"b8a3a387.e3363","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":260,"wires":[["5ea0a995.a8ec9"]]},{"id":"257ec779.ad62","type":"function","z":"51f1d48a.bfebf4","name":"Rename employees","func":"\nvar i;\nfor (i = 0; i < msg.update.length; i++) { \n    // msg.data = msg.result[i]\n    node.send({id:msg.update[i]})\n}\n// return msg;","outputs":1,"noerr":0,"x":960,"y":240,"wires":[["9b5e48d1.cfafb"]]},{"id":"cf4f68be.61f16","type":"function","z":"51f1d48a.bfebf4","name":"remove employees","func":"\nvar i;\nfor (i = 0; i < msg.delete.length; i++) { \n    // msg.data = \n    node.send({\n        payload: {employee_id:msg.delete[i]},\n        url : global.get(\"DomainProperties.url\")+\"removeEmployee\" \n    })\n}","outputs":1,"noerr":0,"x":950,"y":280,"wires":[["110789e5.83d7a6"]]},{"id":"3aecfa36.135d36","type":"debug","z":"51f1d48a.bfebf4","name":"delete","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1210,"y":280,"wires":[]},{"id":"a55e41c8.3ba768","type":"function","z":"51f1d48a.bfebf4","name":"Get Employee ","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n// distinct\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {organization_id: msg.organization_id}\n                              },\n                                 { \n                                        \"$group\" : { \n                                            \"_id\" : \"$_id\"\n                                        }\n                                    }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                     msg.payload = [] ; \n                    \n                    _.each(res, function(Item, Index ){\n                         msg.payload.push(new ObjectID(Item._id))\n                    })\n                    node.send(msg) \n            }) \n            ","outputs":1,"noerr":0,"x":580,"y":260,"wires":[["126d28ec.11a8e7"]]},{"id":"126d28ec.11a8e7","type":"function","z":"51f1d48a.bfebf4","name":"Get all employees","func":"\n                    msg.update =  msg.payload.slice(0, 50);\n                    msg.delete = msg.payload.slice(51, msg.payload.length);\n  \n  node.send(msg)","outputs":1,"noerr":0,"x":750,"y":260,"wires":[["257ec779.ad62","cf4f68be.61f16"]]},{"id":"54816986.dc034","type":"function","z":"51f1d48a.bfebf4","name":"Update employee Data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.employeeData.first_name = msg.payload.results[0].name.first;\nmsg.employeeData.last_name = msg.payload.results[0].name.last;\n\nmsg.employeeData.street_name = msg.payload.results[0].location.street;\n// msg.employeeData.house_number = msg.payload.results[0].name.last;\nmsg.employeeData.zip_code = msg.payload.results[0].name.postcode;\nmsg.employeeData.town = msg.payload.results[0].name.city;\n// msg.employeeData.office_room = msg.payload.results[0].name.last;\n\nmsg.employeeData.email = msg.payload.results[0].email;\nmsg.employeeData.phone_number = msg.payload.results[0].phone;\n\n// msg.url = msg.payload.results[0].picture.thumbnail\n_id = new ObjectID(msg.employeeData._id)\n\n\n\n\nif (msg.payload.results[0].gender === \"female\"){\n    path = \"/files/SystemFiles/icons/avatar/women/\"\n} else {\n    path = \"/files/SystemFiles/icons/avatar/men/\"\n}\n    files = fs.readdirSync(path)\n    index = Math.floor(Math.random() * files.length)\n\n   \n   \n\nmsg.employeeData.avatar = path + files[index]\n\ndelete msg.employeeData._id\nmsg.payload = [{_id:_id},\n        {\"$set\": msg.employeeData},\n        {upsert:true}];\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1], \n                            options : msg.payload[2], \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n\n\n","outputs":1,"noerr":0,"x":1590,"y":240,"wires":[[]]},{"id":"110789e5.83d7a6","type":"http request","z":"51f1d48a.bfebf4","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":1090,"y":280,"wires":[["3aecfa36.135d36"]]},{"id":"663e5da5.76c9ac","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":280,"y":520,"wires":[["6121d5f6.df9814"]]},{"id":"495c62bf.dbb2dc","type":"function","z":"51f1d48a.bfebf4","name":"Get all projects","func":"\n                    msg.update =  msg.payload.slice(0, 50);\n                    msg.delete = msg.payload.slice(51, msg.payload.length);\n  \n  node.send(msg)","outputs":1,"noerr":0,"x":780,"y":520,"wires":[["706d4412.74301c","fe8cadcb.f37748"]]},{"id":"706d4412.74301c","type":"function","z":"51f1d48a.bfebf4","name":"Rename projects","func":"\nvar i;\nfor (i = 0; i < msg.update.length; i++) { \n    // msg.data = msg.result[i]\n    node.send({id:msg.update[i]})\n}\n// return msg;","outputs":1,"noerr":0,"x":970,"y":500,"wires":[["34d90ac8.588e0e"]]},{"id":"34d90ac8.588e0e","type":"function","z":"51f1d48a.bfebf4","name":"update projects","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nfunction capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getRandomInt(min, max) {\n  \treturn Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateName(){\n\tvar name1 = [\"abandoned\",\"able\",\"absolute\",\"adorable\",\"adventurous\",\"academic\",\"acceptable\",\"acclaimed\",\"accomplished\",\"accurate\",\"aching\",\"acidic\",\"acrobatic\",\"active\",\"actual\",\"adept\",\"admirable\",\"admired\",\"adolescent\",\"adorable\",\"adored\",\"advanced\",\"afraid\",\"affectionate\",\"aged\",\"aggravating\",\"aggressive\",\"agile\",\"agitated\",\"agonizing\",\"agreeable\",\"ajar\",\"alarmed\",\"alarming\",\"alert\",\"alienated\",\"alive\",\"all\",\"altruistic\",\"amazing\",\"ambitious\",\"ample\",\"amused\",\"amusing\",\"anchored\",\"ancient\",\"angelic\",\"angry\",\"anguished\",\"animated\",\"annual\",\"another\",\"antique\",\"anxious\",\"any\",\"apprehensive\",\"appropriate\",\"apt\",\"arctic\",\"arid\",\"aromatic\",\"artistic\",\"ashamed\",\"assured\",\"astonishing\",\"athletic\",\"attached\",\"attentive\",\"attractive\",\"austere\",\"authentic\",\"authorized\",\"automatic\",\"avaricious\",\"average\",\"aware\",\"awesome\",\"awful\",\"awkward\",\"babyish\",\"bad\",\"back\",\"baggy\",\"bare\",\"barren\",\"basic\",\"beautiful\",\"belated\",\"beloved\",\"beneficial\",\"better\",\"best\",\"bewitched\",\"big\",\"big-hearted\",\"biodegradable\",\"bite-sized\",\"bitter\",\"black\",\"black-and-white\",\"bland\",\"blank\",\"blaring\",\"bleak\",\"blind\",\"blissful\",\"blond\",\"blue\",\"blushing\",\"bogus\",\"boiling\",\"bold\",\"bony\",\"boring\",\"bossy\",\"both\",\"bouncy\",\"bountiful\",\"bowed\",\"brave\",\"breakable\",\"brief\",\"bright\",\"brilliant\",\"brisk\",\"broken\",\"bronze\",\"brown\",\"bruised\",\"bubbly\",\"bulky\",\"bumpy\",\"buoyant\",\"burdensome\",\"burly\",\"bustling\",\"busy\",\"buttery\",\"buzzing\",\"calculating\",\"calm\",\"candid\",\"canine\",\"capital\",\"carefree\",\"careful\",\"careless\",\"caring\",\"cautious\",\"cavernous\",\"celebrated\",\"charming\",\"cheap\",\"cheerful\",\"cheery\",\"chief\",\"chilly\",\"chubby\",\"circular\",\"classic\",\"clean\",\"clear\",\"clear-cut\",\"clever\",\"close\",\"closed\",\"cloudy\",\"clueless\",\"clumsy\",\"cluttered\",\"coarse\",\"cold\",\"colorful\",\"colorless\",\"colossal\",\"comfortable\",\"common\",\"compassionate\",\"competent\",\"complete\",\"complex\",\"complicated\",\"composed\",\"concerned\",\"concrete\",\"confused\",\"conscious\",\"considerate\",\"constant\",\"content\",\"conventional\",\"cooked\",\"cool\",\"cooperative\",\"coordinated\",\"corny\",\"corrupt\",\"costly\",\"courageous\",\"courteous\",\"crafty\",\"crazy\",\"creamy\",\"creative\",\"creepy\",\"criminal\",\"crisp\",\"critical\",\"crooked\",\"crowded\",\"cruel\",\"crushing\",\"cuddly\",\"cultivated\",\"cultured\",\"cumbersome\",\"curly\",\"curvy\",\"cute\",\"cylindrical\",\"damaged\",\"damp\",\"dangerous\",\"dapper\",\"daring\",\"darling\",\"dark\",\"dazzling\",\"dead\",\"deadly\",\"deafening\",\"dear\",\"dearest\",\"decent\",\"decimal\",\"decisive\",\"deep\",\"defenseless\",\"defensive\",\"defiant\",\"deficient\",\"definite\",\"definitive\",\"delayed\",\"delectable\",\"delicious\",\"delightful\",\"delirious\",\"demanding\",\"dense\",\"dental\",\"dependable\",\"dependent\",\"descriptive\",\"deserted\",\"detailed\",\"determined\",\"devoted\",\"different\",\"difficult\",\"digital\",\"diligent\",\"dim\",\"dimpled\",\"dimwitted\",\"direct\",\"disastrous\",\"discrete\",\"disfigured\",\"disgusting\",\"disloyal\",\"dismal\",\"distant\",\"downright\",\"dreary\",\"dirty\",\"disguised\",\"dishonest\",\"dismal\",\"distant\",\"distinct\",\"distorted\",\"dizzy\",\"dopey\",\"doting\",\"double\",\"downright\",\"drab\",\"drafty\",\"dramatic\",\"dreary\",\"droopy\",\"dry\",\"dual\",\"dull\",\"dutiful\",\"each\",\"eager\",\"earnest\",\"early\",\"easy\",\"easy-going\",\"ecstatic\",\"edible\",\"educated\",\"elaborate\",\"elastic\",\"elated\",\"elderly\",\"electric\",\"elegant\",\"elementary\",\"elliptical\",\"embarrassed\",\"embellished\",\"eminent\",\"emotional\",\"empty\",\"enchanted\",\"enchanting\",\"energetic\",\"enlightened\",\"enormous\",\"enraged\",\"entire\",\"envious\",\"equal\",\"equatorial\",\"essential\",\"esteemed\",\"ethical\",\"euphoric\",\"even\",\"evergreen\",\"everlasting\",\"every\",\"evil\",\"exalted\",\"excellent\",\"exemplary\",\"exhausted\",\"excitable\",\"excited\",\"exciting\",\"exotic\",\"expensive\",\"experienced\",\"expert\",\"extraneous\",\"extroverted\",\"extra-large\",\"extra-small\",\"fabulous\",\"failing\",\"faint\",\"fair\",\"faithful\",\"fake\",\"false\",\"familiar\",\"famous\",\"fancy\",\"fantastic\",\"far\",\"faraway\",\"far-flung\",\"far-off\",\"fast\",\"fat\",\"fatal\",\"fatherly\",\"favorable\",\"favorite\",\"fearful\",\"fearless\",\"feisty\",\"feline\",\"female\",\"feminine\",\"few\",\"fickle\",\"filthy\",\"fine\",\"finished\",\"firm\",\"first\",\"firsthand\",\"fitting\",\"fixed\",\"flaky\",\"flamboyant\",\"flashy\",\"flat\",\"flawed\",\"flawless\",\"flickering\",\"flimsy\",\"flippant\",\"flowery\",\"fluffy\",\"fluid\",\"flustered\",\"focused\",\"fond\",\"foolhardy\",\"foolish\",\"forceful\",\"forked\",\"formal\",\"forsaken\",\"forthright\",\"fortunate\",\"fragrant\",\"frail\",\"frank\",\"frayed\",\"free\",\"French\",\"fresh\",\"frequent\",\"friendly\",\"frightened\",\"frightening\",\"frigid\",\"frilly\",\"frizzy\",\"frivolous\",\"front\",\"frosty\",\"frozen\",\"frugal\",\"fruitful\",\"full\",\"fumbling\",\"functional\",\"funny\",\"fussy\",\"fuzzy\",\"gargantuan\",\"gaseous\",\"general\",\"generous\",\"gentle\",\"genuine\",\"giant\",\"giddy\",\"gigantic\",\"gifted\",\"giving\",\"glamorous\",\"glaring\",\"glass\",\"gleaming\",\"gleeful\",\"glistening\",\"glittering\",\"gloomy\",\"glorious\",\"glossy\",\"glum\",\"golden\",\"good\",\"good-natured\",\"gorgeous\",\"graceful\",\"gracious\",\"grand\",\"grandiose\",\"granular\",\"grateful\",\"grave\",\"gray\",\"great\",\"greedy\",\"green\",\"gregarious\",\"grim\",\"grimy\",\"gripping\",\"grizzled\",\"gross\",\"grotesque\",\"grouchy\",\"grounded\",\"growing\",\"growling\",\"grown\",\"grubby\",\"gruesome\",\"grumpy\",\"guilty\",\"gullible\",\"gummy\",\"hairy\",\"half\",\"handmade\",\"handsome\",\"handy\",\"happy\",\"happy-go-lucky\",\"hard\",\"hard-to-find\",\"harmful\",\"harmless\",\"harmonious\",\"harsh\",\"hasty\",\"hateful\",\"haunting\",\"healthy\",\"heartfelt\",\"hearty\",\"heavenly\",\"heavy\",\"hefty\",\"helpful\",\"helpless\",\"hidden\",\"hideous\",\"high\",\"high-level\",\"hilarious\",\"hoarse\",\"hollow\",\"homely\",\"honest\",\"honorable\",\"honored\",\"hopeful\",\"horrible\",\"hospitable\",\"hot\",\"huge\",\"humble\",\"humiliating\",\"humming\",\"humongous\",\"hungry\",\"hurtful\",\"husky\",\"icky\",\"icy\",\"ideal\",\"idealistic\",\"identical\",\"idle\",\"idiotic\",\"idolized\",\"ignorant\",\"ill\",\"illegal\",\"ill-fated\",\"ill-informed\",\"illiterate\",\"illustrious\",\"imaginary\",\"imaginative\",\"immaculate\",\"immaterial\",\"immediate\",\"immense\",\"impassioned\",\"impeccable\",\"impartial\",\"imperfect\",\"imperturbable\",\"impish\",\"impolite\",\"important\",\"impossible\",\"impractical\",\"impressionable\",\"impressive\",\"improbable\",\"impure\",\"inborn\",\"incomparable\",\"incompatible\",\"incomplete\",\"inconsequential\",\"incredible\",\"indelible\",\"inexperienced\",\"indolent\",\"infamous\",\"infantile\",\"infatuated\",\"inferior\",\"infinite\",\"informal\",\"innocent\",\"insecure\",\"insidious\",\"insignificant\",\"insistent\",\"instructive\",\"insubstantial\",\"intelligent\",\"intent\",\"intentional\",\"interesting\",\"internal\",\"international\",\"intrepid\",\"ironclad\",\"irresponsible\",\"irritating\",\"itchy\",\"jaded\",\"jagged\",\"jam-packed\",\"jaunty\",\"jealous\",\"jittery\",\"joint\",\"jolly\",\"jovial\",\"joyful\",\"joyous\",\"jubilant\",\"judicious\",\"juicy\",\"jumbo\",\"junior\",\"jumpy\",\"juvenile\",\"kaleidoscopic\",\"keen\",\"key\",\"kind\",\"kindhearted\",\"kindly\",\"klutzy\",\"knobby\",\"knotty\",\"knowledgeable\",\"knowing\",\"known\",\"kooky\",\"kosher\",\"lame\",\"lanky\",\"large\",\"last\",\"lasting\",\"late\",\"lavish\",\"lawful\",\"lazy\",\"leading\",\"lean\",\"leafy\",\"left\",\"legal\",\"legitimate\",\"light\",\"lighthearted\",\"likable\",\"likely\",\"limited\",\"limp\",\"limping\",\"linear\",\"lined\",\"liquid\",\"little\",\"live\",\"lively\",\"livid\",\"loathsome\",\"lone\",\"lonely\",\"long\",\"long-term\",\"loose\",\"lopsided\",\"lost\",\"loud\",\"lovable\",\"lovely\",\"loving\",\"low\",\"loyal\",\"lucky\",\"lumbering\",\"luminous\",\"lumpy\",\"lustrous\",\"luxurious\",\"mad\",\"made-up\",\"magnificent\",\"majestic\",\"major\",\"male\",\"mammoth\",\"married\",\"marvelous\",\"masculine\",\"massive\",\"mature\",\"meager\",\"mealy\",\"mean\",\"measly\",\"meaty\",\"medical\",\"mediocre\",\"medium\",\"meek\",\"mellow\",\"melodic\",\"memorable\",\"menacing\",\"merry\",\"messy\",\"metallic\",\"mild\",\"milky\",\"mindless\",\"miniature\",\"minor\",\"minty\",\"miserable\",\"miserly\",\"misguided\",\"misty\",\"mixed\",\"modern\",\"modest\",\"moist\",\"monstrous\",\"monthly\",\"monumental\",\"moral\",\"mortified\",\"motherly\",\"motionless\",\"mountainous\",\"muddy\",\"muffled\",\"multicolored\",\"mundane\",\"murky\",\"mushy\",\"musty\",\"muted\",\"mysterious\",\"naive\",\"narrow\",\"nasty\",\"natural\",\"naughty\",\"nautical\",\"near\",\"neat\",\"necessary\",\"needy\",\"negative\",\"neglected\",\"negligible\",\"neighboring\",\"nervous\",\"new\",\"next\",\"nice\",\"nifty\",\"nimble\",\"nippy\",\"nocturnal\",\"noisy\",\"nonstop\",\"normal\",\"notable\",\"noted\",\"noteworthy\",\"novel\",\"noxious\",\"numb\",\"nutritious\",\"nutty\",\"obedient\",\"obese\",\"oblong\",\"oily\",\"oblong\",\"obvious\",\"occasional\",\"odd\",\"oddball\",\"offbeat\",\"offensive\",\"official\",\"old\",\"old-fashioned\",\"only\",\"open\",\"optimal\",\"optimistic\",\"opulent\",\"orange\",\"orderly\",\"organic\",\"ornate\",\"ornery\",\"ordinary\",\"original\",\"other\",\"our\",\"outlying\",\"outgoing\",\"outlandish\",\"outrageous\",\"outstanding\",\"oval\",\"overcooked\",\"overdue\",\"overjoyed\",\"overlooked\",\"palatable\",\"pale\",\"paltry\",\"parallel\",\"parched\",\"partial\",\"passionate\",\"past\",\"pastel\",\"peaceful\",\"peppery\",\"perfect\",\"perfumed\",\"periodic\",\"perky\",\"personal\",\"pertinent\",\"pesky\",\"pessimistic\",\"petty\",\"phony\",\"physical\",\"piercing\",\"pink\",\"pitiful\",\"plain\",\"plaintive\",\"plastic\",\"playful\",\"pleasant\",\"pleased\",\"pleasing\",\"plump\",\"plush\",\"polished\",\"polite\",\"political\",\"pointed\",\"pointless\",\"poised\",\"poor\",\"popular\",\"portly\",\"posh\",\"positive\",\"possible\",\"potable\",\"powerful\",\"powerless\",\"practical\",\"precious\",\"present\",\"prestigious\",\"pretty\",\"precious\",\"previous\",\"pricey\",\"prickly\",\"primary\",\"prime\",\"pristine\",\"private\",\"prize\",\"probable\",\"productive\",\"profitable\",\"profuse\",\"proper\",\"proud\",\"prudent\",\"punctual\",\"pungent\",\"puny\",\"pure\",\"purple\",\"pushy\",\"putrid\",\"puzzled\",\"puzzling\",\"quaint\",\"qualified\",\"quarrelsome\",\"quarterly\",\"queasy\",\"querulous\",\"questionable\",\"quick\",\"quick-witted\",\"quiet\",\"quintessential\",\"quirky\",\"quixotic\",\"quizzical\",\"radiant\",\"ragged\",\"rapid\",\"rare\",\"rash\",\"raw\",\"recent\",\"reckless\",\"rectangular\",\"ready\",\"real\",\"realistic\",\"reasonable\",\"red\",\"reflecting\",\"regal\",\"regular\",\"reliable\",\"relieved\",\"remarkable\",\"remorseful\",\"remote\",\"repentant\",\"required\",\"respectful\",\"responsible\",\"repulsive\",\"revolving\",\"rewarding\",\"rich\",\"rigid\",\"right\",\"ringed\",\"ripe\",\"roasted\",\"robust\",\"rosy\",\"rotating\",\"rotten\",\"rough\",\"round\",\"rowdy\",\"royal\",\"rubbery\",\"rundown\",\"ruddy\",\"rude\",\"runny\",\"rural\",\"rusty\",\"sad\",\"safe\",\"salty\",\"same\",\"sandy\",\"sane\",\"sarcastic\",\"sardonic\",\"satisfied\",\"scaly\",\"scarce\",\"scared\",\"scary\",\"scented\",\"scholarly\",\"scientific\",\"scornful\",\"scratchy\",\"scrawny\",\"second\",\"secondary\",\"second-hand\",\"secret\",\"self-assured\",\"self-reliant\",\"selfish\",\"sentimental\",\"separate\",\"serene\",\"serious\",\"serpentine\",\"several\",\"severe\",\"shabby\",\"shadowy\",\"shady\",\"shallow\",\"shameful\",\"shameless\",\"sharp\",\"shimmering\",\"shiny\",\"shocked\",\"shocking\",\"shoddy\",\"short\",\"short-term\",\"showy\",\"shrill\",\"shy\",\"sick\",\"silent\",\"silky\",\"silly\",\"silver\",\"similar\",\"simple\",\"simplistic\",\"sinful\",\"single\",\"sizzling\",\"skeletal\",\"skinny\",\"sleepy\",\"slight\",\"slim\",\"slimy\",\"slippery\",\"slow\",\"slushy\",\"small\",\"smart\",\"smoggy\",\"smooth\",\"smug\",\"snappy\",\"snarling\",\"sneaky\",\"sniveling\",\"snoopy\",\"sociable\",\"soft\",\"soggy\",\"solid\",\"somber\",\"some\",\"spherical\",\"sophisticated\",\"sore\",\"sorrowful\",\"soulful\",\"soupy\",\"sour\",\"Spanish\",\"sparkling\",\"sparse\",\"specific\",\"spectacular\",\"speedy\",\"spicy\",\"spiffy\",\"spirited\",\"spiteful\",\"splendid\",\"spotless\",\"spotted\",\"spry\",\"square\",\"squeaky\",\"squiggly\",\"stable\",\"staid\",\"stained\",\"stale\",\"standard\",\"starchy\",\"stark\",\"starry\",\"steep\",\"sticky\",\"stiff\",\"stimulating\",\"stingy\",\"stormy\",\"straight\",\"strange\",\"steel\",\"strict\",\"strident\",\"striking\",\"striped\",\"strong\",\"studious\",\"stunning\",\"stupendous\",\"stupid\",\"sturdy\",\"stylish\",\"subdued\",\"submissive\",\"substantial\",\"subtle\",\"suburban\",\"sudden\",\"sugary\",\"sunny\",\"super\",\"superb\",\"superficial\",\"superior\",\"supportive\",\"sure-footed\",\"surprised\",\"suspicious\",\"svelte\",\"sweaty\",\"sweet\",\"sweltering\",\"swift\",\"sympathetic\",\"tall\",\"talkative\",\"tame\",\"tan\",\"tangible\",\"tart\",\"tasty\",\"tattered\",\"taut\",\"tedious\",\"teeming\",\"tempting\",\"tender\",\"tense\",\"tepid\",\"terrible\",\"terrific\",\"testy\",\"thankful\",\"that\",\"these\",\"thick\",\"thin\",\"third\",\"thirsty\",\"this\",\"thorough\",\"thorny\",\"those\",\"thoughtful\",\"threadbare\",\"thrifty\",\"thunderous\",\"tidy\",\"tight\",\"timely\",\"tinted\",\"tiny\",\"tired\",\"torn\",\"total\",\"tough\",\"traumatic\",\"treasured\",\"tremendous\",\"tragic\",\"trained\",\"tremendous\",\"triangular\",\"tricky\",\"trifling\",\"trim\",\"trivial\",\"troubled\",\"true\",\"trusting\",\"trustworthy\",\"trusty\",\"truthful\",\"tubby\",\"turbulent\",\"twin\",\"ugly\",\"ultimate\",\"unacceptable\",\"unaware\",\"uncomfortable\",\"uncommon\",\"unconscious\",\"understated\",\"unequaled\",\"uneven\",\"unfinished\",\"unfit\",\"unfolded\",\"unfortunate\",\"unhappy\",\"unhealthy\",\"uniform\",\"unimportant\",\"unique\",\"united\",\"unkempt\",\"unknown\",\"unlawful\",\"unlined\",\"unlucky\",\"unnatural\",\"unpleasant\",\"unrealistic\",\"unripe\",\"unruly\",\"unselfish\",\"unsightly\",\"unsteady\",\"unsung\",\"untidy\",\"untimely\",\"untried\",\"untrue\",\"unused\",\"unusual\",\"unwelcome\",\"unwieldy\",\"unwilling\",\"unwitting\",\"unwritten\",\"upbeat\",\"upright\",\"upset\",\"urban\",\"usable\",\"used\",\"useful\",\"useless\",\"utilized\",\"utter\",\"vacant\",\"vague\",\"vain\",\"valid\",\"valuable\",\"vapid\",\"variable\",\"vast\",\"velvety\",\"venerated\",\"vengeful\",\"verifiable\",\"vibrant\",\"vicious\",\"victorious\",\"vigilant\",\"vigorous\",\"villainous\",\"violet\",\"violent\",\"virtual\",\"virtuous\",\"visible\",\"vital\",\"vivacious\",\"vivid\",\"voluminous\",\"wan\",\"warlike\",\"warm\",\"warmhearted\",\"warped\",\"wary\",\"wasteful\",\"watchful\",\"waterlogged\",\"watery\",\"wavy\",\"wealthy\",\"weak\",\"weary\",\"webbed\",\"wee\",\"weekly\",\"weepy\",\"weighty\",\"weird\",\"welcome\",\"well-documented\",\"well-groomed\",\"well-informed\",\"well-lit\",\"well-made\",\"well-off\",\"well-to-do\",\"well-worn\",\"wet\",\"which\",\"whimsical\",\"whirlwind\",\"whispered\",\"white\",\"whole\",\"whopping\",\"wicked\",\"wide\",\"wide-eyed\",\"wiggly\",\"wild\",\"willing\",\"wilted\",\"winding\",\"windy\",\"winged\",\"wiry\",\"wise\",\"witty\",\"wobbly\",\"woeful\",\"wonderful\",\"wooden\",\"woozy\",\"wordy\",\"worldly\",\"worn\",\"worried\",\"worrisome\",\"worse\",\"worst\",\"worthless\",\"worthwhile\",\"worthy\",\"wrathful\",\"wretched\",\"writhing\",\"wrong\",\"wry\",\"yawning\",\"yearly\",\"yellow\",\"yellowish\",\"young\",\"youthful\",\"yummy\",\"zany\",\"zealous\",\"zesty\",\"zigzag\",\"rocky\"];\n\n\tvar name2 = [\"people\",\"history\",\"way\",\"art\",\"world\",\"information\",\"map\",\"family\",\"government\",\"health\",\"system\",\"computer\",\"meat\",\"year\",\"thanks\",\"music\",\"person\",\"reading\",\"method\",\"data\",\"food\",\"understanding\",\"theory\",\"law\",\"bird\",\"literature\",\"problem\",\"software\",\"control\",\"knowledge\",\"power\",\"ability\",\"economics\",\"love\",\"internet\",\"television\",\"science\",\"library\",\"nature\",\"fact\",\"product\",\"idea\",\"temperature\",\"investment\",\"area\",\"society\",\"activity\",\"story\",\"industry\",\"media\",\"thing\",\"oven\",\"community\",\"definition\",\"safety\",\"quality\",\"development\",\"language\",\"management\",\"player\",\"variety\",\"video\",\"week\",\"security\",\"country\",\"exam\",\"movie\",\"organization\",\"equipment\",\"physics\",\"analysis\",\"policy\",\"series\",\"thought\",\"basis\",\"boyfriend\",\"direction\",\"strategy\",\"technology\",\"army\",\"camera\",\"freedom\",\"paper\",\"environment\",\"child\",\"instance\",\"month\",\"truth\",\"marketing\",\"university\",\"writing\",\"article\",\"department\",\"difference\",\"goal\",\"news\",\"audience\",\"fishing\",\"growth\",\"income\",\"marriage\",\"user\",\"combination\",\"failure\",\"meaning\",\"medicine\",\"philosophy\",\"teacher\",\"communication\",\"night\",\"chemistry\",\"disease\",\"disk\",\"energy\",\"nation\",\"road\",\"role\",\"soup\",\"advertising\",\"location\",\"success\",\"addition\",\"apartment\",\"education\",\"math\",\"moment\",\"painting\",\"politics\",\"attention\",\"decision\",\"event\",\"property\",\"shopping\",\"student\",\"wood\",\"competition\",\"distribution\",\"entertainment\",\"office\",\"population\",\"president\",\"unit\",\"category\",\"cigarette\",\"context\",\"introduction\",\"opportunity\",\"performance\",\"driver\",\"flight\",\"length\",\"magazine\",\"newspaper\",\"relationship\",\"teaching\",\"cell\",\"dealer\",\"debate\",\"finding\",\"lake\",\"member\",\"message\",\"phone\",\"scene\",\"appearance\",\"association\",\"concept\",\"customer\",\"death\",\"discussion\",\"housing\",\"inflation\",\"insurance\",\"mood\",\"woman\",\"advice\",\"blood\",\"effort\",\"expression\",\"importance\",\"opinion\",\"payment\",\"reality\",\"responsibility\",\"situation\",\"skill\",\"statement\",\"wealth\",\"application\",\"city\",\"county\",\"depth\",\"estate\",\"foundation\",\"grandmother\",\"heart\",\"perspective\",\"photo\",\"recipe\",\"studio\",\"topic\",\"collection\",\"depression\",\"imagination\",\"passion\",\"percentage\",\"resource\",\"setting\",\"ad\",\"agency\",\"college\",\"connection\",\"criticism\",\"debt\",\"description\",\"memory\",\"patience\",\"secretary\",\"solution\",\"administration\",\"aspect\",\"attitude\",\"director\",\"personality\",\"psychology\",\"recommendation\",\"response\",\"selection\",\"storage\",\"version\",\"alcohol\",\"argument\",\"complaint\",\"contract\",\"emphasis\",\"highway\",\"loss\",\"membership\",\"possession\",\"preparation\",\"steak\",\"union\",\"agreement\",\"cancer\",\"currency\",\"employment\",\"engineering\",\"entry\",\"interaction\",\"limit\",\"mixture\",\"preference\",\"region\",\"republic\",\"seat\",\"tradition\",\"virus\",\"actor\",\"classroom\",\"delivery\",\"device\",\"difficulty\",\"drama\",\"election\",\"engine\",\"football\",\"guidance\",\"hotel\",\"match\",\"owner\",\"priority\",\"protection\",\"suggestion\",\"tension\",\"variation\",\"anxiety\",\"atmosphere\",\"awareness\",\"bread\",\"climate\",\"comparison\",\"confusion\",\"construction\",\"elevator\",\"emotion\",\"employee\",\"employer\",\"guest\",\"height\",\"leadership\",\"mall\",\"manager\",\"operation\",\"recording\",\"respect\",\"sample\",\"transportation\",\"boring\",\"charity\",\"cousin\",\"disaster\",\"editor\",\"efficiency\",\"excitement\",\"extent\",\"feedback\",\"guitar\",\"homework\",\"leader\",\"mom\",\"outcome\",\"permission\",\"presentation\",\"promotion\",\"reflection\",\"refrigerator\",\"resolution\",\"revenue\",\"session\",\"singer\",\"tennis\",\"basket\",\"bonus\",\"cabinet\",\"childhood\",\"church\",\"clothes\",\"coffee\",\"dinner\",\"drawing\",\"hair\",\"hearing\",\"initiative\",\"judgment\",\"lab\",\"measurement\",\"mode\",\"mud\",\"orange\",\"poetry\",\"police\",\"possibility\",\"procedure\",\"queen\",\"ratio\",\"relation\",\"restaurant\",\"satisfaction\",\"sector\",\"signature\",\"significance\",\"song\",\"tooth\",\"town\",\"vehicle\",\"volume\",\"wife\",\"accident\",\"airport\",\"appointment\",\"arrival\",\"assumption\",\"baseball\",\"chapter\",\"committee\",\"conversation\",\"database\",\"enthusiasm\",\"error\",\"explanation\",\"farmer\",\"gate\",\"girl\",\"hall\",\"historian\",\"hospital\",\"injury\",\"instruction\",\"maintenance\",\"manufacturer\",\"meal\",\"perception\",\"pie\",\"poem\",\"presence\",\"proposal\",\"reception\",\"replacement\",\"revolution\",\"river\",\"son\",\"speech\",\"tea\",\"village\",\"warning\",\"winner\",\"worker\",\"writer\",\"assistance\",\"breath\",\"buyer\",\"chest\",\"chocolate\",\"conclusion\",\"contribution\",\"cookie\",\"courage\",\"desk\",\"drawer\",\"establishment\",\"examination\",\"garbage\",\"grocery\",\"honey\",\"impression\",\"improvement\",\"independence\",\"insect\",\"inspection\",\"inspector\",\"king\",\"ladder\",\"menu\",\"penalty\",\"piano\",\"potato\",\"profession\",\"professor\",\"quantity\",\"reaction\",\"requirement\",\"salad\",\"sister\",\"supermarket\",\"tongue\",\"weakness\",\"wedding\",\"affair\",\"ambition\",\"analyst\",\"apple\",\"assignment\",\"assistant\",\"bathroom\",\"bedroom\",\"beer\",\"birthday\",\"celebration\",\"championship\",\"cheek\",\"client\",\"consequence\",\"departure\",\"diamond\",\"dirt\",\"ear\",\"fortune\",\"friendship\",\"funeral\",\"gene\",\"girlfriend\",\"hat\",\"indication\",\"intention\",\"lady\",\"midnight\",\"negotiation\",\"obligation\",\"passenger\",\"pizza\",\"platform\",\"poet\",\"pollution\",\"recognition\",\"reputation\",\"shirt\",\"speaker\",\"stranger\",\"surgery\",\"sympathy\",\"tale\",\"throat\",\"trainer\",\"uncle\",\"youth\",\"time\",\"work\",\"film\",\"water\",\"money\",\"example\",\"while\",\"business\",\"study\",\"game\",\"life\",\"form\",\"air\",\"day\",\"place\",\"number\",\"part\",\"field\",\"fish\",\"back\",\"process\",\"heat\",\"hand\",\"experience\",\"job\",\"book\",\"end\",\"point\",\"type\",\"home\",\"economy\",\"value\",\"body\",\"market\",\"guide\",\"interest\",\"state\",\"radio\",\"course\",\"company\",\"price\",\"size\",\"card\",\"list\",\"mind\",\"trade\",\"line\",\"care\",\"group\",\"risk\",\"word\",\"fat\",\"force\",\"key\",\"light\",\"training\",\"name\",\"school\",\"top\",\"amount\",\"level\",\"order\",\"practice\",\"research\",\"sense\",\"service\",\"piece\",\"web\",\"boss\",\"sport\",\"fun\",\"house\",\"page\",\"term\",\"test\",\"answer\",\"sound\",\"focus\",\"matter\",\"kind\",\"soil\",\"board\",\"oil\",\"picture\",\"access\",\"garden\",\"range\",\"rate\",\"reason\",\"future\",\"site\",\"demand\",\"exercise\",\"image\",\"case\",\"cause\",\"coast\",\"action\",\"age\",\"bad\",\"boat\",\"record\",\"result\",\"section\",\"building\",\"mouse\",\"cash\",\"class\",\"period\",\"plan\",\"store\",\"tax\",\"side\",\"subject\",\"space\",\"rule\",\"stock\",\"weather\",\"chance\",\"figure\",\"man\",\"model\",\"source\",\"beginning\",\"earth\",\"program\",\"chicken\",\"design\",\"feature\",\"head\",\"material\",\"purpose\",\"question\",\"rock\",\"salt\",\"act\",\"birth\",\"car\",\"dog\",\"object\",\"scale\",\"sun\",\"note\",\"profit\",\"rent\",\"speed\",\"style\",\"war\",\"bank\",\"craft\",\"half\",\"inside\",\"outside\",\"standard\",\"bus\",\"exchange\",\"eye\",\"fire\",\"position\",\"pressure\",\"stress\",\"advantage\",\"benefit\",\"box\",\"frame\",\"issue\",\"step\",\"cycle\",\"face\",\"item\",\"metal\",\"paint\",\"review\",\"room\",\"screen\",\"structure\",\"view\",\"account\",\"ball\",\"discipline\",\"medium\",\"share\",\"balance\",\"bit\",\"black\",\"bottom\",\"choice\",\"gift\",\"impact\",\"machine\",\"shape\",\"tool\",\"wind\",\"address\",\"average\",\"career\",\"culture\",\"morning\",\"pot\",\"sign\",\"table\",\"task\",\"condition\",\"contact\",\"credit\",\"egg\",\"hope\",\"ice\",\"network\",\"north\",\"square\",\"attempt\",\"date\",\"effect\",\"link\",\"post\",\"star\",\"voice\",\"capital\",\"challenge\",\"friend\",\"self\",\"shot\",\"brush\",\"couple\",\"exit\",\"front\",\"function\",\"lack\",\"living\",\"plant\",\"plastic\",\"spot\",\"summer\",\"taste\",\"theme\",\"track\",\"wing\",\"brain\",\"button\",\"click\",\"desire\",\"foot\",\"gas\",\"influence\",\"notice\",\"rain\",\"wall\",\"base\",\"damage\",\"distance\",\"feeling\",\"pair\",\"savings\",\"staff\",\"sugar\",\"target\",\"text\",\"animal\",\"author\",\"budget\",\"discount\",\"file\",\"ground\",\"lesson\",\"minute\",\"officer\",\"phase\",\"reference\",\"register\",\"sky\",\"stage\",\"stick\",\"title\",\"trouble\",\"bowl\",\"bridge\",\"campaign\",\"character\",\"club\",\"edge\",\"evidence\",\"fan\",\"letter\",\"lock\",\"maximum\",\"novel\",\"option\",\"pack\",\"park\",\"quarter\",\"skin\",\"sort\",\"weight\",\"baby\",\"background\",\"carry\",\"dish\",\"factor\",\"fruit\",\"glass\",\"joint\",\"master\",\"muscle\",\"red\",\"strength\",\"traffic\",\"trip\",\"vegetable\",\"appeal\",\"chart\",\"gear\",\"ideal\",\"kitchen\",\"land\",\"log\",\"mother\",\"net\",\"party\",\"principle\",\"relative\",\"sale\",\"season\",\"signal\",\"spirit\",\"street\",\"tree\",\"wave\",\"belt\",\"bench\",\"commission\",\"copy\",\"drop\",\"minimum\",\"path\",\"progress\",\"project\",\"sea\",\"south\",\"status\",\"stuff\",\"ticket\",\"tour\",\"angle\",\"blue\",\"breakfast\",\"confidence\",\"daughter\",\"degree\",\"doctor\",\"dot\",\"dream\",\"duty\",\"essay\",\"father\",\"fee\",\"finance\",\"hour\",\"juice\",\"luck\",\"milk\",\"mouth\",\"peace\",\"pipe\",\"stable\",\"storm\",\"substance\",\"team\",\"trick\",\"afternoon\",\"bat\",\"beach\",\"blank\",\"catch\",\"chain\",\"consideration\",\"cream\",\"crew\",\"detail\",\"gold\",\"interview\",\"kid\",\"mark\",\"mission\",\"pain\",\"pleasure\",\"score\",\"screw\",\"sex\",\"shop\",\"shower\",\"suit\",\"tone\",\"window\",\"agent\",\"band\",\"bath\",\"block\",\"bone\",\"calendar\",\"candidate\",\"cap\",\"coat\",\"contest\",\"corner\",\"court\",\"cup\",\"district\",\"door\",\"east\",\"finger\",\"garage\",\"guarantee\",\"hole\",\"hook\",\"implement\",\"layer\",\"lecture\",\"lie\",\"manner\",\"meeting\",\"nose\",\"parking\",\"partner\",\"profile\",\"rice\",\"routine\",\"schedule\",\"swimming\",\"telephone\",\"tip\",\"winter\",\"airline\",\"bag\",\"battle\",\"bed\",\"bill\",\"bother\",\"cake\",\"code\",\"curve\",\"designer\",\"dimension\",\"dress\",\"ease\",\"emergency\",\"evening\",\"extension\",\"farm\",\"fight\",\"gap\",\"grade\",\"holiday\",\"horror\",\"horse\",\"host\",\"husband\",\"loan\",\"mistake\",\"mountain\",\"nail\",\"noise\",\"occasion\",\"package\",\"patient\",\"pause\",\"phrase\",\"proof\",\"race\",\"relief\",\"sand\",\"sentence\",\"shoulder\",\"smoke\",\"stomach\",\"string\",\"tourist\",\"towel\",\"vacation\",\"west\",\"wheel\",\"wine\",\"arm\",\"aside\",\"associate\",\"bet\",\"blow\",\"border\",\"branch\",\"breast\",\"brother\",\"buddy\",\"bunch\",\"chip\",\"coach\",\"cross\",\"document\",\"draft\",\"dust\",\"expert\",\"floor\",\"god\",\"golf\",\"habit\",\"iron\",\"judge\",\"knife\",\"landscape\",\"league\",\"mail\",\"mess\",\"native\",\"opening\",\"parent\",\"pattern\",\"pin\",\"pool\",\"pound\",\"request\",\"salary\",\"shame\",\"shelter\",\"shoe\",\"silver\",\"tackle\",\"tank\",\"trust\",\"assist\",\"bake\",\"bar\",\"bell\",\"bike\",\"blame\",\"boy\",\"brick\",\"chair\",\"closet\",\"clue\",\"collar\",\"comment\",\"conference\",\"devil\",\"diet\",\"fear\",\"fuel\",\"glove\",\"jacket\",\"lunch\",\"monitor\",\"mortgage\",\"nurse\",\"pace\",\"panic\",\"peak\",\"plane\",\"reward\",\"row\",\"sandwich\",\"shock\",\"spite\",\"spray\",\"surprise\",\"till\",\"transition\",\"weekend\",\"welcome\",\"yard\",\"alarm\",\"bend\",\"bicycle\",\"bite\",\"blind\",\"bottle\",\"cable\",\"candle\",\"clerk\",\"cloud\",\"concert\",\"counter\",\"flower\",\"grandfather\",\"harm\",\"knee\",\"lawyer\",\"leather\",\"load\",\"mirror\",\"neck\",\"pension\",\"plate\",\"purple\",\"ruin\",\"ship\",\"skirt\",\"slice\",\"snow\",\"specialist\",\"stroke\",\"switch\",\"trash\",\"tune\",\"zone\",\"anger\",\"award\",\"bid\",\"bitter\",\"boot\",\"bug\",\"camp\",\"candy\",\"carpet\",\"cat\",\"champion\",\"channel\",\"clock\",\"comfort\",\"cow\",\"crack\",\"engineer\",\"entrance\",\"fault\",\"grass\",\"guy\",\"hell\",\"highlight\",\"incident\",\"island\",\"joke\",\"jury\",\"leg\",\"lip\",\"mate\",\"motor\",\"nerve\",\"passage\",\"pen\",\"pride\",\"priest\",\"prize\",\"promise\",\"resident\",\"resort\",\"ring\",\"roof\",\"rope\",\"sail\",\"scheme\",\"script\",\"sock\",\"station\",\"toe\",\"tower\",\"truck\",\"witness\",\"can\",\"will\",\"other\",\"use\",\"make\",\"good\",\"look\",\"help\",\"go\",\"great\",\"being\",\"still\",\"public\",\"read\",\"keep\",\"start\",\"give\",\"human\",\"local\",\"general\",\"specific\",\"long\",\"play\",\"feel\",\"high\",\"put\",\"common\",\"set\",\"change\",\"simple\",\"past\",\"big\",\"possible\",\"particular\",\"major\",\"personal\",\"current\",\"national\",\"cut\",\"natural\",\"physical\",\"show\",\"try\",\"check\",\"second\",\"call\",\"move\",\"pay\",\"let\",\"increase\",\"single\",\"individual\",\"turn\",\"ask\",\"buy\",\"guard\",\"hold\",\"main\",\"offer\",\"potential\",\"professional\",\"international\",\"travel\",\"cook\",\"alternative\",\"special\",\"working\",\"whole\",\"dance\",\"excuse\",\"cold\",\"commercial\",\"low\",\"purchase\",\"deal\",\"primary\",\"worth\",\"fall\",\"necessary\",\"positive\",\"produce\",\"search\",\"present\",\"spend\",\"talk\",\"creative\",\"tell\",\"cost\",\"drive\",\"green\",\"support\",\"glad\",\"remove\",\"return\",\"run\",\"complex\",\"due\",\"effective\",\"middle\",\"regular\",\"reserve\",\"independent\",\"leave\",\"original\",\"reach\",\"rest\",\"serve\",\"watch\",\"beautiful\",\"charge\",\"active\",\"break\",\"negative\",\"safe\",\"stay\",\"visit\",\"visual\",\"affect\",\"cover\",\"report\",\"rise\",\"walk\",\"white\",\"junior\",\"pick\",\"unique\",\"classic\",\"final\",\"lift\",\"mix\",\"private\",\"stop\",\"teach\",\"western\",\"concern\",\"familiar\",\"fly\",\"official\",\"broad\",\"comfortable\",\"gain\",\"rich\",\"save\",\"stand\",\"young\",\"heavy\",\"lead\",\"listen\",\"valuable\",\"worry\",\"handle\",\"leading\",\"meet\",\"release\",\"sell\",\"finish\",\"normal\",\"press\",\"ride\",\"secret\",\"spread\",\"spring\",\"tough\",\"wait\",\"brown\",\"deep\",\"display\",\"flow\",\"hit\",\"objective\",\"shoot\",\"touch\",\"cancel\",\"chemical\",\"cry\",\"dump\",\"extreme\",\"push\",\"conflict\",\"eat\",\"fill\",\"formal\",\"jump\",\"kick\",\"opposite\",\"pass\",\"pitch\",\"remote\",\"total\",\"treat\",\"vast\",\"abuse\",\"beat\",\"burn\",\"deposit\",\"print\",\"raise\",\"sleep\",\"somewhere\",\"advance\",\"consist\",\"dark\",\"double\",\"draw\",\"equal\",\"fix\",\"hire\",\"internal\",\"join\",\"kill\",\"sensitive\",\"tap\",\"win\",\"attack\",\"claim\",\"constant\",\"drag\",\"drink\",\"guess\",\"minor\",\"pull\",\"raw\",\"soft\",\"solid\",\"wear\",\"weird\",\"wonder\",\"annual\",\"count\",\"dead\",\"doubt\",\"feed\",\"forever\",\"impress\",\"repeat\",\"round\",\"sing\",\"slide\",\"strip\",\"wish\",\"combine\",\"command\",\"dig\",\"divide\",\"equivalent\",\"hang\",\"hunt\",\"initial\",\"march\",\"mention\",\"spiritual\",\"survey\",\"tie\",\"adult\",\"brief\",\"crazy\",\"escape\",\"gather\",\"hate\",\"prior\",\"repair\",\"rough\",\"sad\",\"scratch\",\"sick\",\"strike\",\"employ\",\"external\",\"hurt\",\"illegal\",\"laugh\",\"lay\",\"mobile\",\"nasty\",\"ordinary\",\"respond\",\"royal\",\"senior\",\"split\",\"strain\",\"struggle\",\"swim\",\"train\",\"upper\",\"wash\",\"yellow\",\"convert\",\"crash\",\"dependent\",\"fold\",\"funny\",\"grab\",\"hide\",\"miss\",\"permit\",\"quote\",\"recover\",\"resolve\",\"roll\",\"sink\",\"slip\",\"spare\",\"suspect\",\"sweet\",\"swing\",\"twist\",\"upstairs\",\"usual\",\"abroad\",\"brave\",\"calm\",\"concentrate\",\"estimate\",\"grand\",\"male\",\"mine\",\"prompt\",\"quiet\",\"refuse\",\"regret\",\"reveal\",\"rush\",\"shake\",\"shift\",\"shine\",\"steal\",\"suck\",\"surround\",\"bear\",\"brilliant\",\"dare\",\"dear\",\"delay\",\"drunk\",\"female\",\"hurry\",\"inevitable\",\"invite\",\"kiss\",\"neat\",\"pop\",\"punch\",\"quit\",\"reply\",\"representative\",\"resist\",\"rip\",\"rub\",\"silly\",\"smile\",\"spell\",\"stretch\",\"stupid\",\"tear\",\"temporary\",\"tomorrow\",\"wake\",\"wrap\",\"yesterday\",\"Thomas\",\"Tom\",\"Lieuwe\"];\n\n\tvar name = capFirst(name1[getRandomInt(0, name1.length + 1)]) + ' ' + capFirst(name2[getRandomInt(0, name2.length + 1)]);\n\treturn name;\n\n}\n\n// msg.name = generateName()\n\nmsg.payload = [{_id:new ObjectID(msg.id)},\n                {\"$set\": {name : generateName()}},\n                {upsert: true}\n                ]\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload [0], \n                            update : msg.payload [1], \n                            options : msg.payload [2], \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n\n\n","outputs":1,"noerr":0,"x":1140,"y":500,"wires":[["ff2298df.234ae8","c49a79b6.7062c"]]},{"id":"ff2298df.234ae8","type":"debug","z":"51f1d48a.bfebf4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1290,"y":460,"wires":[]},{"id":"c49a79b6.7062c","type":"function","z":"51f1d48a.bfebf4","name":"Update all Workpackages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nfunction capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getRandomInt(min, max) {\n  \treturn Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateName(){\n\tvar name1 = [\"abandoned\",\"able\",\"absolute\",\"adorable\",\"adventurous\",\"academic\",\"acceptable\",\"acclaimed\",\"accomplished\",\"accurate\",\"aching\",\"acidic\",\"acrobatic\",\"active\",\"actual\",\"adept\",\"admirable\",\"admired\",\"adolescent\",\"adorable\",\"adored\",\"advanced\",\"afraid\",\"affectionate\",\"aged\",\"aggravating\",\"aggressive\",\"agile\",\"agitated\",\"agonizing\",\"agreeable\",\"ajar\",\"alarmed\",\"alarming\",\"alert\",\"alienated\",\"alive\",\"all\",\"altruistic\",\"amazing\",\"ambitious\",\"ample\",\"amused\",\"amusing\",\"anchored\",\"ancient\",\"angelic\",\"angry\",\"anguished\",\"animated\",\"annual\",\"another\",\"antique\",\"anxious\",\"any\",\"apprehensive\",\"appropriate\",\"apt\",\"arctic\",\"arid\",\"aromatic\",\"artistic\",\"ashamed\",\"assured\",\"astonishing\",\"athletic\",\"attached\",\"attentive\",\"attractive\",\"austere\",\"authentic\",\"authorized\",\"automatic\",\"avaricious\",\"average\",\"aware\",\"awesome\",\"awful\",\"awkward\",\"babyish\",\"bad\",\"back\",\"baggy\",\"bare\",\"barren\",\"basic\",\"beautiful\",\"belated\",\"beloved\",\"beneficial\",\"better\",\"best\",\"bewitched\",\"big\",\"big-hearted\",\"biodegradable\",\"bite-sized\",\"bitter\",\"black\",\"black-and-white\",\"bland\",\"blank\",\"blaring\",\"bleak\",\"blind\",\"blissful\",\"blond\",\"blue\",\"blushing\",\"bogus\",\"boiling\",\"bold\",\"bony\",\"boring\",\"bossy\",\"both\",\"bouncy\",\"bountiful\",\"bowed\",\"brave\",\"breakable\",\"brief\",\"bright\",\"brilliant\",\"brisk\",\"broken\",\"bronze\",\"brown\",\"bruised\",\"bubbly\",\"bulky\",\"bumpy\",\"buoyant\",\"burdensome\",\"burly\",\"bustling\",\"busy\",\"buttery\",\"buzzing\",\"calculating\",\"calm\",\"candid\",\"canine\",\"capital\",\"carefree\",\"careful\",\"careless\",\"caring\",\"cautious\",\"cavernous\",\"celebrated\",\"charming\",\"cheap\",\"cheerful\",\"cheery\",\"chief\",\"chilly\",\"chubby\",\"circular\",\"classic\",\"clean\",\"clear\",\"clear-cut\",\"clever\",\"close\",\"closed\",\"cloudy\",\"clueless\",\"clumsy\",\"cluttered\",\"coarse\",\"cold\",\"colorful\",\"colorless\",\"colossal\",\"comfortable\",\"common\",\"compassionate\",\"competent\",\"complete\",\"complex\",\"complicated\",\"composed\",\"concerned\",\"concrete\",\"confused\",\"conscious\",\"considerate\",\"constant\",\"content\",\"conventional\",\"cooked\",\"cool\",\"cooperative\",\"coordinated\",\"corny\",\"corrupt\",\"costly\",\"courageous\",\"courteous\",\"crafty\",\"crazy\",\"creamy\",\"creative\",\"creepy\",\"criminal\",\"crisp\",\"critical\",\"crooked\",\"crowded\",\"cruel\",\"crushing\",\"cuddly\",\"cultivated\",\"cultured\",\"cumbersome\",\"curly\",\"curvy\",\"cute\",\"cylindrical\",\"damaged\",\"damp\",\"dangerous\",\"dapper\",\"daring\",\"darling\",\"dark\",\"dazzling\",\"dead\",\"deadly\",\"deafening\",\"dear\",\"dearest\",\"decent\",\"decimal\",\"decisive\",\"deep\",\"defenseless\",\"defensive\",\"defiant\",\"deficient\",\"definite\",\"definitive\",\"delayed\",\"delectable\",\"delicious\",\"delightful\",\"delirious\",\"demanding\",\"dense\",\"dental\",\"dependable\",\"dependent\",\"descriptive\",\"deserted\",\"detailed\",\"determined\",\"devoted\",\"different\",\"difficult\",\"digital\",\"diligent\",\"dim\",\"dimpled\",\"dimwitted\",\"direct\",\"disastrous\",\"discrete\",\"disfigured\",\"disgusting\",\"disloyal\",\"dismal\",\"distant\",\"downright\",\"dreary\",\"dirty\",\"disguised\",\"dishonest\",\"dismal\",\"distant\",\"distinct\",\"distorted\",\"dizzy\",\"dopey\",\"doting\",\"double\",\"downright\",\"drab\",\"drafty\",\"dramatic\",\"dreary\",\"droopy\",\"dry\",\"dual\",\"dull\",\"dutiful\",\"each\",\"eager\",\"earnest\",\"early\",\"easy\",\"easy-going\",\"ecstatic\",\"edible\",\"educated\",\"elaborate\",\"elastic\",\"elated\",\"elderly\",\"electric\",\"elegant\",\"elementary\",\"elliptical\",\"embarrassed\",\"embellished\",\"eminent\",\"emotional\",\"empty\",\"enchanted\",\"enchanting\",\"energetic\",\"enlightened\",\"enormous\",\"enraged\",\"entire\",\"envious\",\"equal\",\"equatorial\",\"essential\",\"esteemed\",\"ethical\",\"euphoric\",\"even\",\"evergreen\",\"everlasting\",\"every\",\"evil\",\"exalted\",\"excellent\",\"exemplary\",\"exhausted\",\"excitable\",\"excited\",\"exciting\",\"exotic\",\"expensive\",\"experienced\",\"expert\",\"extraneous\",\"extroverted\",\"extra-large\",\"extra-small\",\"fabulous\",\"failing\",\"faint\",\"fair\",\"faithful\",\"fake\",\"false\",\"familiar\",\"famous\",\"fancy\",\"fantastic\",\"far\",\"faraway\",\"far-flung\",\"far-off\",\"fast\",\"fat\",\"fatal\",\"fatherly\",\"favorable\",\"favorite\",\"fearful\",\"fearless\",\"feisty\",\"feline\",\"female\",\"feminine\",\"few\",\"fickle\",\"filthy\",\"fine\",\"finished\",\"firm\",\"first\",\"firsthand\",\"fitting\",\"fixed\",\"flaky\",\"flamboyant\",\"flashy\",\"flat\",\"flawed\",\"flawless\",\"flickering\",\"flimsy\",\"flippant\",\"flowery\",\"fluffy\",\"fluid\",\"flustered\",\"focused\",\"fond\",\"foolhardy\",\"foolish\",\"forceful\",\"forked\",\"formal\",\"forsaken\",\"forthright\",\"fortunate\",\"fragrant\",\"frail\",\"frank\",\"frayed\",\"free\",\"French\",\"fresh\",\"frequent\",\"friendly\",\"frightened\",\"frightening\",\"frigid\",\"frilly\",\"frizzy\",\"frivolous\",\"front\",\"frosty\",\"frozen\",\"frugal\",\"fruitful\",\"full\",\"fumbling\",\"functional\",\"funny\",\"fussy\",\"fuzzy\",\"gargantuan\",\"gaseous\",\"general\",\"generous\",\"gentle\",\"genuine\",\"giant\",\"giddy\",\"gigantic\",\"gifted\",\"giving\",\"glamorous\",\"glaring\",\"glass\",\"gleaming\",\"gleeful\",\"glistening\",\"glittering\",\"gloomy\",\"glorious\",\"glossy\",\"glum\",\"golden\",\"good\",\"good-natured\",\"gorgeous\",\"graceful\",\"gracious\",\"grand\",\"grandiose\",\"granular\",\"grateful\",\"grave\",\"gray\",\"great\",\"greedy\",\"green\",\"gregarious\",\"grim\",\"grimy\",\"gripping\",\"grizzled\",\"gross\",\"grotesque\",\"grouchy\",\"grounded\",\"growing\",\"growling\",\"grown\",\"grubby\",\"gruesome\",\"grumpy\",\"guilty\",\"gullible\",\"gummy\",\"hairy\",\"half\",\"handmade\",\"handsome\",\"handy\",\"happy\",\"happy-go-lucky\",\"hard\",\"hard-to-find\",\"harmful\",\"harmless\",\"harmonious\",\"harsh\",\"hasty\",\"hateful\",\"haunting\",\"healthy\",\"heartfelt\",\"hearty\",\"heavenly\",\"heavy\",\"hefty\",\"helpful\",\"helpless\",\"hidden\",\"hideous\",\"high\",\"high-level\",\"hilarious\",\"hoarse\",\"hollow\",\"homely\",\"honest\",\"honorable\",\"honored\",\"hopeful\",\"horrible\",\"hospitable\",\"hot\",\"huge\",\"humble\",\"humiliating\",\"humming\",\"humongous\",\"hungry\",\"hurtful\",\"husky\",\"icky\",\"icy\",\"ideal\",\"idealistic\",\"identical\",\"idle\",\"idiotic\",\"idolized\",\"ignorant\",\"ill\",\"illegal\",\"ill-fated\",\"ill-informed\",\"illiterate\",\"illustrious\",\"imaginary\",\"imaginative\",\"immaculate\",\"immaterial\",\"immediate\",\"immense\",\"impassioned\",\"impeccable\",\"impartial\",\"imperfect\",\"imperturbable\",\"impish\",\"impolite\",\"important\",\"impossible\",\"impractical\",\"impressionable\",\"impressive\",\"improbable\",\"impure\",\"inborn\",\"incomparable\",\"incompatible\",\"incomplete\",\"inconsequential\",\"incredible\",\"indelible\",\"inexperienced\",\"indolent\",\"infamous\",\"infantile\",\"infatuated\",\"inferior\",\"infinite\",\"informal\",\"innocent\",\"insecure\",\"insidious\",\"insignificant\",\"insistent\",\"instructive\",\"insubstantial\",\"intelligent\",\"intent\",\"intentional\",\"interesting\",\"internal\",\"international\",\"intrepid\",\"ironclad\",\"irresponsible\",\"irritating\",\"itchy\",\"jaded\",\"jagged\",\"jam-packed\",\"jaunty\",\"jealous\",\"jittery\",\"joint\",\"jolly\",\"jovial\",\"joyful\",\"joyous\",\"jubilant\",\"judicious\",\"juicy\",\"jumbo\",\"junior\",\"jumpy\",\"juvenile\",\"kaleidoscopic\",\"keen\",\"key\",\"kind\",\"kindhearted\",\"kindly\",\"klutzy\",\"knobby\",\"knotty\",\"knowledgeable\",\"knowing\",\"known\",\"kooky\",\"kosher\",\"lame\",\"lanky\",\"large\",\"last\",\"lasting\",\"late\",\"lavish\",\"lawful\",\"lazy\",\"leading\",\"lean\",\"leafy\",\"left\",\"legal\",\"legitimate\",\"light\",\"lighthearted\",\"likable\",\"likely\",\"limited\",\"limp\",\"limping\",\"linear\",\"lined\",\"liquid\",\"little\",\"live\",\"lively\",\"livid\",\"loathsome\",\"lone\",\"lonely\",\"long\",\"long-term\",\"loose\",\"lopsided\",\"lost\",\"loud\",\"lovable\",\"lovely\",\"loving\",\"low\",\"loyal\",\"lucky\",\"lumbering\",\"luminous\",\"lumpy\",\"lustrous\",\"luxurious\",\"mad\",\"made-up\",\"magnificent\",\"majestic\",\"major\",\"male\",\"mammoth\",\"married\",\"marvelous\",\"masculine\",\"massive\",\"mature\",\"meager\",\"mealy\",\"mean\",\"measly\",\"meaty\",\"medical\",\"mediocre\",\"medium\",\"meek\",\"mellow\",\"melodic\",\"memorable\",\"menacing\",\"merry\",\"messy\",\"metallic\",\"mild\",\"milky\",\"mindless\",\"miniature\",\"minor\",\"minty\",\"miserable\",\"miserly\",\"misguided\",\"misty\",\"mixed\",\"modern\",\"modest\",\"moist\",\"monstrous\",\"monthly\",\"monumental\",\"moral\",\"mortified\",\"motherly\",\"motionless\",\"mountainous\",\"muddy\",\"muffled\",\"multicolored\",\"mundane\",\"murky\",\"mushy\",\"musty\",\"muted\",\"mysterious\",\"naive\",\"narrow\",\"nasty\",\"natural\",\"naughty\",\"nautical\",\"near\",\"neat\",\"necessary\",\"needy\",\"negative\",\"neglected\",\"negligible\",\"neighboring\",\"nervous\",\"new\",\"next\",\"nice\",\"nifty\",\"nimble\",\"nippy\",\"nocturnal\",\"noisy\",\"nonstop\",\"normal\",\"notable\",\"noted\",\"noteworthy\",\"novel\",\"noxious\",\"numb\",\"nutritious\",\"nutty\",\"obedient\",\"obese\",\"oblong\",\"oily\",\"oblong\",\"obvious\",\"occasional\",\"odd\",\"oddball\",\"offbeat\",\"offensive\",\"official\",\"old\",\"old-fashioned\",\"only\",\"open\",\"optimal\",\"optimistic\",\"opulent\",\"orange\",\"orderly\",\"organic\",\"ornate\",\"ornery\",\"ordinary\",\"original\",\"other\",\"our\",\"outlying\",\"outgoing\",\"outlandish\",\"outrageous\",\"outstanding\",\"oval\",\"overcooked\",\"overdue\",\"overjoyed\",\"overlooked\",\"palatable\",\"pale\",\"paltry\",\"parallel\",\"parched\",\"partial\",\"passionate\",\"past\",\"pastel\",\"peaceful\",\"peppery\",\"perfect\",\"perfumed\",\"periodic\",\"perky\",\"personal\",\"pertinent\",\"pesky\",\"pessimistic\",\"petty\",\"phony\",\"physical\",\"piercing\",\"pink\",\"pitiful\",\"plain\",\"plaintive\",\"plastic\",\"playful\",\"pleasant\",\"pleased\",\"pleasing\",\"plump\",\"plush\",\"polished\",\"polite\",\"political\",\"pointed\",\"pointless\",\"poised\",\"poor\",\"popular\",\"portly\",\"posh\",\"positive\",\"possible\",\"potable\",\"powerful\",\"powerless\",\"practical\",\"precious\",\"present\",\"prestigious\",\"pretty\",\"precious\",\"previous\",\"pricey\",\"prickly\",\"primary\",\"prime\",\"pristine\",\"private\",\"prize\",\"probable\",\"productive\",\"profitable\",\"profuse\",\"proper\",\"proud\",\"prudent\",\"punctual\",\"pungent\",\"puny\",\"pure\",\"purple\",\"pushy\",\"putrid\",\"puzzled\",\"puzzling\",\"quaint\",\"qualified\",\"quarrelsome\",\"quarterly\",\"queasy\",\"querulous\",\"questionable\",\"quick\",\"quick-witted\",\"quiet\",\"quintessential\",\"quirky\",\"quixotic\",\"quizzical\",\"radiant\",\"ragged\",\"rapid\",\"rare\",\"rash\",\"raw\",\"recent\",\"reckless\",\"rectangular\",\"ready\",\"real\",\"realistic\",\"reasonable\",\"red\",\"reflecting\",\"regal\",\"regular\",\"reliable\",\"relieved\",\"remarkable\",\"remorseful\",\"remote\",\"repentant\",\"required\",\"respectful\",\"responsible\",\"repulsive\",\"revolving\",\"rewarding\",\"rich\",\"rigid\",\"right\",\"ringed\",\"ripe\",\"roasted\",\"robust\",\"rosy\",\"rotating\",\"rotten\",\"rough\",\"round\",\"rowdy\",\"royal\",\"rubbery\",\"rundown\",\"ruddy\",\"rude\",\"runny\",\"rural\",\"rusty\",\"sad\",\"safe\",\"salty\",\"same\",\"sandy\",\"sane\",\"sarcastic\",\"sardonic\",\"satisfied\",\"scaly\",\"scarce\",\"scared\",\"scary\",\"scented\",\"scholarly\",\"scientific\",\"scornful\",\"scratchy\",\"scrawny\",\"second\",\"secondary\",\"second-hand\",\"secret\",\"self-assured\",\"self-reliant\",\"selfish\",\"sentimental\",\"separate\",\"serene\",\"serious\",\"serpentine\",\"several\",\"severe\",\"shabby\",\"shadowy\",\"shady\",\"shallow\",\"shameful\",\"shameless\",\"sharp\",\"shimmering\",\"shiny\",\"shocked\",\"shocking\",\"shoddy\",\"short\",\"short-term\",\"showy\",\"shrill\",\"shy\",\"sick\",\"silent\",\"silky\",\"silly\",\"silver\",\"similar\",\"simple\",\"simplistic\",\"sinful\",\"single\",\"sizzling\",\"skeletal\",\"skinny\",\"sleepy\",\"slight\",\"slim\",\"slimy\",\"slippery\",\"slow\",\"slushy\",\"small\",\"smart\",\"smoggy\",\"smooth\",\"smug\",\"snappy\",\"snarling\",\"sneaky\",\"sniveling\",\"snoopy\",\"sociable\",\"soft\",\"soggy\",\"solid\",\"somber\",\"some\",\"spherical\",\"sophisticated\",\"sore\",\"sorrowful\",\"soulful\",\"soupy\",\"sour\",\"Spanish\",\"sparkling\",\"sparse\",\"specific\",\"spectacular\",\"speedy\",\"spicy\",\"spiffy\",\"spirited\",\"spiteful\",\"splendid\",\"spotless\",\"spotted\",\"spry\",\"square\",\"squeaky\",\"squiggly\",\"stable\",\"staid\",\"stained\",\"stale\",\"standard\",\"starchy\",\"stark\",\"starry\",\"steep\",\"sticky\",\"stiff\",\"stimulating\",\"stingy\",\"stormy\",\"straight\",\"strange\",\"steel\",\"strict\",\"strident\",\"striking\",\"striped\",\"strong\",\"studious\",\"stunning\",\"stupendous\",\"stupid\",\"sturdy\",\"stylish\",\"subdued\",\"submissive\",\"substantial\",\"subtle\",\"suburban\",\"sudden\",\"sugary\",\"sunny\",\"super\",\"superb\",\"superficial\",\"superior\",\"supportive\",\"sure-footed\",\"surprised\",\"suspicious\",\"svelte\",\"sweaty\",\"sweet\",\"sweltering\",\"swift\",\"sympathetic\",\"tall\",\"talkative\",\"tame\",\"tan\",\"tangible\",\"tart\",\"tasty\",\"tattered\",\"taut\",\"tedious\",\"teeming\",\"tempting\",\"tender\",\"tense\",\"tepid\",\"terrible\",\"terrific\",\"testy\",\"thankful\",\"that\",\"these\",\"thick\",\"thin\",\"third\",\"thirsty\",\"this\",\"thorough\",\"thorny\",\"those\",\"thoughtful\",\"threadbare\",\"thrifty\",\"thunderous\",\"tidy\",\"tight\",\"timely\",\"tinted\",\"tiny\",\"tired\",\"torn\",\"total\",\"tough\",\"traumatic\",\"treasured\",\"tremendous\",\"tragic\",\"trained\",\"tremendous\",\"triangular\",\"tricky\",\"trifling\",\"trim\",\"trivial\",\"troubled\",\"true\",\"trusting\",\"trustworthy\",\"trusty\",\"truthful\",\"tubby\",\"turbulent\",\"twin\",\"ugly\",\"ultimate\",\"unacceptable\",\"unaware\",\"uncomfortable\",\"uncommon\",\"unconscious\",\"understated\",\"unequaled\",\"uneven\",\"unfinished\",\"unfit\",\"unfolded\",\"unfortunate\",\"unhappy\",\"unhealthy\",\"uniform\",\"unimportant\",\"unique\",\"united\",\"unkempt\",\"unknown\",\"unlawful\",\"unlined\",\"unlucky\",\"unnatural\",\"unpleasant\",\"unrealistic\",\"unripe\",\"unruly\",\"unselfish\",\"unsightly\",\"unsteady\",\"unsung\",\"untidy\",\"untimely\",\"untried\",\"untrue\",\"unused\",\"unusual\",\"unwelcome\",\"unwieldy\",\"unwilling\",\"unwitting\",\"unwritten\",\"upbeat\",\"upright\",\"upset\",\"urban\",\"usable\",\"used\",\"useful\",\"useless\",\"utilized\",\"utter\",\"vacant\",\"vague\",\"vain\",\"valid\",\"valuable\",\"vapid\",\"variable\",\"vast\",\"velvety\",\"venerated\",\"vengeful\",\"verifiable\",\"vibrant\",\"vicious\",\"victorious\",\"vigilant\",\"vigorous\",\"villainous\",\"violet\",\"violent\",\"virtual\",\"virtuous\",\"visible\",\"vital\",\"vivacious\",\"vivid\",\"voluminous\",\"wan\",\"warlike\",\"warm\",\"warmhearted\",\"warped\",\"wary\",\"wasteful\",\"watchful\",\"waterlogged\",\"watery\",\"wavy\",\"wealthy\",\"weak\",\"weary\",\"webbed\",\"wee\",\"weekly\",\"weepy\",\"weighty\",\"weird\",\"welcome\",\"well-documented\",\"well-groomed\",\"well-informed\",\"well-lit\",\"well-made\",\"well-off\",\"well-to-do\",\"well-worn\",\"wet\",\"which\",\"whimsical\",\"whirlwind\",\"whispered\",\"white\",\"whole\",\"whopping\",\"wicked\",\"wide\",\"wide-eyed\",\"wiggly\",\"wild\",\"willing\",\"wilted\",\"winding\",\"windy\",\"winged\",\"wiry\",\"wise\",\"witty\",\"wobbly\",\"woeful\",\"wonderful\",\"wooden\",\"woozy\",\"wordy\",\"worldly\",\"worn\",\"worried\",\"worrisome\",\"worse\",\"worst\",\"worthless\",\"worthwhile\",\"worthy\",\"wrathful\",\"wretched\",\"writhing\",\"wrong\",\"wry\",\"yawning\",\"yearly\",\"yellow\",\"yellowish\",\"young\",\"youthful\",\"yummy\",\"zany\",\"zealous\",\"zesty\",\"zigzag\",\"rocky\"];\n\n\tvar name2 = [\"people\",\"history\",\"way\",\"art\",\"world\",\"information\",\"map\",\"family\",\"government\",\"health\",\"system\",\"computer\",\"meat\",\"year\",\"thanks\",\"music\",\"person\",\"reading\",\"method\",\"data\",\"food\",\"understanding\",\"theory\",\"law\",\"bird\",\"literature\",\"problem\",\"software\",\"control\",\"knowledge\",\"power\",\"ability\",\"economics\",\"love\",\"internet\",\"television\",\"science\",\"library\",\"nature\",\"fact\",\"product\",\"idea\",\"temperature\",\"investment\",\"area\",\"society\",\"activity\",\"story\",\"industry\",\"media\",\"thing\",\"oven\",\"community\",\"definition\",\"safety\",\"quality\",\"development\",\"language\",\"management\",\"player\",\"variety\",\"video\",\"week\",\"security\",\"country\",\"exam\",\"movie\",\"organization\",\"equipment\",\"physics\",\"analysis\",\"policy\",\"series\",\"thought\",\"basis\",\"boyfriend\",\"direction\",\"strategy\",\"technology\",\"army\",\"camera\",\"freedom\",\"paper\",\"environment\",\"child\",\"instance\",\"month\",\"truth\",\"marketing\",\"university\",\"writing\",\"article\",\"department\",\"difference\",\"goal\",\"news\",\"audience\",\"fishing\",\"growth\",\"income\",\"marriage\",\"user\",\"combination\",\"failure\",\"meaning\",\"medicine\",\"philosophy\",\"teacher\",\"communication\",\"night\",\"chemistry\",\"disease\",\"disk\",\"energy\",\"nation\",\"road\",\"role\",\"soup\",\"advertising\",\"location\",\"success\",\"addition\",\"apartment\",\"education\",\"math\",\"moment\",\"painting\",\"politics\",\"attention\",\"decision\",\"event\",\"property\",\"shopping\",\"student\",\"wood\",\"competition\",\"distribution\",\"entertainment\",\"office\",\"population\",\"president\",\"unit\",\"category\",\"cigarette\",\"context\",\"introduction\",\"opportunity\",\"performance\",\"driver\",\"flight\",\"length\",\"magazine\",\"newspaper\",\"relationship\",\"teaching\",\"cell\",\"dealer\",\"debate\",\"finding\",\"lake\",\"member\",\"message\",\"phone\",\"scene\",\"appearance\",\"association\",\"concept\",\"customer\",\"death\",\"discussion\",\"housing\",\"inflation\",\"insurance\",\"mood\",\"woman\",\"advice\",\"blood\",\"effort\",\"expression\",\"importance\",\"opinion\",\"payment\",\"reality\",\"responsibility\",\"situation\",\"skill\",\"statement\",\"wealth\",\"application\",\"city\",\"county\",\"depth\",\"estate\",\"foundation\",\"grandmother\",\"heart\",\"perspective\",\"photo\",\"recipe\",\"studio\",\"topic\",\"collection\",\"depression\",\"imagination\",\"passion\",\"percentage\",\"resource\",\"setting\",\"ad\",\"agency\",\"college\",\"connection\",\"criticism\",\"debt\",\"description\",\"memory\",\"patience\",\"secretary\",\"solution\",\"administration\",\"aspect\",\"attitude\",\"director\",\"personality\",\"psychology\",\"recommendation\",\"response\",\"selection\",\"storage\",\"version\",\"alcohol\",\"argument\",\"complaint\",\"contract\",\"emphasis\",\"highway\",\"loss\",\"membership\",\"possession\",\"preparation\",\"steak\",\"union\",\"agreement\",\"cancer\",\"currency\",\"employment\",\"engineering\",\"entry\",\"interaction\",\"limit\",\"mixture\",\"preference\",\"region\",\"republic\",\"seat\",\"tradition\",\"virus\",\"actor\",\"classroom\",\"delivery\",\"device\",\"difficulty\",\"drama\",\"election\",\"engine\",\"football\",\"guidance\",\"hotel\",\"match\",\"owner\",\"priority\",\"protection\",\"suggestion\",\"tension\",\"variation\",\"anxiety\",\"atmosphere\",\"awareness\",\"bread\",\"climate\",\"comparison\",\"confusion\",\"construction\",\"elevator\",\"emotion\",\"employee\",\"employer\",\"guest\",\"height\",\"leadership\",\"mall\",\"manager\",\"operation\",\"recording\",\"respect\",\"sample\",\"transportation\",\"boring\",\"charity\",\"cousin\",\"disaster\",\"editor\",\"efficiency\",\"excitement\",\"extent\",\"feedback\",\"guitar\",\"homework\",\"leader\",\"mom\",\"outcome\",\"permission\",\"presentation\",\"promotion\",\"reflection\",\"refrigerator\",\"resolution\",\"revenue\",\"session\",\"singer\",\"tennis\",\"basket\",\"bonus\",\"cabinet\",\"childhood\",\"church\",\"clothes\",\"coffee\",\"dinner\",\"drawing\",\"hair\",\"hearing\",\"initiative\",\"judgment\",\"lab\",\"measurement\",\"mode\",\"mud\",\"orange\",\"poetry\",\"police\",\"possibility\",\"procedure\",\"queen\",\"ratio\",\"relation\",\"restaurant\",\"satisfaction\",\"sector\",\"signature\",\"significance\",\"song\",\"tooth\",\"town\",\"vehicle\",\"volume\",\"wife\",\"accident\",\"airport\",\"appointment\",\"arrival\",\"assumption\",\"baseball\",\"chapter\",\"committee\",\"conversation\",\"database\",\"enthusiasm\",\"error\",\"explanation\",\"farmer\",\"gate\",\"girl\",\"hall\",\"historian\",\"hospital\",\"injury\",\"instruction\",\"maintenance\",\"manufacturer\",\"meal\",\"perception\",\"pie\",\"poem\",\"presence\",\"proposal\",\"reception\",\"replacement\",\"revolution\",\"river\",\"son\",\"speech\",\"tea\",\"village\",\"warning\",\"winner\",\"worker\",\"writer\",\"assistance\",\"breath\",\"buyer\",\"chest\",\"chocolate\",\"conclusion\",\"contribution\",\"cookie\",\"courage\",\"desk\",\"drawer\",\"establishment\",\"examination\",\"garbage\",\"grocery\",\"honey\",\"impression\",\"improvement\",\"independence\",\"insect\",\"inspection\",\"inspector\",\"king\",\"ladder\",\"menu\",\"penalty\",\"piano\",\"potato\",\"profession\",\"professor\",\"quantity\",\"reaction\",\"requirement\",\"salad\",\"sister\",\"supermarket\",\"tongue\",\"weakness\",\"wedding\",\"affair\",\"ambition\",\"analyst\",\"apple\",\"assignment\",\"assistant\",\"bathroom\",\"bedroom\",\"beer\",\"birthday\",\"celebration\",\"championship\",\"cheek\",\"client\",\"consequence\",\"departure\",\"diamond\",\"dirt\",\"ear\",\"fortune\",\"friendship\",\"funeral\",\"gene\",\"girlfriend\",\"hat\",\"indication\",\"intention\",\"lady\",\"midnight\",\"negotiation\",\"obligation\",\"passenger\",\"pizza\",\"platform\",\"poet\",\"pollution\",\"recognition\",\"reputation\",\"shirt\",\"speaker\",\"stranger\",\"surgery\",\"sympathy\",\"tale\",\"throat\",\"trainer\",\"uncle\",\"youth\",\"time\",\"work\",\"film\",\"water\",\"money\",\"example\",\"while\",\"business\",\"study\",\"game\",\"life\",\"form\",\"air\",\"day\",\"place\",\"number\",\"part\",\"field\",\"fish\",\"back\",\"process\",\"heat\",\"hand\",\"experience\",\"job\",\"book\",\"end\",\"point\",\"type\",\"home\",\"economy\",\"value\",\"body\",\"market\",\"guide\",\"interest\",\"state\",\"radio\",\"course\",\"company\",\"price\",\"size\",\"card\",\"list\",\"mind\",\"trade\",\"line\",\"care\",\"group\",\"risk\",\"word\",\"fat\",\"force\",\"key\",\"light\",\"training\",\"name\",\"school\",\"top\",\"amount\",\"level\",\"order\",\"practice\",\"research\",\"sense\",\"service\",\"piece\",\"web\",\"boss\",\"sport\",\"fun\",\"house\",\"page\",\"term\",\"test\",\"answer\",\"sound\",\"focus\",\"matter\",\"kind\",\"soil\",\"board\",\"oil\",\"picture\",\"access\",\"garden\",\"range\",\"rate\",\"reason\",\"future\",\"site\",\"demand\",\"exercise\",\"image\",\"case\",\"cause\",\"coast\",\"action\",\"age\",\"bad\",\"boat\",\"record\",\"result\",\"section\",\"building\",\"mouse\",\"cash\",\"class\",\"period\",\"plan\",\"store\",\"tax\",\"side\",\"subject\",\"space\",\"rule\",\"stock\",\"weather\",\"chance\",\"figure\",\"man\",\"model\",\"source\",\"beginning\",\"earth\",\"program\",\"chicken\",\"design\",\"feature\",\"head\",\"material\",\"purpose\",\"question\",\"rock\",\"salt\",\"act\",\"birth\",\"car\",\"dog\",\"object\",\"scale\",\"sun\",\"note\",\"profit\",\"rent\",\"speed\",\"style\",\"war\",\"bank\",\"craft\",\"half\",\"inside\",\"outside\",\"standard\",\"bus\",\"exchange\",\"eye\",\"fire\",\"position\",\"pressure\",\"stress\",\"advantage\",\"benefit\",\"box\",\"frame\",\"issue\",\"step\",\"cycle\",\"face\",\"item\",\"metal\",\"paint\",\"review\",\"room\",\"screen\",\"structure\",\"view\",\"account\",\"ball\",\"discipline\",\"medium\",\"share\",\"balance\",\"bit\",\"black\",\"bottom\",\"choice\",\"gift\",\"impact\",\"machine\",\"shape\",\"tool\",\"wind\",\"address\",\"average\",\"career\",\"culture\",\"morning\",\"pot\",\"sign\",\"table\",\"task\",\"condition\",\"contact\",\"credit\",\"egg\",\"hope\",\"ice\",\"network\",\"north\",\"square\",\"attempt\",\"date\",\"effect\",\"link\",\"post\",\"star\",\"voice\",\"capital\",\"challenge\",\"friend\",\"self\",\"shot\",\"brush\",\"couple\",\"exit\",\"front\",\"function\",\"lack\",\"living\",\"plant\",\"plastic\",\"spot\",\"summer\",\"taste\",\"theme\",\"track\",\"wing\",\"brain\",\"button\",\"click\",\"desire\",\"foot\",\"gas\",\"influence\",\"notice\",\"rain\",\"wall\",\"base\",\"damage\",\"distance\",\"feeling\",\"pair\",\"savings\",\"staff\",\"sugar\",\"target\",\"text\",\"animal\",\"author\",\"budget\",\"discount\",\"file\",\"ground\",\"lesson\",\"minute\",\"officer\",\"phase\",\"reference\",\"register\",\"sky\",\"stage\",\"stick\",\"title\",\"trouble\",\"bowl\",\"bridge\",\"campaign\",\"character\",\"club\",\"edge\",\"evidence\",\"fan\",\"letter\",\"lock\",\"maximum\",\"novel\",\"option\",\"pack\",\"park\",\"quarter\",\"skin\",\"sort\",\"weight\",\"baby\",\"background\",\"carry\",\"dish\",\"factor\",\"fruit\",\"glass\",\"joint\",\"master\",\"muscle\",\"red\",\"strength\",\"traffic\",\"trip\",\"vegetable\",\"appeal\",\"chart\",\"gear\",\"ideal\",\"kitchen\",\"land\",\"log\",\"mother\",\"net\",\"party\",\"principle\",\"relative\",\"sale\",\"season\",\"signal\",\"spirit\",\"street\",\"tree\",\"wave\",\"belt\",\"bench\",\"commission\",\"copy\",\"drop\",\"minimum\",\"path\",\"progress\",\"project\",\"sea\",\"south\",\"status\",\"stuff\",\"ticket\",\"tour\",\"angle\",\"blue\",\"breakfast\",\"confidence\",\"daughter\",\"degree\",\"doctor\",\"dot\",\"dream\",\"duty\",\"essay\",\"father\",\"fee\",\"finance\",\"hour\",\"juice\",\"luck\",\"milk\",\"mouth\",\"peace\",\"pipe\",\"stable\",\"storm\",\"substance\",\"team\",\"trick\",\"afternoon\",\"bat\",\"beach\",\"blank\",\"catch\",\"chain\",\"consideration\",\"cream\",\"crew\",\"detail\",\"gold\",\"interview\",\"kid\",\"mark\",\"mission\",\"pain\",\"pleasure\",\"score\",\"screw\",\"sex\",\"shop\",\"shower\",\"suit\",\"tone\",\"window\",\"agent\",\"band\",\"bath\",\"block\",\"bone\",\"calendar\",\"candidate\",\"cap\",\"coat\",\"contest\",\"corner\",\"court\",\"cup\",\"district\",\"door\",\"east\",\"finger\",\"garage\",\"guarantee\",\"hole\",\"hook\",\"implement\",\"layer\",\"lecture\",\"lie\",\"manner\",\"meeting\",\"nose\",\"parking\",\"partner\",\"profile\",\"rice\",\"routine\",\"schedule\",\"swimming\",\"telephone\",\"tip\",\"winter\",\"airline\",\"bag\",\"battle\",\"bed\",\"bill\",\"bother\",\"cake\",\"code\",\"curve\",\"designer\",\"dimension\",\"dress\",\"ease\",\"emergency\",\"evening\",\"extension\",\"farm\",\"fight\",\"gap\",\"grade\",\"holiday\",\"horror\",\"horse\",\"host\",\"husband\",\"loan\",\"mistake\",\"mountain\",\"nail\",\"noise\",\"occasion\",\"package\",\"patient\",\"pause\",\"phrase\",\"proof\",\"race\",\"relief\",\"sand\",\"sentence\",\"shoulder\",\"smoke\",\"stomach\",\"string\",\"tourist\",\"towel\",\"vacation\",\"west\",\"wheel\",\"wine\",\"arm\",\"aside\",\"associate\",\"bet\",\"blow\",\"border\",\"branch\",\"breast\",\"brother\",\"buddy\",\"bunch\",\"chip\",\"coach\",\"cross\",\"document\",\"draft\",\"dust\",\"expert\",\"floor\",\"god\",\"golf\",\"habit\",\"iron\",\"judge\",\"knife\",\"landscape\",\"league\",\"mail\",\"mess\",\"native\",\"opening\",\"parent\",\"pattern\",\"pin\",\"pool\",\"pound\",\"request\",\"salary\",\"shame\",\"shelter\",\"shoe\",\"silver\",\"tackle\",\"tank\",\"trust\",\"assist\",\"bake\",\"bar\",\"bell\",\"bike\",\"blame\",\"boy\",\"brick\",\"chair\",\"closet\",\"clue\",\"collar\",\"comment\",\"conference\",\"devil\",\"diet\",\"fear\",\"fuel\",\"glove\",\"jacket\",\"lunch\",\"monitor\",\"mortgage\",\"nurse\",\"pace\",\"panic\",\"peak\",\"plane\",\"reward\",\"row\",\"sandwich\",\"shock\",\"spite\",\"spray\",\"surprise\",\"till\",\"transition\",\"weekend\",\"welcome\",\"yard\",\"alarm\",\"bend\",\"bicycle\",\"bite\",\"blind\",\"bottle\",\"cable\",\"candle\",\"clerk\",\"cloud\",\"concert\",\"counter\",\"flower\",\"grandfather\",\"harm\",\"knee\",\"lawyer\",\"leather\",\"load\",\"mirror\",\"neck\",\"pension\",\"plate\",\"purple\",\"ruin\",\"ship\",\"skirt\",\"slice\",\"snow\",\"specialist\",\"stroke\",\"switch\",\"trash\",\"tune\",\"zone\",\"anger\",\"award\",\"bid\",\"bitter\",\"boot\",\"bug\",\"camp\",\"candy\",\"carpet\",\"cat\",\"champion\",\"channel\",\"clock\",\"comfort\",\"cow\",\"crack\",\"engineer\",\"entrance\",\"fault\",\"grass\",\"guy\",\"hell\",\"highlight\",\"incident\",\"island\",\"joke\",\"jury\",\"leg\",\"lip\",\"mate\",\"motor\",\"nerve\",\"passage\",\"pen\",\"pride\",\"priest\",\"prize\",\"promise\",\"resident\",\"resort\",\"ring\",\"roof\",\"rope\",\"sail\",\"scheme\",\"script\",\"sock\",\"station\",\"toe\",\"tower\",\"truck\",\"witness\",\"can\",\"will\",\"other\",\"use\",\"make\",\"good\",\"look\",\"help\",\"go\",\"great\",\"being\",\"still\",\"public\",\"read\",\"keep\",\"start\",\"give\",\"human\",\"local\",\"general\",\"specific\",\"long\",\"play\",\"feel\",\"high\",\"put\",\"common\",\"set\",\"change\",\"simple\",\"past\",\"big\",\"possible\",\"particular\",\"major\",\"personal\",\"current\",\"national\",\"cut\",\"natural\",\"physical\",\"show\",\"try\",\"check\",\"second\",\"call\",\"move\",\"pay\",\"let\",\"increase\",\"single\",\"individual\",\"turn\",\"ask\",\"buy\",\"guard\",\"hold\",\"main\",\"offer\",\"potential\",\"professional\",\"international\",\"travel\",\"cook\",\"alternative\",\"special\",\"working\",\"whole\",\"dance\",\"excuse\",\"cold\",\"commercial\",\"low\",\"purchase\",\"deal\",\"primary\",\"worth\",\"fall\",\"necessary\",\"positive\",\"produce\",\"search\",\"present\",\"spend\",\"talk\",\"creative\",\"tell\",\"cost\",\"drive\",\"green\",\"support\",\"glad\",\"remove\",\"return\",\"run\",\"complex\",\"due\",\"effective\",\"middle\",\"regular\",\"reserve\",\"independent\",\"leave\",\"original\",\"reach\",\"rest\",\"serve\",\"watch\",\"beautiful\",\"charge\",\"active\",\"break\",\"negative\",\"safe\",\"stay\",\"visit\",\"visual\",\"affect\",\"cover\",\"report\",\"rise\",\"walk\",\"white\",\"junior\",\"pick\",\"unique\",\"classic\",\"final\",\"lift\",\"mix\",\"private\",\"stop\",\"teach\",\"western\",\"concern\",\"familiar\",\"fly\",\"official\",\"broad\",\"comfortable\",\"gain\",\"rich\",\"save\",\"stand\",\"young\",\"heavy\",\"lead\",\"listen\",\"valuable\",\"worry\",\"handle\",\"leading\",\"meet\",\"release\",\"sell\",\"finish\",\"normal\",\"press\",\"ride\",\"secret\",\"spread\",\"spring\",\"tough\",\"wait\",\"brown\",\"deep\",\"display\",\"flow\",\"hit\",\"objective\",\"shoot\",\"touch\",\"cancel\",\"chemical\",\"cry\",\"dump\",\"extreme\",\"push\",\"conflict\",\"eat\",\"fill\",\"formal\",\"jump\",\"kick\",\"opposite\",\"pass\",\"pitch\",\"remote\",\"total\",\"treat\",\"vast\",\"abuse\",\"beat\",\"burn\",\"deposit\",\"print\",\"raise\",\"sleep\",\"somewhere\",\"advance\",\"consist\",\"dark\",\"double\",\"draw\",\"equal\",\"fix\",\"hire\",\"internal\",\"join\",\"kill\",\"sensitive\",\"tap\",\"win\",\"attack\",\"claim\",\"constant\",\"drag\",\"drink\",\"guess\",\"minor\",\"pull\",\"raw\",\"soft\",\"solid\",\"wear\",\"weird\",\"wonder\",\"annual\",\"count\",\"dead\",\"doubt\",\"feed\",\"forever\",\"impress\",\"repeat\",\"round\",\"sing\",\"slide\",\"strip\",\"wish\",\"combine\",\"command\",\"dig\",\"divide\",\"equivalent\",\"hang\",\"hunt\",\"initial\",\"march\",\"mention\",\"spiritual\",\"survey\",\"tie\",\"adult\",\"brief\",\"crazy\",\"escape\",\"gather\",\"hate\",\"prior\",\"repair\",\"rough\",\"sad\",\"scratch\",\"sick\",\"strike\",\"employ\",\"external\",\"hurt\",\"illegal\",\"laugh\",\"lay\",\"mobile\",\"nasty\",\"ordinary\",\"respond\",\"royal\",\"senior\",\"split\",\"strain\",\"struggle\",\"swim\",\"train\",\"upper\",\"wash\",\"yellow\",\"convert\",\"crash\",\"dependent\",\"fold\",\"funny\",\"grab\",\"hide\",\"miss\",\"permit\",\"quote\",\"recover\",\"resolve\",\"roll\",\"sink\",\"slip\",\"spare\",\"suspect\",\"sweet\",\"swing\",\"twist\",\"upstairs\",\"usual\",\"abroad\",\"brave\",\"calm\",\"concentrate\",\"estimate\",\"grand\",\"male\",\"mine\",\"prompt\",\"quiet\",\"refuse\",\"regret\",\"reveal\",\"rush\",\"shake\",\"shift\",\"shine\",\"steal\",\"suck\",\"surround\",\"bear\",\"brilliant\",\"dare\",\"dear\",\"delay\",\"drunk\",\"female\",\"hurry\",\"inevitable\",\"invite\",\"kiss\",\"neat\",\"pop\",\"punch\",\"quit\",\"reply\",\"representative\",\"resist\",\"rip\",\"rub\",\"silly\",\"smile\",\"spell\",\"stretch\",\"stupid\",\"tear\",\"temporary\",\"tomorrow\",\"wake\",\"wrap\",\"yesterday\",\"Thomas\",\"Tom\",\"Lieuwe\"];\n\n\tvar name = capFirst(name1[getRandomInt(0, name1.length + 1)]) + ' ' + capFirst(name2[getRandomInt(0, name2.length + 1)]);\n\treturn name;\n\n}\n\n                \n// find \n            findObj = {\n                    query : {\n                            query :{project_id : new ObjectID(msg.id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'work_packages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    \n                    _.each(res , function(WPItem, WPIndex){\n                        \n                        // update    \n\n                        updateObj = {\n                                        query : {\n                                                query :{ _id : new ObjectID(WPItem._id) }, \n                                                update : {work_package_name:  generateName()},\n                                                options : {upsert: true}\n                                                },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'work_packages',\n                                        operation:'update', // updateMany , updateOne\n                                        }\n                    \n                                mongodbTools.resolveAsync(updateObj, node, function(res){\n                                        \n                                           \n                                        })\n            })\n                    // msg.result = res\n                    // node.send(msg) \n            })   ","outputs":1,"noerr":0,"x":1330,"y":500,"wires":[[]]},{"id":"fe8cadcb.f37748","type":"function","z":"51f1d48a.bfebf4","name":"remove projects","func":"\nvar i;\nfor (i = 0; i < msg.delete.length; i++) { \n    // msg.data = \n    node.send({\n        payload: {project_id:msg.delete[i]},\n        url : global.get(\"DomainProperties.url\")+\"removeProject\" \n    })\n}","outputs":1,"noerr":0,"x":960,"y":540,"wires":[["da78bd0b.95b7a"]]},{"id":"6e96a5c9.7fd88c","type":"debug","z":"51f1d48a.bfebf4","name":"delete","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1230,"y":540,"wires":[]},{"id":"da78bd0b.95b7a","type":"http request","z":"51f1d48a.bfebf4","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":1110,"y":540,"wires":[["6e96a5c9.7fd88c"]]},{"id":"ca597086.b35f6","type":"function","z":"d8703926.e2eca","name":"INIT org overview flow","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(\"5d9b21fe2f5aa895d791985f\"),\n                                 \n                                }\n                              },\n                                { \n                                    \"$lookup\" : {\n                                        \"from\" : \"organizations\", \n                                        \"localField\" : \"_id\", \n                                        \"foreignField\" : \"parent_id\", \n                                        \"as\" : \"childOrganizations\"\n                                    }\n                                }, \n                                { \n                                    \"$lookup\" : {\n                                        \"from\" : \"organizations\", \n                                        \"localField\" : \"parent_id\", \n                                        \"foreignField\" : \"_id\", \n                                        \"as\" : \"masterOrganizations\"\n                                    }\n                                }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = res\n                    \n                    \n                    node.send(msg)\n                  })  \n","outputs":1,"noerr":0,"x":640,"y":80,"wires":[["148b695d.d56a1f"]]},{"id":"5ebca25f.80df2c","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":380,"y":80,"wires":[["ca597086.b35f6"]]},{"id":"148b695d.d56a1f","type":"debug","z":"d8703926.e2eca","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":890,"y":100,"wires":[]},{"id":"85d38adc.97a99","type":"function","z":"2294209a.0c95b","name":"Breadcrumb organizations","func":"\n    \n    \nmsg.payload = {\n    gadgetsList: [{\n                gadgetId: 'd9a375f6-bdc7-f288-e831-6db2f4a76270',\n                gadgetName: 'Generic breadcrumb',\n                gadgetType: 'revotio-breadcrumbs',\n                gadgetData: {\n                  data: msg.data,\n                  options: {\n                    separatorIcon: 'fas fa-angle-right', // if null it will display \">\" by default\n                    // separatorIconColor: 'pink'\n                  }\n                }\n              }]}\n\nreturn msg;","outputs":1,"noerr":0,"x":1720,"y":820,"wires":[["e5361ca5.ccabf"]]},{"id":"449e3134.053a68","type":"link in","z":"2294209a.0c95b","name":"users global = ACC Gagdet","links":["aea25a8a.fa4a58"],"x":1355,"y":800,"wires":[[]]},{"id":"e5361ca5.ccabf","type":"link out","z":"2294209a.0c95b","name":"","links":["5185c631.530a58","cb87250c.966108","112320ff.7cff6f","d230180f.f3d19","e7f2e3d2.30705","ebf87699.c97f08","98813d9e.bcf0d","90045e69.ebd138","dd373359.040c4","ecd0ecf2.99d41","93aa962f.3144d","e5823b9b.d200f","dda61270.476b9","f0eeb60f.091b78","359e3b04.860634","dc6abb7.ed83248","ff0e6248.29e22","1cff0ac1.dc8705","147f3fb7.690568","f42bf06.8974d1","ef55a0fd.6d311","552f5d9b.570784","498662dd.42a45c","81c0cf07.5ef198","44daecc2.e5b2f4","cb902343.5f03a","e34f6cc2.af5ad8","480dae32.8a339"],"x":1975,"y":800,"wires":[]},{"id":"66543a25.bd4a5c","type":"json","z":"e15a0fdb.64cc38","name":"","property":"payload","action":"","pretty":false,"x":570,"y":300,"wires":[["b5909b21.1383d8","9611d59a.4db808"]]},{"id":"9611d59a.4db808","type":"debug","z":"e15a0fdb.64cc38","name":"WS  chat - 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":930,"y":160,"wires":[]},{"id":"f91c9934.8b5258","type":"function","z":"e15a0fdb.64cc38","name":"Update  message && channel","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'messages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   // update    \n                   \n                   var payload = {\n                            channelId: msg.payload.channelId,\n                            lastPost: new Date(msg.payload.dateSent),\n                            lastPostBy: msg.payload.userData,\n                        }\n                        \n      \n    \n    \n                        updateObj = {\n                                        query : {\n                                                query :{channelId : payload.channelId },\n                                                update : { \"$set\" : payload},\n                                                options : {upsert: true}\n                                                },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'channels',\n                                        operation:'update', // updateMany , updateOne\n                                        }\n                    \n                                mongodbTools.resolveAsync(updateObj, node, function(res){\n                                        // msg.payload = res\n                                        node.send(msg) \n                                })  \n            })  \n","outputs":1,"noerr":0,"x":920,"y":340,"wires":[[]]},{"id":"f2011a99.f181f","type":"http in","z":"e15a0fdb.64cc38","name":"","url":"/chat","method":"post","upload":false,"swaggerDoc":"","x":410,"y":720,"wires":[["d1e3d678.20c99"]]},{"id":"ddff203a.6e88d","type":"http response","z":"e15a0fdb.64cc38","name":"","x":1170,"y":640,"wires":[]},{"id":"d1e3d678.20c99","type":"function","z":"e15a0fdb.64cc38","name":"Prepair chat save message","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\nmsg.operation = \"insert\"\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":720,"wires":[["744ee5da.72d984"]]},{"id":"fe9535a5.fe5be8","type":"http in","z":"e15a0fdb.64cc38","name":"","url":"/chat_messages","method":"get","upload":false,"swaggerDoc":"","x":360,"y":520,"wires":[["f2d4d1af.89c4d8","acf98f4.b55967"]]},{"id":"d877edb.1cb551","type":"http response","z":"e15a0fdb.64cc38","name":"","x":830,"y":520,"wires":[]},{"id":"f2d4d1af.89c4d8","type":"debug","z":"e15a0fdb.64cc38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":480,"wires":[]},{"id":"c0159764.48789","type":"http in","z":"e15a0fdb.64cc38","name":"","url":"/chat_channels","method":"get","upload":false,"swaggerDoc":"","x":350,"y":620,"wires":[["b3b49ab2.cb15e","7efe5a63.c782bc"]]},{"id":"d56f0f98.fbedb","type":"http response","z":"e15a0fdb.64cc38","name":"","x":770,"y":620,"wires":[]},{"id":"b3b49ab2.cb15e","type":"debug","z":"e15a0fdb.64cc38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":580,"wires":[]},{"id":"699f1645.987f48","type":"link in","z":"d8703926.e2eca","name":"","links":["467d0b4f.4e3ac4"],"x":1355,"y":4780,"wires":[["bdead56a.c833c"]]},{"id":"3eb8b197.0a27fe","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":1835,"y":4780,"wires":[]},{"id":"bdead56a.c833c","type":"function","z":"d8703926.e2eca","name":"Get messages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n findOneObj = {\n                    query : {\n                            query :{} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'messages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            }) \n            \n        ","outputs":1,"noerr":0,"x":1440,"y":4780,"wires":[["18ba6121.3b7a37"]]},{"id":"18ba6121.3b7a37","type":"function","z":"d8703926.e2eca","name":"Get all messages and INIT chat gadget","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\nvar channels = [] ;\nvar contacts = [] ;\nvar gadgetOptions = {\n      \"disable\" : false,\n      \"showChats\": true,\n      \"showContacts\": false,\n      \"joinNewChannel\": false\n    };\n    \nif (global.get(\"DomainProperties.prodUrl\").includes(\"development\") === false){\n    gadgetOptions.disable = true\n} else {\n    \n    if (msg.payload.length === 0){\n        msg.payload = [{\n                \"channelId\":123,\n              \"messageId\": \"mId\",\n              \"parentId\": \"\",\n              \"messageType\": \"main\",\n              \"status\": \"sent\",\n              \"dateSent\": \"2019-10-23T11:10:54.881Z\",\n              \"dateReceived\": \"\",\n              \"dateSeen\": \"\",\n              \"userData\": {\n                \"userId\": \"L2\",\n                \"displayName\": \"Leah\",\n                \"firstName\": \"Fuentes\",\n                \"lastName\": \"\",\n                \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n                \"userStatus\": \"online\"\n              },\n              \"message\": \"Hello\",\n              \"attachments\": [\n                {\n                  \"filePath\": \"\",\n                  \"name\": \"\",\n                  \"extension\": \"\",\n                  \"mimeType\": \"\"\n                }\n              ]\n            },]\n    }  \n    \n    groupedMsg = lodash.groupBy(msg.payload, \"channelId\")\n    channels = []\n    \n    _.each(groupedMsg, function (channelMsg, channelId){\n        channels.push({\n          \"channelId\":channelMsg[0].channelId,\n          \"name\": channelMsg[0].channelId,\n          \"inChannel\": \"true\",\n          \"channelTitle\": \"Chat 1\",\n          \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n          \"folderPath\": \"/users/5d1e011063b3ab18e6b0f50e/\",\n          \"options\": {\n            \"disabled\": false,\n            \"permission\": \"public\",\n            \n          },\n          \"messages\": lodash.orderBy(channelMsg, [\"dateSent\"], [\"asc\"])\n    })\n    \n    // channels =  [\n    //     {\n    //       \"channelId\": \"c2l\",\n    //       \"name\": \"Chat 1\",\n    //       \"inChannel\": \"true\",\n    //       \"channelTitle\": \"Chat 1\",\n    //       \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //       \"folderPath\": \"/users/5d1e011063b3ab18e6b0f50e/\",\n    //       \"options\": {\n    //         \"disabled\": false,\n    //         \"permission\": \"public\"\n    //       },\n    //       \"messages\": [\n    //         {\n    //           \"messageId\": \"mId\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-23T11:10:54.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"L2\",\n    //             \"displayName\": \"Leah\",\n    //             \"firstName\": \"Fuentes\",\n    //             \"lastName\": \"\",\n    //             \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello\",\n    //           \"attachments\": [\n    //             {\n    //               \"filePath\": \"\",\n    //               \"name\": \"\",\n    //               \"extension\": \"\",\n    //               \"mimeType\": \"\"\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           \"messageId\": \"mId1\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-29T11:10:55.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"5d1e011063b3ab18e6b0f50e\",\n    //             \"displayName\": \"Info Revotio\",\n    //             \"firstName\": \"Info\",\n    //             \"lastName\": \"Revotio\",\n    //             \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"currentUser\": false,\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello12\",\n    //           \"attachments\": [\n    //           ]\n    //         },\n    //         {\n    //           \"messageId\": \"mId3\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-29T11:10:56.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"5d1e011063b3ab18e6b0f50e\",\n    //             \"displayName\": \"Info Revotio\",\n    //             \"firstName\": \"Info\",\n    //             \"lastName\": \"Revotio\",\n    //             \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"currentUser\": false,\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello\",\n    //           \"attachments\": [\n    //           ]\n    //         }\n    //       ]\n    //     },\n    //     {\n    //       \"channelId\": \"c3l\",\n    //       \"name\": \"Chat 2\",\n    //       \"inChannel\": \"true\",\n    //       \"channelTitle\": \"Chat 2\",\n    //       \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //       \"folderPath\": \"/users/5d1e011063b3ab18e6b0f50e/\",\n    //       \"options\": {\n    //         \"disabled\": false,\n    //         \"permission\": \"public\"\n    //       },\n    //       \"messages\": [\n    //         {\n    //           \"messageId\": \"m3Id\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-23T11:10:54.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"L2\",\n    //             \"displayName\": \"Leah\",\n    //             \"firstName\": \"Fuentes\",\n    //             \"lastName\": \"\",\n    //             \"filePath\": \"/files/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello\",\n    //           \"attachments\": [\n    //           ]\n    //         },\n    //         {\n    //           \"messageId\": \"m3Id1\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-29T11:10:55.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"5d1e011063b3ab18e6b0f50e\",\n    //             \"displayName\": \"Info Revotio\",\n    //             \"firstName\": \"Info\",\n    //             \"lastName\": \"Revotio\",\n    //             \"filePath\": \"/files/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"currentUser\": false,\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello12\",\n    //           \"attachments\": [\n    //           ]\n    //         },\n    //         {\n    //           \"messageId\": \"m3Id3\",\n    //           \"parentId\": \"\",\n    //           \"messageType\": \"main\",\n    //           \"status\": \"sent\",\n    //           \"dateSent\": \"2019-10-29T11:10:56.881Z\",\n    //           \"dateReceived\": \"\",\n    //           \"dateSeen\": \"\",\n    //           \"userData\": {\n    //             \"userId\": \"5d1e011063b3ab18e6b0f50e\",\n    //             \"displayName\": \"Info Revotio\",\n    //             \"firstName\": \"Info\",\n    //             \"lastName\": \"Revotio\",\n    //             \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n    //             \"currentUser\": false,\n    //             \"userStatus\": \"online\"\n    //           },\n    //           \"message\": \"Hello\",\n    //           \"attachments\": [\n    //           ]\n    //         }\n    //       ]\n    //     }\n    //   ];\n    contacts =  [\n        {\n          \"name\": \"Leah Fuentes\",\n          \"channelId\": \"dummyid1010:5d1e011063b3ab18e6b0f50e\",\n          \"filePath\": \"/users/5d1e011063b3ab18e6b0f50e/profile.png\",\n          \"userId\": \"dummyid1010\"\n        }\n      ];\n})\n}\nmsg.payload = {\n    gadgetsList :[{\n    \"gadgetId\": \"0542ef48-c148-9502-8c5a-9818274c949d\",\n    \"gadgetName\": \"Time management chat\",\n    \"gadgetType\": \"revotio-chat\",\n    \"gadgetData\": {\n      \"currentUser\": {\n        \"userId\": msg.RevotioData.session.UserData._id,\n        \"displayName\":msg.RevotioData.session.UserData.first_name + \" \" + msg.RevotioData.session.UserData.last_name,\n        \"filePath\": global.get(\"DomainProperties.filesFolder\") + msg.RevotioData.session.UserData.avatar\n      },\n      \"channels\": channels,\n      \"contacts\": contacts\n     \n    },\n    \"gadgetOptions\":gadgetOptions ,\n    \"gadgetOptions\":gadgetOptions ,\n    \"gadgetId\": \"0542ef48-c148-9502-8c5a-9818274c949d\",\n    \"gadgetName\": \"Time management chat\",\n    \"gadgetType\": \"revotio-chat\",\n  }]}\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1670,"y":4780,"wires":[["3eb8b197.0a27fe"]]},{"id":"78e9ce03.4f11c","type":"function","z":"aec22158.fe4e38","name":"prepair redirect to NonAuthDefaultPage","func":"\nmsg.payload  = {\n    Page :global.get(\"DomainProperties.NonAuthDefaultPage\"),\n}\nreturn msg;","outputs":1,"noerr":0,"x":3200,"y":2140,"wires":[["df66ca95.228cd8"]]},{"id":"df66ca95.228cd8","type":"subflow:5e9b9c1d.bbe4a4","z":"aec22158.fe4e38","name":"","env":[],"x":3400,"y":2140,"wires":[]},{"id":"85b62822.f16cf8","type":"template","z":"aec22158.fe4e38","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!doctype html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>{{payload.title}}</title>\n<style>\n@media  only screen and (max-width: 620px) {\ntable[class=body] h1 {\nfont-size: 28px !important;\nmargin-bottom: 10px !important;\n}\ntable[class=body] p,\ntable[class=body] ul,\ntable[class=body] ol,\ntable[class=body] td,\ntable[class=body] span,\ntable[class=body] a {\nfont-size: 16px !important;\n}\ntable[class=body] .wrapper,\ntable[class=body] .article {\npadding: 10px !important;\n}\ntable[class=body] .content {\npadding: 0 !important;\n}\ntable[class=body] .container {\npadding: 0 !important;\nwidth: 100% !important;\n}\ntable[class=body] .main {\nborder-left-width: 0 !important;\nborder-radius: 0 !important;\nborder-right-width: 0 !important;\n}\ntable[class=body] .btn table {\nwidth: 100% !important;\n}\ntable[class=body] .btn a {\nwidth: 100% !important;\n}\ntable[class=body] .img-responsive {\nheight: auto !important;\nmax-width: 100% !important;\nwidth: auto !important;\n}\n}\n@media  all {\n.ExternalClass {\nwidth: 100%;\n}\n.ExternalClass,\n.ExternalClass p,\n.ExternalClass span,\n.ExternalClass font,\n.ExternalClass td,\n.ExternalClass div {\nline-height: 100%;\n}\n.btn-primary table td:hover {\nbackground-color: #34495e !important;\n}\n.btn-primary a:hover {\nbackground-color: #34495e !important;\nborder-color: #34495e !important;\n}\n.button {\n  text-decoration: none;\n  background-color: #20a7db;\n  color: #333333;\n  padding: 2px 6px 2px 6px;\n  border: none;\n  border-radius: 2px;\n}\n}\n</style>\n</head>\n<body class=\"\" style=\"background-color: #f6f6f6; font-family: sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; line-height: 1.4; margin: 0; padding: 0; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n<td class=\"container\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">\n<div class=\"content\" style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">\n\n<!-- START CENTERED WHITE CONTAINER -->\n<span class=\"preheader\" style=\"color: transparent; display: none; height: 0; max-height: 0; max-width: 0; opacity: 0; overflow: hidden; mso-hide: all; visibility: hidden; width: 0;\">{{payload.title}}</span>\n<table class=\"main\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;\">\n\n<!-- START MAIN CONTENT AREA -->\n<tr>\n<td class=\"wrapper\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 40px;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 40px;\">\n<a href={{payload.activation_link}} target=\"_blank\">\n<img style=\"display: block; margin: auto; width: 150px;\" width=\"150\" src=\"data:image/png;base64,{{payload.base64data}}\" alt=\"{{payload.title}}\">\n</a>\n</td>\n</tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">\n\n<p>Hi {{payload.firstname}} {{payload.lastname}},</p>\n<p>{{payload.message}}</p>\n<p>{{payload.activate_text}} <a class=\"button\" href=\"{{payload.activation_link}}\">{{payload.activate_click}}</a></p>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{payload.closing}}\n</p>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{payload.signature}}\n</p>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n\n<!-- END MAIN CONTENT AREA -->\n</table>\n\n<!-- START FOOTER -->\n<div class=\"footer\" style=\"clear: both; Margin-top: 10px; text-align: center; width: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td class=\"content-block\" style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;\">\n<span style=\"color: #999999; font-size: 12px; text-align: center;\">{{payload.footer_text}}</span>\n<br> Don't like these emails? <a href=\"{{payload.settings_link}}\" style=\"text-decoration: underline; color: #999999; font-size: 12px; text-align: center;\">{{payload.settings_text}}</a>.\n</td>\n</tr>\n\n</table>\n</div>\n<!-- END FOOTER -->\n\n<!-- END CENTERED WHITE CONTAINER -->\n</div>\n</td>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n</tr>\n</table>\n</body>\n</html>","output":"str","x":3240,"y":2180,"wires":[["80ee1d38.5041f8"]]},{"id":"16731a52.126fe6","type":"function","z":"aec22158.fe4e38","name":"Trigger email","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.payload = {\n  \"title\":\"Password reset\",\n  \"logo\":\"logo.png\",\n  \"firstname\":msg.RevotioData.FlowData.Data.UserData.first_name,\n  \"lastname\":msg.RevotioData.FlowData.Data.UserData.last_name,\n//   \"attachment\" : global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\",\n  \"message\":\"Welcome to the project management application!\",\n  \"closing\":\"Cheerfully yours,\",\n  \"signature\":\"Team Grant tools projects.\",\n  \"activate_text\":\"You can reset your password by clicking on this link:\",\n  \"activation_link\":global.get(\"DomainProperties.RootDomain\")+ \"/reset=\" + msg.RevotioData.FlowData.Data.UserData.resetToken,\n  \"activate_click\":\"Reset!\",\n  \"footer_text\":\"Grant tools B.V. | Rijswijk, Netherlands\",\n  \"settings_link\":global.get(\"DomainProperties.prodUrl\"),\n  \"settings_text\":\"Reset your password\",\n//   data:fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\"),\n  base64data : fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\").toString('base64'),\n}\n\nmsg.data = msg.payload\nreturn msg;\n\n","outputs":1,"noerr":0,"x":3110,"y":2180,"wires":[["85b62822.f16cf8"]]},{"id":"80ee1d38.5041f8","type":"function","z":"aec22158.fe4e38","name":"nodemailer_mailgun_transport && nodemailer","func":"// var request = global.get('request'); \nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar request = global.get('request');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// This is your API key that you retrieve from www.mailgun.com/cp (free up to 10K monthly emails)\nconst auth = {\n  auth: {\n    api_key: global.get(\"mailgun.apiKey\"),\n    domain: global.get(\"mailgun.domain\")\n  },\n//   proxy: 'http://user:pass@localhost:8080' // optional proxy, default is false\n}\n \nconst nodemailerMailgun = nodemailer.createTransport(mg(auth));\n \n\n// base64Attachment =  msg.payload.data.toString('base64');\n\nnodemailerMailgun.sendMail({\n  from: global.get(\"mailgun.from\"),\n  to: msg.RevotioData.FlowData.Data.UserData.email, // An array if you have multiple recipients.\n//   cc:'second@domain.com',\n//   bcc:'secretagent@company.gov',\n  subject: msg.data.title,\n//   'h:Reply-To': 'reply2this@company.com',\n  //You can use \"html:\" to send HTML email content. It's magic!\n  html: msg.payload,\n  //You can use \"text:\" to send plain-text content. It's oldschool!\n//   text: 'Mailgun rocks, pow pow!',\n//   attachments: [\n//         {\n//             cid: 'logo.png',\n//             content: base64Attachment,\n//             encoding: 'base64'\n//         },]\n}, (err, info) => {\n  if (err) {\n    console.log(`Error: ${err}`);\n  }\n  else {\n    console.log(`Response: ${info}`);\n  }\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":3480,"y":2180,"wires":[[]]},{"id":"5234ac38.c9d60c","type":"template","z":"aec22158.fe4e38","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!doctype html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>{{data.title}}</title>\n<style>\n@media  only screen and (max-width: 620px) {\ntable[class=body] h1 {\nfont-size: 28px !important;\nmargin-bottom: 10px !important;\n}\ntable[class=body] p,\ntable[class=body] ul,\ntable[class=body] ol,\ntable[class=body] td,\ntable[class=body] span,\ntable[class=body] a {\nfont-size: 16px !important;\n}\ntable[class=body] .wrapper,\ntable[class=body] .article {\npadding: 10px !important;\n}\ntable[class=body] .content {\npadding: 0 !important;\n}\ntable[class=body] .container {\npadding: 0 !important;\nwidth: 100% !important;\n}\ntable[class=body] .main {\nborder-left-width: 0 !important;\nborder-radius: 0 !important;\nborder-right-width: 0 !important;\n}\ntable[class=body] .btn table {\nwidth: 100% !important;\n}\ntable[class=body] .btn a {\nwidth: 100% !important;\n}\ntable[class=body] .img-responsive {\nheight: auto !important;\nmax-width: 100% !important;\nwidth: auto !important;\n}\n}\n@media  all {\n.ExternalClass {\nwidth: 100%;\n}\n.ExternalClass,\n.ExternalClass p,\n.ExternalClass span,\n.ExternalClass font,\n.ExternalClass td,\n.ExternalClass div {\nline-height: 100%;\n}\n.btn-primary table td:hover {\nbackground-color: #34495e !important;\n}\n.btn-primary a:hover {\nbackground-color: #34495e !important;\nborder-color: #34495e !important;\n}\n.token_container {\n  padding: 5px; \n  width: 90%; \n  margin: auto; \n  border: 1px solid #ccc; \n  margin-bottom: 20px\n}\n.token_text {\n  text-align: center\n}\n.token {\n  background-color: #5eb7da; \n  text-align: center; \n  font-size: 30px; \n  width: 50%; \n  margin: auto;\n}\n}\n</style>\n</head>\n<body class=\"\" style=\"background-color: #f6f6f6; font-family: sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; line-height: 1.4; margin: 0; padding: 0; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n<td class=\"container\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">\n<div class=\"content\" style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">\n\n<!-- START CENTERED WHITE CONTAINER -->\n<span class=\"preheader\" style=\"color: transparent; display: none; height: 0; max-height: 0; max-width: 0; opacity: 0; overflow: hidden; mso-hide: all; visibility: hidden; width: 0;\">{{data.title}}</span>\n<table class=\"main\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;\">\n\n<!-- START MAIN CONTENT AREA -->\n<tr>\n<td class=\"wrapper\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 40px;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 40px;\">\n<a href=\"http://revotio.com\" target=\"_blank\">\n<img style=\"display: block; margin: auto; width: 150px;\" width=\"150\" src=\"{{data.logo}}\" alt=\"{{data.title}}\">\n</a>\n</td>\n</tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">\n\n<p>Hi {{data.firstname}} {{data.lastname}},</p>\n<p>{{data.message}}</p>\n<p>{{data.activate_text}}</p>\n<div class=\"token_container\">\n<p class=\"token_text\">Type an MFA token below for verification.</p>\n<p class=\"token\">\n\t{{data.token}}\n</p>\n<p class=\"token_text\">Use an MFA-enabled device with Google Authenticator<br>\n(Android or iPhone) or any two-factor authentication app.</p>\n</div>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{data.closing}}\n</p>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{data.signature}}\n</p>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n\n<!-- END MAIN CONTENT AREA -->\n</table>\n\n<!-- START FOOTER -->\n<div class=\"footer\" style=\"clear: both; Margin-top: 10px; text-align: center; width: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td class=\"content-block\" style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;\">\n<span style=\"color: #999999; font-size: 12px; text-align: center;\">{{data.footer_text}}</span>\n<br> Don't like these emails? <a href=\"{{data.settings_link}}\" style=\"text-decoration: underline; color: #999999; font-size: 12px; text-align: center;\">{{data.settings_text}}</a>.\n</td>\n</tr>\n\n</table>\n</div>\n<!-- END FOOTER -->\n\n<!-- END CENTERED WHITE CONTAINER -->\n</div>\n</td>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n</tr>\n</table>\n</body>\n</html>","output":"str","x":3040,"y":1520,"wires":[["7f34ab1f.8cea44"]]},{"id":"ef7031df.f8f2b","type":"function","z":"aec22158.fe4e38","name":"Trigger email","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.payload = {\n  \"title\":\"Two step authentication\",\n  \"logo\":\"logo.png\",\n  email : msg.RevotioData.session.userData.email,\n  \"firstname\":msg.RevotioData.session.userData.first_name,\n  token: msg.RevotioData.FlowData.Token,\n  \"lastname\":msg.RevotioData.session.userData.last_name,\n//   \"attachment\" : global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\",\n  \"message\":\"Welcome to the project management application!\",\n  \"closing\":\"Cheerfully yours,\",\n  \"signature\":\"Team Grant tools projects.\",\n  \"activate_text\":\"Please enter the this token: \" + msg.RevotioData.FlowData.Token ,\n  \"activation_link\":\"\",\n  \"activate_click\":\"\",\n  \"footer_text\":\"Grant tools B.V. | Rijswijk, Netherlands\",\n  \"settings_link\":global.get(\"DomainProperties.prodUrl\"),\n  \"settings_text\":\"Two step authentication\",\n//   data:fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\"),\n  base64data : fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\").toString('base64'),\n}\n\nmsg.data = msg.payload\nreturn msg;\n\n","outputs":1,"noerr":0,"x":2910,"y":1520,"wires":[["5234ac38.c9d60c"]]},{"id":"7f34ab1f.8cea44","type":"function","z":"aec22158.fe4e38","name":"nodemailer_mailgun_transport && nodemailer","func":"// var request = global.get('request'); \nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar request = global.get('request');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// This is your API key that you retrieve from www.mailgun.com/cp (free up to 10K monthly emails)\nconst auth = {\n  auth: {\n    api_key: global.get(\"mailgun.apiKey\"),\n    domain: global.get(\"mailgun.domain\")\n  },\n//   proxy: 'http://user:pass@localhost:8080' // optional proxy, default is false\n}\n \nconst nodemailerMailgun = nodemailer.createTransport(mg(auth));\n \n\n// base64Attachment =  msg.payload.data.toString('base64');\n\nnodemailerMailgun.sendMail({\n  from: global.get(\"mailgun.from\"),\n  to: msg.data.email, // An array if you have multiple recipients.\n//   cc:'second@domain.com',\n//   bcc:'secretagent@company.gov',\n  subject: msg.data.title,\n//   'h:Reply-To': 'reply2this@company.com',\n  //You can use \"html:\" to send HTML email content. It's magic!\n  html: msg.payload,\n  //You can use \"text:\" to send plain-text content. It's oldschool!\n//   text: 'Mailgun rocks, pow pow!',\n//   attachments: [\n//         {\n//             cid: 'logo.png',\n//             content: base64Attachment,\n//             encoding: 'base64'\n//         },]\n}, (err, info) => {\n  if (err) {\n    console.log(`Error: ${err}`);\n  }\n  else {\n    console.log(`Response: ${info}`);\n  }\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":3280,"y":1520,"wires":[[]]},{"id":"7d86f895.37fe","type":"template","z":"aec22158.fe4e38","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!doctype html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>{{payload.title}}</title>\n<style>\n@media  only screen and (max-width: 620px) {\ntable[class=body] h1 {\nfont-size: 28px !important;\nmargin-bottom: 10px !important;\n}\ntable[class=body] p,\ntable[class=body] ul,\ntable[class=body] ol,\ntable[class=body] td,\ntable[class=body] span,\ntable[class=body] a {\nfont-size: 16px !important;\n}\ntable[class=body] .wrapper,\ntable[class=body] .article {\npadding: 10px !important;\n}\ntable[class=body] .content {\npadding: 0 !important;\n}\ntable[class=body] .container {\npadding: 0 !important;\nwidth: 100% !important;\n}\ntable[class=body] .main {\nborder-left-width: 0 !important;\nborder-radius: 0 !important;\nborder-right-width: 0 !important;\n}\ntable[class=body] .btn table {\nwidth: 100% !important;\n}\ntable[class=body] .btn a {\nwidth: 100% !important;\n}\ntable[class=body] .img-responsive {\nheight: auto !important;\nmax-width: 100% !important;\nwidth: auto !important;\n}\n}\n@media  all {\n.ExternalClass {\nwidth: 100%;\n}\n.ExternalClass,\n.ExternalClass p,\n.ExternalClass span,\n.ExternalClass font,\n.ExternalClass td,\n.ExternalClass div {\nline-height: 100%;\n}\n.btn-primary table td:hover {\nbackground-color: #34495e !important;\n}\n.btn-primary a:hover {\nbackground-color: #34495e !important;\nborder-color: #34495e !important;\n}\n.button {\n  text-decoration: none;\n  background-color: #20a7db;\n  color: #333333;\n  padding: 2px 6px 2px 6px;\n  border: none;\n  border-radius: 2px;\n}\n}\n</style>\n</head>\n<body class=\"\" style=\"background-color: #f6f6f6; font-family: sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; line-height: 1.4; margin: 0; padding: 0; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n<td class=\"container\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">\n<div class=\"content\" style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">\n\n<!-- START CENTERED WHITE CONTAINER -->\n<span class=\"preheader\" style=\"color: transparent; display: none; height: 0; max-height: 0; max-width: 0; opacity: 0; overflow: hidden; mso-hide: all; visibility: hidden; width: 0;\">{{payload.title}}</span>\n<table class=\"main\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;\">\n\n<!-- START MAIN CONTENT AREA -->\n<tr>\n<td class=\"wrapper\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 40px;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 40px;\">\n<a href={{payload.activation_link}} target=\"_blank\">\n<img style=\"display: block; margin: auto; width: 150px;\" width=\"150\" src=\"data:image/png;base64,{{payload.base64data}}\" alt=\"{{payload.title}}\">\n</a>\n</td>\n</tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">\n\n<p>Hi {{payload.firstname}} {{payload.lastname}},</p>\n<p>{{payload.message}}</p>\n<p>{{payload.activate_text}} <a class=\"button\" href=\"{{payload.activation_link}}\">{{payload.activate_click}}</a></p>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{payload.closing}}\n</p>\n<p style=\"font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; Margin-bottom: 15px;\">\n{{payload.signature}}\n</p>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n\n<!-- END MAIN CONTENT AREA -->\n</table>\n\n<!-- START FOOTER -->\n<div class=\"footer\" style=\"clear: both; Margin-top: 10px; text-align: center; width: 100%;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\n<tr>\n<td class=\"content-block\" style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;\">\n<span style=\"color: #999999; font-size: 12px; text-align: center;\">{{payload.footer_text}}</span>\n<br> Don't like these emails? <a href=\"{{payload.settings_link}}\" style=\"text-decoration: underline; color: #999999; font-size: 12px; text-align: center;\">{{payload.settings_text}}</a>.\n</td>\n</tr>\n\n</table>\n</div>\n<!-- END FOOTER -->\n\n<!-- END CENTERED WHITE CONTAINER -->\n</div>\n</td>\n<td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\n</tr>\n</table>\n</body>\n</html>","output":"str","x":1400,"y":1380,"wires":[["57bfa1d.e37346"]]},{"id":"4d7aeb07.6c37fc","type":"function","z":"aec22158.fe4e38","name":"Trigger email","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.payload = {\n  \"title\":\"Two step authentication\",\n  \"logo\":\"logo.png\",\n  email : msg.RevotioData.session.userData.email,\n  \"firstname\":msg.RevotioData.session.userData.first_name,\n  token: msg.RevotioData.FlowData.Token,\n  \"lastname\":msg.RevotioData.session.userData.last_name,\n//   \"attachment\" : global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\",\n  \"message\":\"Welcome to the project management application!\",\n  \"closing\":\"Cheerfully yours,\",\n  \"signature\":\"Team Grant tools projects.\",\n  \"activate_text\":\"Please enter the this token: \" + msg.RevotioData.FlowData.Token ,\n  \"activation_link\":\"\",\n  \"activate_click\":\"\",\n  \"footer_text\":\"Grant tools B.V. | Rijswijk, Netherlands\",\n  \"settings_link\":global.get(\"DomainProperties.prodUrl\"),\n  \"settings_text\":\"Two step authentication\",\n//   data:fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\"),\n  base64data : fs.readFileSync(global.get(\"DomainProperties.filesFolder\")+\"SystemFiles/logo.png\").toString('base64'),\n}\n\nmsg.data = msg.payload\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1270,"y":1380,"wires":[["7d86f895.37fe"]]},{"id":"57bfa1d.e37346","type":"function","z":"aec22158.fe4e38","name":"nodemailer_mailgun_transport && nodemailer","func":"// var request = global.get('request'); \nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar request = global.get('request');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// This is your API key that you retrieve from www.mailgun.com/cp (free up to 10K monthly emails)\nconst auth = {\n  auth: {\n    api_key: global.get(\"mailgun.apiKey\"),\n    domain: global.get(\"mailgun.domain\")\n  },\n//   proxy: 'http://user:pass@localhost:8080' // optional proxy, default is false\n}\n \nconst nodemailerMailgun = nodemailer.createTransport(mg(auth));\n \n\n// base64Attachment =  msg.payload.data.toString('base64');\n\nnodemailerMailgun.sendMail({\n  from: global.get(\"mailgun.from\"),\n  to: msg.data.email, // An array if you have multiple recipients.\n//   cc:'second@domain.com',\n//   bcc:'secretagent@company.gov',\n  subject: msg.data.title,\n//   'h:Reply-To': 'reply2this@company.com',\n  //You can use \"html:\" to send HTML email content. It's magic!\n  html: msg.payload,\n  //You can use \"text:\" to send plain-text content. It's oldschool!\n//   text: 'Mailgun rocks, pow pow!',\n//   attachments: [\n//         {\n//             cid: 'logo.png',\n//             content: base64Attachment,\n//             encoding: 'base64'\n//         },]\n}, (err, info) => {\n  if (err) {\n    console.log(`Error: ${err}`);\n  }\n  else {\n    console.log(`Response: ${info}`);\n  }\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":1640,"y":1380,"wires":[[]]},{"id":"6a6586d.2f53978","type":"debug","z":"d8703926.e2eca","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"result","targetType":"msg","x":1830,"y":1380,"wires":[]},{"id":"709cf4de.51915c","type":"function","z":"d8703926.e2eca","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n// find \n            findObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'transactions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.transactions = res\n                            settingsObj = {\n                            query : {\n                                    query :{entity_level: \"application\"}, \n                                    },\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'settings',\n                            operation:'find',\n                            }\n        \n                            mongodbTools.resolveAsync(settingsObj, node, function(res){\n                                    msg.settings = res\n                                    \n                                 \n                                    \n                                    \n                                    node.send(msg) \n                            })  \n            })\n// return msg;","outputs":1,"noerr":0,"x":1390,"y":1380,"wires":[["35732d9d.6f319a"]]},{"id":"32f73564.233322","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1290,"y":1380,"wires":[["709cf4de.51915c"]]},{"id":"35732d9d.6f319a","type":"function","z":"d8703926.e2eca","name":"update transactions","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n_.each(msg.transactions, function(Item, Index){\n    \n    index = lodash.findIndex(msg.settings, {type: \"WpTransactionCategories\",category:Item.category_name } )\n    \n    if (index>-1){\n    //   Item.category_idOLD = Item.category_id\n       Item.category_id = new ObjectID(msg.settings[index]._id)\n        // update    \n            updateObj = {\n                            query : {\n                                    query : {_id : new ObjectID(Item._id)}, \n                                    update : {\"$set\": Item},\n                                    options : {upsert: true}\n                                    },\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'transactions',\n                            operation:'update', // updateMany , updateOne\n                            }\n        \n                    mongodbTools.resolveAsync(updateObj, node, function(res){\n                            msg.result = res\n                            node.send(msg) \n                    })  \n\n    // node.send({\n    //     payload:[\n    //         {_id : new ObjectID(Item._id)},\n    //         {\"$set\": Item},\n    //         {upsert: true}],\n    //     operation : \"update\"\n        \n        \n    // })\n    }\n    \n    \n    \n})\n\n","outputs":1,"noerr":0,"x":1560,"y":1380,"wires":[["6a6586d.2f53978"]]},{"id":"af365394.e8bd98","type":"comment","z":"d8703926.e2eca","name":"Convert wp transactions","info":"","x":1250,"y":1340,"wires":[]},{"id":"4e6bcf80.4a6ff","type":"debug","z":"d8703926.e2eca","name":"azsxdfgbhn","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1830,"y":1500,"wires":[]},{"id":"571085ae.3189ac","type":"function","z":"d8703926.e2eca","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n    aggregateObj = {\n                    query : { query : [{\n                                $match: {organization_id: new ObjectID(\"5bcd9bf3ede2f43ded73dd62\")}},\n                              {\n                                $lookup: {\n                                  \"from\": \"projects\",\n                                  \"localField\": \"project_id\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"projectData\"\n                                }\n                              },\n                             \n                              {\n                                $unwind: {\n                                  \"path\": \"$projectData\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n\n// find \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                \n        \n                \n                \n                _.each(res, function(Item, Index){\n                  \n                    Item.Department = new ObjectID(Item.projectData.Department)\n                    \n                   \n                    Item.contact_person_organization = new ObjectID(\"5c38674e9bb24e1c4312e8a4\") \n                    \n                    delete Item.projectData\n                    // Outputmsg = \n                    id = new ObjectID(Item._id)\n                    delete Item._id\n                    \n                    // update    \n    updateObj = {\n                    query : {\n                            query : {_id : new ObjectID(id)}, \n                            update : {\"$set\":Item},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n                    mongodbTools.resolveAsync(updateObj, node, function(res){\n                            msg.result = res\n                            node.send(msg) \n                    })  \n                })\n\n            })\n// return msg;","outputs":1,"noerr":0,"x":1430,"y":1500,"wires":[["4e6bcf80.4a6ff"]]},{"id":"c7797cff.8b526","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1270,"y":1500,"wires":[["571085ae.3189ac"]]},{"id":"47776e62.28b488","type":"comment","z":"d8703926.e2eca","name":"Convert wp transactions","info":"","x":1230,"y":1460,"wires":[]},{"id":"fcfa2188.959158","type":"function","z":"d8703926.e2eca","name":"updaste all emlloyee avatars","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n///files/employee\n// find \n            findObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.result = res\n                    \n                    _.each(res, function(Item, Index){\n                        \n                        Item.avatar = Item.avatar.replace(\"employees\", \"employee\");\n                        // update    \n                        updateObj = {\n                                        query : {\n                                                query :{_id : new ObjectID(Item._id)}, \n                                                update :  {\"$set\": Item},\n                                                options : {upsert: true}\n                                                },\n                                        connection:global.get(\"DB_data.connection\"),\n                                        database:global.get(\"DB_data.appDB\"),\n                                        collection:'employee',\n                                        operation:'update', // updateMany , updateOne\n                                        }\n                    \n                                mongodbTools.resolveAsync(updateObj, node, function(res){\n                                        msg.result = res\n                                        node.send(msg) \n                                })  \n\n                        // node.send({\n                        //     payload : [{_id : new ObjectID(Item._id)},\n                        //                 {\"$set\": Item},\n                        //                 {upsert : true}],\n                        //     operation : \"updateOne\"\n                        // }) \n                        \n                        \n                    })\n                    \n            })   \n\n","outputs":1,"noerr":0,"x":1480,"y":1600,"wires":[[]]},{"id":"87b6d2eb.960ae8","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1250,"y":1600,"wires":[["fcfa2188.959158"]]},{"id":"c4faa0b5.2f396","type":"function","z":"d8703926.e2eca","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n// find \n            findObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'application_data',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n            \n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1350,"y":1700,"wires":[[]]},{"id":"d3dff66e.25aec","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1240,"y":1700,"wires":[["c4faa0b5.2f396"]]},{"id":"ae399ee7.eabc38","type":"function","z":"d8703926.e2eca","name":"recalc all employee's","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\nvar _ = global.get('underscore');\n\n\nvar organization_id = \"5bcd9bf3ede2f43ded73dd62\"\n// find \n            findObj = {\n                    query : {\n                            query :{organization_id : new ObjectID(organization_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n            \n                \n                    msg.employee_id = [] \n                    \n                    _.each(res, function(Item, Index){\n                        msg.employee_id.push(new ObjectID(Item._id))\n                    })\n                    \n                    // find \n            // findObj = {\n            //         query : {\n            //                 query :[\"_id\", {organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)}], \n            //                 },\n            //         connection:global.get(\"DB_data.connection\"),\n            //         database:global.get(\"DB_data.appDB\"),\n            //         collection:'employee',\n            //         operation:'distinct',\n            //         }\n\n            // mongodbTools.resolveAsync(findObj, node, function(res){\n            \n                \n            //         msg.employee_id_distinct = res\n             \n            //         node.send(msg) \n            // })  \n            \n            \n                    node.send(msg) \n            })   \n","outputs":1,"noerr":0,"x":1440,"y":1800,"wires":[[]]},{"id":"d3a241f1.a28e5","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1240,"y":1800,"wires":[["ae399ee7.eabc38"]]},{"id":"3f6e998d.3c36b6","type":"comment","z":"d8703926.e2eca","nameinfo":"","x":2450,"y":360,"wires":[]},{"id":"ba4030bc.408f78","type":"comment","z":"d8703926.e2eca","nameinfo":"","x":2470,"y":1280,"wires":[]},{"id":"bb744419.3b4b","type":"function","z":"508957a1.dd5398","name":"Get session data ACTION","func":"var jsonwebtoken = global.get('jsonwebtoken');\nvar secret = global.get(\"SystemVars.secret\");\nvar request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\nvar valid, invalid;\nmsg.starttime = new Date()\n\n\nvar PostData = JSON.parse(msg.dataResult.dataContent.PostData);\n\n\n\nvar SessionData = JSON.parse(msg.dataResult.dataContent.SessionData);\n\nquery = {\n    deviceId : SessionData.deviceId,\n    revotioSessionId : SessionData.revotioSessionId,\n}\nmsg.RevotioData = {\n    SessionData:SessionData,\n    // startTime : new Date(),\n    PostData:PostData,\n    session : SessionData\n};\n// find  \nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                \n                if (res.length > 0 ){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  \n\n  \n    \n    \nreturn [valid, invalid];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":780,"wires":[["c964af3e.013ae8"]]},{"id":"49d18cf3.10bffc","type":"function","z":"508957a1.dd5398","name":"get organizations","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    // query = {\"$or\": [{parent_id : new ObjectID(msg.payload.organization_id)}, {_id : new ObjectID(msg.payload.organization_id)} ] }\n    // msg.operation = 'find.toArray'\n                    \n                // find  \n                findObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n\n   ","outputs":1,"noerr":0,"x":990,"y":2060,"wires":[["a6bb1f75.b71ea"]],"outputLabels":["valid, "]},{"id":"b842fe40.90a778","type":"function","z":"508957a1.dd5398","name":"Remove all users && users data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// find  \nfindObj = {\n                    query : {\n                            query :{organization_id: new ObjectID(msg.organization_id)}, \n                            projection:{_id :1}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_accounts',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                \n                _.each(res, function(user, index){\n                    \n                    // removeusers \n                        removeusers = {\n                                query : {\n                                        query :{_id:user._id}, \n                                        },\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'users',\n                                operation:'remove',\n                                }\n            \n                        mongodbTools.resolveAsync(removeusers, node, function(res){\n                                \n                        }) \n                        \n                        // removeuser_accounts \n                        removeuser_accounts = {\n                                query : {\n                                        query :{user:user._id}, \n                                        },\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'user_accounts',\n                                operation:'remove',\n                                }\n            \n                        mongodbTools.resolveAsync(removeuser_accounts, node, function(res){\n                                \n                        }) \n                        \n                         // removeuser_permissions\n                        removeuser_permissions = {\n                                query : {\n                                        query :{user:user._id}, \n                                        },\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'user_permissions',\n                                operation:'remove',\n                                }\n            \n                        mongodbTools.resolveAsync(removeuser_permissions, node, function(res){\n                                \n                        }) \n                        \n                       \n                      \n                })\n                \n                    // msg.payload = res\n                    node.send(msg) \n            }) \n            \n// return msg;\n","outputs":1,"noerr":0,"x":1530,"y":2020,"wires":[[]]},{"id":"6fd6f4e9.852dfc","type":"function","z":"508957a1.dd5398","name":"Remove all application records && files","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n // removequery\n            pages = {\n                    query : {\n                            query :{application_id : new ObjectID(msg.payload.application_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(pages, node, function(res){\n                   \n            })  \n            \n \n          \n // removequery\n            application = {\n                    query : {\n                            query :{_id : new ObjectID(msg.payload.application_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(application, node, function(res){\n                   \n            })  \n            \n            \n            \n    // remove all app files\n    fs.removeSync(global.get(\"DomainProperties.filesFolder\")+ \"applications/\" + msg.payload.application_id)\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":1050,"y":2180,"wires":[["30870895.0a2d28"]]},{"id":"30870895.0a2d28","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":1230,"y":2180,"wires":[]},{"id":"7ceb5cfd.26cd9c","type":"function","z":"508957a1.dd5398","name":"Remove all page records && files","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n \n // get page obj\n  findOneObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.page_id) }\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.page = res[0]\n                } else {\n                    msg.page = {}\n                }\n                    \n                // remove all app files\n                fs.removeSync(global.get(\"DomainProperties.filesFolder\")+ \"applications/\" + msg.page.application_id+\"/pages/\"+msg.page_id)\n\n                 // removequery\n                            pages = {\n                                    query : {\n                                            query :{_id : new ObjectID(msg.page_id)},\n                                            },\n                                    connection:global.get(\"DB_data.connection\"),\n                                    database:global.get(\"DB_data.appDB\"),\n                                    collection:'pages',\n                                    operation:'remove',\n                                    }\n                \n                            mongodbTools.resolveAsync(pages, node, function(res){\n                                   node.send(msg)\n                            })  \n            })  \n            ","outputs":1,"noerr":0,"x":640,"y":2280,"wires":[["521fb03f.d3a258"]]},{"id":"a1a4c9c0.c43b6","type":"link in","z":"508957a1.dd5398","name":"","links":["f6894ee3.d056c","1a55a0c3.a8f35f","d2a7b91c.174a08","97b5b868.e751e","77a61ff7.3ac9d","100e6adf.f1c21d","884fb8a9.ab74f","171e9659.88660a","ffa0792b.b11698"],"x":75,"y":100,"wires":[["811b099c.ef816"]]},{"id":"811b099c.ef816","type":"subflow:4cbbc60.828563c","z":"508957a1.dd5398","name":"","env":[],"x":240,"y":100,"wires":[]},{"id":"a433961e.6ba03","type":"comment","z":"508957a1.dd5398","name":"Entrance post","info":"Expected object :\n\n msg.payload = {\n        DeviceId: ** From publised app **,\n        RevotioSessionId : ** From publised app **,\n   }","x":130,"y":300,"wires":[]},{"id":"a69f99b5.f05038","type":"http in","z":"508957a1.dd5398","name":"","url":"/Exit","method":"post","upload":false,"swaggerDoc":"","x":80,"y":1300,"wires":[["ffa0792b.b11698","b5530b8c.66e958","728e249.bd3ca5c"]]},{"id":"733e9957.70c7b","type":"comment","z":"508957a1.dd5398","name":"Exit ","info":"","x":90,"y":1260,"wires":[]},{"id":"afec1277.c01c3","type":"http in","z":"508957a1.dd5398","name":"","url":"/token","method":"post","upload":false,"swaggerDoc":"","x":110,"y":1140,"wires":[["996a3cfa.05bf8"]]},{"id":"5a06a076.96d368","type":"comment","z":"508957a1.dd5398","name":"Token","info":"msg.payload = {\n    type: \n    content: { // start with DeviceId && RevotioSessionId\n        DeviceId: \"123456789\",\n        RevotioSessionId : \"123456789\"\n    }\n}","x":90,"y":1040,"wires":[]},{"id":"f6135ee3.d67718","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":450,"y":1420,"wires":[]},{"id":"52b73dc3.bb92a4","type":"http in","z":"508957a1.dd5398","name":"","url":"/upload","method":"post","upload":true,"swaggerDoc":"","x":90,"y":1400,"wires":[["ea54b5fe.1e48c"]]},{"id":"ea54b5fe.1e48c","type":"function","z":"508957a1.dd5398","name":"","func":"var Remove, Upload; \n\nif (msg.req.uploadData.fields.type === \"create\"){\n    Upload = msg;\n} else {\n    Remove = msg;\n}\nreturn [Remove, Upload];","outputs":2,"noerr":0,"x":230,"y":1400,"wires":[[],["77473f2e.d022e","ee2f7762.ef776"]],"outputLabels":["Remove, ","Upload"]},{"id":"77473f2e.d022e","type":"function","z":"508957a1.dd5398","name":"","func":"var fs = global.get('fsextra');\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\n\n// fs.ensureDirSync(global.get(\"DomainProperties.filesFolder\")+ msg.req.uploadData.fields.appFolder)\n// fs.moveSync(msg.req.uploadData.fileData.path, global.get(\"DomainProperties.filesFolder\")+ msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name , { overwrite: true })\n\n\nfs.ensureDirSync(msg.req.uploadData.fields.appFolder)\nfs.moveSync(msg.req.uploadData.fileData.path, msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name , { overwrite: true })\n\n\n\n\n\n// msg.move = msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name\n\n// date = moment().format(\"MM DD MM YYYY\")\n// msg.date = date\n\n// msg.source =  msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name\n// msg.destination = global.get(\"DomainProperties.publicFolder\")+\"files/upload/\"+ date +\"/\"+ msg.req.uploadData.fields.name\n\n// fs.copySync(global.get(\"DomainProperties.filesFolder\")+ msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name , global.get(\"DomainProperties.publicFolder\")+\"/files/upload/\"+ date +\"/\"+ msg.req.uploadData.fields.name )\n\n// msg.payload = global.get(\"DomainProperties.RootDomain\")+\"files/upload/\"+ date +\"/\"+ msg.req.uploadData.fields.name\nmsg.payload = {\n    // url     : global.get(\"DomainProperties.RootDomain\")+\"files/upload/\"+ date +\"/\"+ msg.req.uploadData.fields.name,\n    path    : msg.req.uploadData.fields.appFolder + msg.req.uploadData.fields.name,\n    size    : msg.req.uploadData.fileData.size,\n    name    : msg.req.uploadData.fileData.name,\n    uploadFileType : msg.req.uploadData.fileData.type,\n    type    : msg.req.uploadData.fileData.type\n}\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":1420,"wires":[["f6135ee3.d67718"]]},{"id":"822b78e3.84827","type":"comment","z":"508957a1.dd5398","name":"Upload","info":"msg.payload = {\n    type: \n    content: { // start with DeviceId && RevotioSessionId\n        DeviceId: \"123456789\",\n        RevotioSessionId : \"123456789\"\n    }\n}","x":90,"y":1360,"wires":[]},{"id":"74516ee2.700d","type":"http in","z":"508957a1.dd5398","name":"fileToken","url":"/fileToken","method":"post","upload":false,"swaggerDoc":"","x":100,"y":1500,"wires":[["846d586a.608af8"]]},{"id":"846d586a.608af8","type":"function","z":"508957a1.dd5398","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":1500,"wires":[["80e68dd7.0ac748"]]},{"id":"80e68dd7.0ac748","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":310,"y":1500,"wires":[]},{"id":"c679425d.2bf16","type":"comment","z":"508957a1.dd5398","name":"","info":"payload :{\n    fileToken   : STRING\n    RevotioToken: STRING,\n    fileName    : STRING,\n    filePath    : STRING,\n    \n}","x":100,"y":1460,"wires":[]},{"id":"4cb3a645.51e71","type":"http in","z":"508957a1.dd5398","name":"download","url":"/download","method":"get","upload":false,"swaggerDoc":"","x":100,"y":1600,"wires":[["b5c2646a.c43b78"]]},{"id":"b5c2646a.c43b78","type":"function","z":"508957a1.dd5398","name":"Get file","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\nvar mime = global.get('mime');\n\n\n// msg.payload.token = \"valid token\"\n\n msg.payload.tokenValid = false\n\nTokenContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.payload[\"revotio-token\"], global.get(\"SystemVars.secret\"), function(err, decoded) {\n      if (decoded !== undefined){\n           msg.payload.tokenValid = true\n          TokenContent = decoded\n      }\n    });\n    \nif ( msg.payload.tokenValid === true ){\n\n        // check if file exists\n        var state = false\n        if (msg.payload.hasOwnProperty(\"file\") &&  fs.existsSync(msg.payload.file)) { \n            state = true\n        } \n        \n        if (state === true){\n            // msg.payload.fileExtension = msg.payload.file.split(\".\")[msg.payload.file.split(\".\").length - 1]\n            msg.payload.fileType = mime.getType(msg.payload.file); \n             msg.payload.fileExtension = mime.getExtension(msg.payload.fileType); \n            msg.payload.folder = \"\"\n            \n            _.each(msg.payload.file.split(\"/\"), function(string, index){\n                if (index === 0){\n                     msg.payload.folder = string\n                } else {\n                    if (msg.payload.file.split(\"/\").length > index + 1){\n                        msg.payload.folder = msg.payload.folder +\"/\"+ string\n                    }\n                }\n            })\n        \n                    if (msg.payload.type === \"thumbnail\"){\n                         data = fs.readFileSync(msg.payload.file);\n                            msg.payload.base64 =  data.toString('base64');\n                                  \n                                \n                                  fs.stat(msg.payload.file, function(err, stats) {\n                                     \n                                      msg.payload.stats = stats;\n                                        \n                                            node.send(msg);\n                                  })\n                       \n                    } else {\n                            data = fs.readFileSync(msg.payload.file);\n                            msg.payload.base64 =  data.toString('base64');\n                                  \n                                \n                                  fs.stat(msg.payload.file, function(err, stats) {\n                                     \n                                      msg.payload.stats = stats;\n                                       \n                                            node.send(msg);\n                                  })\n                    }\n        \n        } else {\n            msg.payload.error = \"file does not exists\"\n            node.send(msg)\n        }\n} \nelse {\n       msg.payload.error = \"Invalid token\"\n      node.send(msg) \n}\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":210,"y":1600,"wires":[["4ae456b9.0c53b8"]]},{"id":"4ae456b9.0c53b8","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":320,"y":1600,"wires":[]},{"id":"bdb3ec6a.81d3c","type":"comment","z":"508957a1.dd5398","name":"","info":"payload :{\n    fileToken   : STRING\n    RevotioToken: STRING,\n    fileName    : STRING,\n    filePath    : STRING,\n    \n}","x":100,"y":1560,"wires":[]},{"id":"920da7ee.18772","type":"function","z":"508957a1.dd5398","name":"Remove Session","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar Data = msg.payload;\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\nif (Data.revotioSessionId){\n    query= {\n        deviceId : Data.deviceId,\n        revotioSessionId : Data.revotioSessionId,\n    }\n    \n   \n} else {\n    query = {\n        deviceId : Data.deviceId,\n    }\n} \n\n// remove \n            removeObj = {\n                    query : {\n                            query :query,\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'session',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.result = res\n                    node.send(msg) \n            })   \n\n\n\n// return msg;","outputs":1,"noerr":0,"x":370,"y":1320,"wires":[["98d04544.eac7e"]]},{"id":"98d04544.eac7e","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":510,"y":1300,"wires":[]},{"id":"ffa0792b.b11698","type":"link out","z":"508957a1.dd5398","name":"","links":["dc664b4f.0d82e","a1a4c9c0.c43b6"],"x":175,"y":1340,"wires":[]},{"id":"c1f038ae.f7faa","type":"comment","z":"508957a1.dd5398","name":"CHECK GC state","info":"","x":260,"y":1340,"wires":[]},{"id":"7300eaa0.fbf76c","type":"debug","z":"508957a1.dd5398","name":"Pre Request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2060,"y":860,"wires":[]},{"id":"12a86303.f876ed","type":"debug","z":"508957a1.dd5398","name":"INIT post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":920,"y":520,"wires":[]},{"id":"7951c57e.e01884","type":"function","z":"aec22158.fe4e38","name":"update appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\npayload = [{_id : new ObjectID(msg.RevotioData.session.UserData._id)},\n                {\"$set\": {\n                            previousLogin : msg.RevotioData.session.UserData.previousLogin,\n                            login           : msg.RevotioData.session.UserData.login\n                }},\n                {upsert : true}]\n// update    \n    updateObj = {\n                    query : {\n                            query :payload[0], \n                            update : payload[1],\n                            options : payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    \n            })  \n            \n","outputs":1,"noerr":0,"x":2930,"y":580,"wires":[[]]},{"id":"2c8a0c62.86d694","type":"function","z":"aec22158.fe4e38","name":"update appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\npayload = [\n    {_id: new ObjectID(msg.RevotioData.session.UserData._id)},\n    {\"$set\": {loginAttempts:0}},\n    {upsert: true}\n    ]\n    \n// update    \n    updateObj = {\n                    query : {\n                            query :payload[0], \n                            update : payload[1],\n                            options : payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    \n            })  \n            \n","outputs":1,"noerr":0,"x":4510,"y":280,"wires":[[]]},{"id":"2df202d2.7f9f2e","type":"function","z":"aec22158.fe4e38","name":"update sessions","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1],\n                            options : msg.payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'updateMany', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                 msg.payload = {\n                        setToken : true,\n                    };\n                \n                // get organization_id \n                \n                OrgPermossionOBJ = lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo, {type: 'organization'})\n                \n                    if (msg.RevotioData.session.UserData.type === \"PNOAdmin\" ){\n                        msg.payload.Page =  global.get(\"DomainProperties.PNODefaultPage\"); \n                        msg.payload.RevotioData = {organization_id : new ObjectID(OrgPermossionOBJ.type_id), Type: \"justLogedIn\"}\n                        \n                        } else {\n                        \n                        \n                        \n                        msg.payload.Page =  global.get(\"DomainProperties.ClientDefaultPage\");\n                        msg.payload.RevotioData = {organization_id : new ObjectID(OrgPermossionOBJ.type_id), Type: \"justLogedIn\"}\n                    }\n                    node.send(msg)\n            })  \n            \n","outputs":1,"noerr":0,"x":4500,"y":320,"wires":[["c0f97a1f.81ffc8"]]},{"id":"ab3ed11a.d5793","type":"function","z":"aec22158.fe4e38","name":"update sessions","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1],\n                            options : msg.payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                 msg.payload = {\n                        Page :  \"two step authentication\",\n                        setToken : true,\n                        RevotioData: {\n                        }\n                    };\n        \n                    node.send(msg)\n            })  \n            \n","outputs":1,"noerr":0,"x":4500,"y":400,"wires":[["85e06edd.f24208"]]},{"id":"2329b1df.ff9cde","type":"function","z":"aec22158.fe4e38","name":"update appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    \n// update    \n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1],\n                            options : msg.payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                node.send(msg)    \n            })  \n            \n","outputs":1,"noerr":0,"x":3730,"y":920,"wires":[["2e99f46b.4490ec"]]},{"id":"62ed20f0.1e896","type":"function","z":"aec22158.fe4e38","name":"update appuseraccounts","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    \n// update    \n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1],\n                            options : msg.payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_accounts',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                 msg.payload = {\n                        Page :  global.get(\"DomainProperties.NonAuthDefaultPage\"),\n                        // setToken : true,\n                        RevotioData: {\n                        }\n                    };\n                node.send(msg)    \n            })  \n            \n","outputs":1,"noerr":0,"x":4190,"y":920,"wires":[["50553c0.ca774c4"]]},{"id":"f3baa581.b4119","type":"function","z":"aec22158.fe4e38","name":"Get appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    \n    findOneObj = {\n                    query : {\n                            query :{activationToken :msg.RevotioData.FlowData.activationToken} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  \n            \n    \n            \n","outputs":1,"noerr":0,"x":1160,"y":860,"wires":[["e54d16bc.54e4f"]]},{"id":"d554894d.135478","type":"function","z":"aec22158.fe4e38","name":"Get appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    \n// findObj   \n\nfindOneObj = {\n                    query : {\n                            query :{resetToken : msg.RevotioData.FlowData.resetToken} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  \n\n            \n","outputs":1,"noerr":0,"x":500,"y":2220,"wires":[["8f35e986.f06c78"]]},{"id":"fbfb1b97.df21f8","type":"function","z":"aec22158.fe4e38","name":"Get appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.RevotioData.FlowData.user){\n    \n// findObj    \n\n\n\nfindOneObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.RevotioData.FlowData.user)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  \n        \n            \n} else {\n     node.send(msg)  \n}\n            \n","outputs":1,"noerr":0,"x":500,"y":2260,"wires":[["25e60b9d.f35b14"]]},{"id":"35b3b956.affe26","type":"function","z":"2294209a.0c95b","name":"Update/ remove appusers","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nif (msg.operation === \"update\"){\n// update    \n    updateObj = {\n                    query : {\n                            query :msg.payload[0], \n                            update : msg.payload[1],\n                            options : msg.payload[2]\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n}\nelse if (msg.operation === \"remove\"){\n    \n\n// remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'users',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n            \n}","outputs":1,"noerr":0,"x":4190,"y":420,"wires":[["1dea56ab.df6ad9"]]},{"id":"8b08f368.889138","type":"function","z":"2294209a.0c95b","name":"Remove appuserpermissions && appuseraccounts","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n    \n\n// remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_accounts',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            }) \n            \n// remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            }) \n            \n","outputs":1,"noerr":0,"x":4470,"y":640,"wires":[[]]},{"id":"acf98f4.b55967","type":"function","z":"e15a0fdb.64cc38","name":"Get message ","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                           \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'messages',\n                    operation:'find', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   // update    \n                  msg.payload = res\n                  node.send(msg)\n            })  \n","outputs":1,"noerr":0,"x":590,"y":520,"wires":[["d877edb.1cb551"]]},{"id":"7efe5a63.c782bc","type":"function","z":"e15a0fdb.64cc38","name":"Get channels","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                           \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'channels',\n                    operation:'find', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   // update    \n                  msg.payload = res\n                  node.send(msg)\n            })  \n","outputs":1,"noerr":0,"x":590,"y":620,"wires":[["d56f0f98.fbedb"]]},{"id":"744ee5da.72d984","type":"function","z":"e15a0fdb.64cc38","name":"Update  message","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'messages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                \n            })  \n","outputs":1,"noerr":0,"x":870,"y":720,"wires":[[]]},{"id":"5ea0a995.a8ec9","type":"function","z":"51f1d48a.bfebf4","name":"Set msg.organization_id","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.organization_id = new ObjectID()\n\n\n\n\nreturn msg;\n            ","outputs":1,"noerr":0,"x":390,"y":260,"wires":[["a55e41c8.3ba768"]]},{"id":"6121d5f6.df9814","type":"function","z":"51f1d48a.bfebf4","name":"Set msg.organization_id","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.organization_id = new ObjectID()\n\n\n\n\nreturn msg;\n            ","outputs":1,"noerr":0,"x":450,"y":520,"wires":[["ee3dba66.f9c4c"]]},{"id":"ee3dba66.f9c4c","type":"function","z":"51f1d48a.bfebf4","name":"Get project","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n// distinct\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {organization_id: msg.organization_id}\n                              },\n                                 { \n                                        \"$group\" : { \n                                            \"_id\" : \"$_id\"\n                                        }\n                                    }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                     msg.payload = [] ; \n                    \n                    _.each(res, function(Item, Index ){\n                         msg.payload.push(new ObjectID(Item._id))\n                    })\n                    node.send(msg) \n            }) \n            ","outputs":1,"noerr":0,"x":630,"y":520,"wires":[["495c62bf.dbb2dc"]]},{"id":"6e06cc4b.22ffb4","type":"comment","z":"d8703926.e2eca","name":"***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************","info":"","x":2510,"y":2640,"wires":[]},{"id":"e669fd34.1642d","type":"comment","z":"d8703926.e2eca","nameinfo":"","x":2430,"y":1960,"wires":[]},{"id":"1f2d5777.759379","type":"comment","z":"d8703926.e2eca","nameinfo":"","x":2430,"y":3380,"wires":[]},{"id":"eed4076.b32ff78","type":"comment","z":"d8703926.e2eca","nameinfo":"","x":2430,"y":4280,"wires":[]},{"id":"ee2f7762.ef776","type":"debug","z":"508957a1.dd5398","name":"UPLOAD post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":460,"y":1360,"wires":[]},{"id":"68f1df62.efc99","type":"debug","z":"d8703926.e2eca","name":"POST FS gadet","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3270,"y":3880,"wires":[]},{"id":"85f99b07.4665c8","type":"function","z":"d8703926.e2eca","name":"Gadget payload","func":"msg.payload = {\n    gadgetsList: [{\n                gadgetId: '5f1a96f5-980e-ab18-7ec5-c173f4bb5a24',\n                gadgetName: 'calendar breadcrumbs',\n                gadgetType: 'revotio-breadcrumbs',\n                gadgetData: {\n                  data: msg.data,\n                  options: {\n                    separatorIcon: 'fas fa-angle-right', // if null it will display \">\" by default\n                    // separatorIconColor: 'pink'\n                  }\n                }\n              }]}\n      \n\nreturn msg;","outputs":1,"noerr":0,"x":2340,"y":2340,"wires":[["1442a4d5.9c0f33"]]},{"id":"cdb7bb8d.9b022","type":"function","z":"d8703926.e2eca","name":"","func":"var project, other;\n\nif (msg.RevotioData.FlowData.Data.gadgetOptions.entity === \"project\"){\n    project = msg\n} else {\n    other = msg\n}\nreturn [project, other];","outputs":2,"noerr":0,"x":1660,"y":2340,"wires":[[],[]],"outputLabels":["project","other"]},{"id":"4fb614c6.08c224","type":"link in","z":"d8703926.e2eca","name":"","links":["39d2ce0a.3d6772"],"x":1575,"y":2340,"wires":[["cdb7bb8d.9b022"]]},{"id":"3ef7ca21.f72486","type":"function","z":"d8703926.e2eca","name":"Gadget payload","func":"msg.payload = {\n    gadgetsList: [{\n                gadgetId: 'edd49358-d337-050a-d1db-95de81828d06',\n                gadgetName: 'file manager breadcrumbs',\n                gadgetType: 'revotio-breadcrumbs',\n                gadgetData: {\n                  data: msg.data,\n                  options: {\n                    separatorIcon: 'fas fa-angle-right', // if null it will display \">\" by default\n                    // separatorIconColor: 'pink'\n                  }\n                }\n              }]}\n      \n\nreturn msg;","outputs":1,"noerr":0,"x":2720,"y":4240,"wires":[["970a5c89.9998d8"]]},{"id":"970a5c89.9998d8","type":"link out","z":"d8703926.e2eca","name":"","links":["237e338f.d7017c","57847b48.aa7c44","7917d30a.6dd9ac","570b3e3a.8ba29","a0acaa5f.2be9a","692b0f12.32ace","fad41b17.5eb7b","c74d8798.cd5638","a2b3578.6c62a28","47724d1b.e4881c","5e3cf55d.0d2fb4","c25802d5.50e92","d877524d.13d36","5961826d.b22a34","30fecdd1.bf793a","7d8d0582.79b614","e9ea15a0.bc9ca","70adbfb7.476a98","874a2bd1.2363b","b286eb2a.ffc8a","3f11034.8cc317c","fcd01742.2ff4c","c2b4cfb1.ec4218","8f80cee2.2bc3e","3f5a4516.adc40a","5149af4f.8e1be","34068a0e.048c8e","53fe809.1f1688","411df713.b9876"],"x":2855,"y":4240,"wires":[]},{"id":"164710f3.bf3fef","type":"inject","z":"508957a1.dd5398","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":200,"wires":[["811b099c.ef816"]]},{"id":"d7952017.dea3e","type":"function","z":"d8703926.e2eca","name":"DB operation","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n// find \n    findObj = {\n            query : {\n                    query :{_id : new ObjectID(msg.RevotioData.PostData.gadgetData.calendarEvent._id)\n                    }, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'events',\n            operation:'remove',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n        \n            node.send(msg) \n    })   \n","outputs":1,"noerr":0,"x":4290,"y":2200,"wires":[["8ff6c87.9b57eb8"]]},{"id":"8ff6c87.9b57eb8","type":"link out","z":"d8703926.e2eca","name":"","links":["4ed5e2ef.631d7c"],"x":4535,"y":2200,"wires":[]},{"id":"b0299765.306ab","type":"function","z":"508957a1.dd5398","name":"Check user inv","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nUserOrgPermissionObjIndex = lodash.findIndex(msg.RevotioData.session.UserData.AppUserPermissionInfo,{type: \"organization\"} );\n\nif (UserOrgPermissionObjIndex === -1){\n    \n}else {\n    UserOrgPermissionObj = msg.RevotioData.session.UserData.AppUserPermissionInfo[UserOrgPermissionObjIndex]\n\n    var query = {organization_id:new ObjectID(UserOrgPermissionObj.type_id), contact_person_organization:new ObjectID(msg.RevotioData.session.UserData._id) };\n// msg.operation = 'find.toArray';\n\n// find  \nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n}\n\n\n// return msg;","outputs":1,"noerr":0,"x":1620,"y":380,"wires":[["cd09b08b.c1c3d"]]},{"id":"c4762256.4d3218","type":"function","z":"508957a1.dd5398","name":"Remove user sessions","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// remove \n            removeObj = {\n                    query : {\n                            query :{\n                                        deviceId : msg.RevotioData.session.deviceId ,\n                                        revotioSessionId: msg.RevotioData.session.revotioSessionId\n                                    }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            })   ","outputs":1,"noerr":0,"x":1640,"y":460,"wires":[["5679a59d.ef0854"]]},{"id":"5679a59d.ef0854","type":"function","z":"508957a1.dd5398","name":"remove global comntext sessions","func":"global.set(\"gadgetGroups.\"+ msg.RevotioData.session.deviceId)\n\nmsg.payload = {\n    Page : global.get(\"DomainProperties.NonAuthDefaultPage\"),\n    RevotioData:{}\n    // revotioSessionId : msg.RevotioData.session.revotioSessionId\n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\nreturn msg;","outputs":1,"noerr":0,"x":1900,"y":460,"wires":[["7cd14cd3.6f2414"]]},{"id":"7cd14cd3.6f2414","type":"subflow:5e9b9c1d.bbe4a4","z":"508957a1.dd5398","name":"","env":[],"x":2120,"y":460,"wires":[]},{"id":"1feffcb9.f3a723","type":"comment","z":"d8703926.e2eca","name":"Menu actions","info":"","x":350,"y":600,"wires":[]},{"id":"14418773.9dfa29","type":"link in","z":"d8703926.e2eca","name":"menu gadget action","links":["6b04d965.f4ff08","251c3325.01a81c","6791272e.924708","d2b7e8de.99a408","2e80c09b.871748","e1b79af1.56d8e8","51dda61c.ac9718","f153a1c1.46c398","2506b5b0.53f782","60a2e26e.b6eb9c","ebd730b3.40708","20eae4f4.2bbcbc","44a83e5f.f1a268","544ff177.c49c88","54194603.a74dc","32c6796f.75544e","b8c3f06c.7e8c3","d2414ca5.fa2e3","7c0cf08e.f15c18","3d333da.6b8cec2","d6832ca6.6661a","5fd7688e.0e2548","c1e0ef09.006d6","49cbfa03.323154","a4311a51.a3b6d","3c2ea246.1ea72e","c17c74ab.5523f8","7b2a1b7c.b8e0e4","a87efb23.d267c8","7bc8a353.17418c","ab190608.5a8ee8","5466cf91.54dc2","4dbe6b41.f5a484","4c3324ec.47a1c4","dee478a9.de00b8","4a21c1a8.d17068","20f2669c.4040b2","4a10319.1c6b95","8578d779.0dafc8","359e3c32.9c6c9c","e182ab9b.75ab38","e78584f8.5f054","f017f314.5a372","67655cae.661fbc","28bb1cd1.a4b2fc","7197d7b9.7e3728","65df0a7c.9772ac","da3b3f79.6265e","714fa6a7.14b968","8fdad0c3.88b488","9dfabc7b.4c502","cc978341.da37b8","c60460c0.c24d08","d33781a5.20c05","644d78e.69a8e08"],"x":335,"y":640,"wires":[["5b7fb22f.8de844"]]},{"id":"5b7fb22f.8de844","type":"function","z":"d8703926.e2eca","name":"Menu Action","func":"var _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar lodash = global.get('lodash');\n\nvar Load , Redirect, Button,lazyload, LogOut ;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\nif (msg.RevotioData.hasOwnProperty(\"PostData\")=== false){\n    Load = msg;\n} else {\n\n    if ( PostData.gadgetData.hasOwnProperty(\"redirect\") && PostData.gadgetData.redirect === true ){\n        \n       \n        RevotioData = {}\n        _.each(PostData.gadgetData, function(value, key ){\n            if (lodash.includes(key, \"id\") || lodash.includes(key, \"Id\") || lodash.includes(key, \"ID\" )){\n                RevotioData[key] = new ObjectID(value);\n            } else if (key === 'level'){\n                 RevotioData[key] = value;\n            }\n        })\n        \n        if (PostData.gadgetData.name === 'Log out'){\n            LogOut = msg;\n        } else {\n            msg.payload = {\n                Page :  PostData.gadgetData.Page,\n                RevotioData: RevotioData\n            };\n        Redirect = msg;\n        }\n    } else if (msg.RevotioData.PostData.gadgetData.hasOwnProperty(\"lazyload\")){\n        lazyload = msg;\n    } else  {\n        Button = msg;\n    }\n}\nreturn [Load , Redirect, Button,lazyload, LogOut ];","outputs":5,"noerr":0,"x":470,"y":740,"wires":[["e8586971.9e6628"],["d95079f7.8dc1d8"],["7b9b867f.a3c968"],["d83737b2.6834a"],["679d95fb.063114"]],"outputLabels":["Load , , ,,  ","Redirect","Button","lazyload","LogOut"]},{"id":"7b9b867f.a3c968","type":"function","z":"d8703926.e2eca","name":"Route menu button action","func":"var CreateOrg, CreateProject, CreateEmployee, CreateWorkPackage, CreateUser \nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n\n msg.RevotioData.FlowData.Form = {\n        \n            participant_id: PostData.gadgetData.participant_id,\n            employee_id: PostData.gadgetData.employee_id,\n            user_id: PostData.gadgetData.user_id,\n            work_package_id: PostData.gadgetData.work_package_id,\n            project_id: PostData.gadgetData.project_id,\n            Page: PostData.gadgetData.Page,\n            organization_id:PostData.gadgetData.organization_id,\n            FormActionType  : \"Create\",\n    };\n    \n    \nvar label = PostData.gadgetData.label\n\nif (label === \"Create organization\"){\n    \n    msg.RevotioData.FlowData.Form.FormType  =  \"Organization\";\n    \n} else if (label === \"Create project\"){\n    msg.RevotioData.FlowData.Form.FormType  =  \"Project\";\n    \n} else if (label === \"Create employee\"){\n    msg.RevotioData.FlowData.Form.FormType  =  \"Employee\";\n   \n} else if (label === \"Create work package\"){\n    msg.RevotioData.FlowData.Form.FormType  =  \"WorkPackage\";\n  \n} else if (label === \"Create user\"){\n    msg.RevotioData.FlowData.Form.FormType  =  \"User\";\n    \n} else if (label === \"Create participant\"){\n    msg.RevotioData.FlowData.Form.FormType  =  \"Participant\";\n    \n}\n\n\n\n\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":760,"wires":[["94ef6924.94c9"]]},{"id":"f4a4b08d.99226","type":"link out","z":"d8703926.e2eca","name":"Form action gadget trigger","links":["c3e01de.eb492e","8861694b.da87f8"],"x":635,"y":540,"wires":[]},{"id":"39ddf0ca.0692a","type":"comment","z":"d8703926.e2eca","name":"*************************************************************************************************************** MENU ***************************************************************************************************************","info":"","x":660,"y":380,"wires":[]},{"id":"7d24cd64.3083e4","type":"comment","z":"d8703926.e2eca","name":"***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************","info":"","x":2510,"y":440,"wires":[]},{"id":"d83737b2.6834a","type":"function","z":"d8703926.e2eca","name":"Route lazyload actions","func":"var global , admin_users, organization, organization_users, sub_organizations;\n\nif (msg.RevotioData.PostData.gadgetData.lazyload === \"global\"){\n    global = msg;\n} else if (msg.RevotioData.PostData.gadgetData.lazyload === \"admin_users\"){\n    admin_users = msg;\n}else if (msg.RevotioData.PostData.gadgetData.lazyload === \"organizations\"){\n   organization = msg;\n} else if ( msg.RevotioData.PostData.gadgetData.lazyload === \"organization_users\"){\n    organization_users = msg;\n} else if ( msg.RevotioData.PostData.gadgetData.lazyload === \"sub_organizations\"){\n    sub_organizations = msg;\n}\n\n\n\n\nreturn [global,admin_users, organization, organization_users, sub_organizations];","outputs":5,"noerr":0,"x":760,"y":880,"wires":[["e8586971.9e6628"],["386024ac.f579bc"],["fe6bd026.750e2"],["8c0473e0.6063c8"],["1dfc0e60.c5afa2"]],"outputLabels":["global","admin_users","organization","organization_users","sub_organization"]},{"id":"e7218436.a12638","type":"comment","z":"d8703926.e2eca","name":"Global","info":"","x":1570,"y":600,"wires":[]},{"id":"29ad9a18.baaabe","type":"comment","z":"d8703926.e2eca","name":"Projects","info":"","x":3480,"y":1020,"wires":[]},{"id":"1a66dda9.fedaaa","type":"comment","z":"d8703926.e2eca","name":"Employee","info":"","x":3480,"y":1100,"wires":[]},{"id":"d667451e.4184b","type":"comment","z":"d8703926.e2eca","name":"Work Packages","info":"","x":3460,"y":1140,"wires":[]},{"id":"932a0861.e7349","type":"comment","z":"d8703926.e2eca","name":"Participants","info":"","x":3470,"y":1180,"wires":[]},{"id":"6e83b2ce.9f7a8c","type":"comment","z":"d8703926.e2eca","name":"Users","info":"","x":1410,"y":860,"wires":[]},{"id":"8dfc63b7.761c88","type":"function","z":"d8703926.e2eca","name":"Get Employee's","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nfindManyObj = {\n                    query : {\n                            query :{\n                                        organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id)\n                                    }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n\n","outputs":1,"noerr":0,"x":3620,"y":1100,"wires":[["1835b72b.da7a11"]]},{"id":"a639db7a.2e08b8","type":"function","z":"d8703926.e2eca","name":"Get WorkPackages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nfindManyObj = {\n                    query : {\n                            query : {  \"project_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.project_id)          }\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'work_packages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n\n\n\n       \n      \n\n","outputs":1,"noerr":0,"x":3630,"y":1140,"wires":[["e1090468.f206a8"]]},{"id":"63e1174.27fbce8","type":"function","z":"d8703926.e2eca","name":"Participants","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n            aggregateObj = {\n                    query : { \n                        query : [\n        { \n            \"$match\" : {\n                \"project_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.project_id),\n            //   \"project_id\" : new ObjectID(\"59b90b74bf96cb29b258ea30\"),\n               type: \"project\"\n            }\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"organizations\", \n                \"localField\" : \"organization_id\", \n                \"foreignField\" : \"_id\", \n                \"as\" : \"organizationData\"\n            }\n        }, \n        { \n            \"$unwind\" : {\n                \"path\" : \"$organizationData\",\n                includeArrayIndex : \"arrayIndex\", // optional\n                preserveNullAndEmptyArrays : false // optional\n            }\n        },\n    ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n            \n            \n// msg.payload = \n//      , \n//     { \n//         \"allowDiskUse\" : false\n//     };\n    \n\n// msg.operation = \"aggregate.toArray\" ;\n// return msg;","outputs":1,"noerr":0,"x":3610,"y":1180,"wires":[["cb44a011.cc27e"]]},{"id":"abf7a14a.1f1fc","type":"function","z":"d8703926.e2eca","name":"Get org Participant projects","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar mongodbTools = global.get('mongodbTools');\n\n\n// aggregate\n            aggregateObj = {\n                        query : {\n                            query : [\n                                { \n                                    \"$match\" : {\n                                        \"organization_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id), \n                                        \"type\" : \"project\"\n                                    }\n                                }, \n                                { \n                                    \"$lookup\" : {\n                                        \"from\" : \"projects\", \n                                        \"localField\" : \"project_id\", \n                                        \"foreignField\" : \"_id\", \n                                        \"as\" : \"projectData\"\n                                    }\n                                }, \n                               \n                             { \n                                    \"$lookup\" : {\n                                        \"from\" : \"participants\", \n                                        \"localField\" : \"project_id\", \n                                        \"foreignField\" : \"project_id\", \n                                        \"as\" : \"projectParticipants\"\n                                    }\n                                }, \n                                { \n                                    \"$lookup\" : {\n                                        \"from\" : \"work_packages\", \n                                        \"localField\" : \"project_id\", \n                                        \"foreignField\" : \"project_id\", \n                                        \"as\" : \"work_packages\"\n                                    }\n                                }, \n                                 { \n                                    \"$unwind\" : {\n                                        \"path\" : \"$projectData\", \n                                        \"includeArrayIndex\" : \"arrayIndex\", \n                                        \"preserveNullAndEmptyArrays\" : false\n                                    }\n                                },\n                                 { \n                                    \"$lookup\" : {\n                                        \"from\" : \"settings\", \n                                        \"localField\" : \"projectData.funding_scheme\", \n                                        \"foreignField\" : \"_id\", \n                                        \"as\" : \"projectData.funding_scheme_data\"\n                                    }\n                                }, \n                                 { \n                                    \"$unwind\" : {\n                                        \"path\" : \"$projectData.funding_scheme_data\", \n                                        \"includeArrayIndex\" : \"arrayIndex\", \n                                        \"preserveNullAndEmptyArrays\" : false\n                                    }\n                                },\n                                { $project : \n                                    {'projectData.funding_scheme_data' :1, 'projectData.name' : 1 ,'organization_id' : 1 ,'project_id' : 1 , 'projectData.Department' : 1,'projectData._id' : 1,   \"projectParticipants\" : { $size: \"$projectParticipants\" } , 'work_packages':  { $size: \"$work_packages\" }  } \n                                }\n                                \n                            ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n            \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = lodash.orderBy(res, ['projectData.name'] [\"asc\"])\n                    // msg.resultGrouped = lodash.groupBy(res, \"projectData.name\")\n                    settingsObj = {\n                        query : {\n                            query :\n                                {type : \"Department\",   \"organization_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id), }\n                                \n                                       },\n                                            connection:global.get(\"DB_data.connection\"),\n                                            database:global.get(\"DB_data.appDB\"),\n                                            collection:'settings',\n                                            operation:'find',\n                                            }\n                        mongodbTools.resolveAsync(settingsObj, node, function(res){\n                            msg.settings = res\n                            node.send(msg) \n                            \n                        })\n            })  ","outputs":1,"noerr":0,"x":3660,"y":1020,"wires":[["cf4f1007.433d38"]]},{"id":"5e9c7d87.c185c4","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1300,"y":580,"wires":[[]]},{"id":"cf4f1007.433d38","type":"function","z":"d8703926.e2eca","name":"Create response obj - Projects","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar mongodbTools = global.get('mongodbTools');\n\n// msg.resultGrouped.test = []\n\nvar Childs = [ {\n                    name: \"Create project\",\n                    label: \"Create project\",\n                    button: true,\n                    group : false,\n                    buttonType: \"success\",\n                    iconName: global.get(\"icons.fas.create\"),\n                    // iconUrl: 'https://revotio.nl/webpages/images/icons/Add.svg',\n                    iconState: true,\n                    organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                    inner:[]\n                },\n               ]\nmsg.test = []\n\nif (msg.result.length > 0){\n    Childs.push({\n                        name: \"Projects\",\n                        label: \"Projects\",\n                        group : true,\n                        // iconName: global.get(\"icons.fas.project\"),\n                        iconState: true,\n                        iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n                        filePath :global.get(\"icons.images.project\") ,\n                        bubble: msg.payload.length,\n                        organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                        redirect : false,\n                        inner: []\n                })\n\n\n    // groupedProjects = lodash.groupBy(lodash.orderBy(msg.payload, [\"projectData.name\"], [\"asc\"]), \"projectData.Department\");\n\n    _.each(lodash.groupBy(lodash.orderBy(msg.result, [\"projectData.name\"], [\"asc\"]), \"projectData.Department\"), function(DepartmentItem, DepartmentItemID){\n\n                    settingsObj = {} ;\n                    _.each(msg.settings, function(settingsItem,settingsItemIndex ){\n                        if (String(settingsItem._id) === String(DepartmentItemID)){\n                           settingsObj =  settingsItem\n                        }\n                    })\n                    \n            if (Object.keys(settingsObj).length > 0 ){\n                \n                 if (lodash.findIndex(Childs[1].inner, {name: settingsObj.name}) < 0){\n                    \n                    Childs[1].inner.push({              \n                                    name: settingsObj.name,\n                                    label: settingsObj.name,\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.open\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                                    iconState: true,\n                                    bubble: DepartmentItem.length,\n                                    redirect : false,\n                                    // Page: 'project overview',\n                                    // organization_id : new ObjectID(Item.organization_id),\n                                    // project_id :  new ObjectID(Item.project_id),\n                                    inner: []})\n                    \n                }\n                \n                DeptIndex  = lodash.findIndex(Childs[1].inner, {name: settingsObj.name})\n\n\n                _.each(DepartmentItem, function(projectItem, projectItemIndex){\n                                \n                                if (projectItem.projectData.funding_scheme_data.hasOwnProperty(\"complexity_level\") === false  || projectItem.projectData.funding_scheme_data.complexity_level  === \"basic\"){\n                                    \n                                    Childs[1].inner[DeptIndex].inner.push({\n                                            name: projectItem.projectData.name,\n                                            label: projectItem.projectData.name,\n                                            group : true,\n                                            // iconName: global.get(\"icons.fas.project\"),\n                                            iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n                                             filePath :global.get(\"icons.images.project\") ,\n                                            // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n                                            iconState: true,\n                                            bubble: '',\n                                            organization_id : new ObjectID(projectItem.organization_id),\n                                            project_id :  new ObjectID(projectItem.project_id),\n                                            redirect : false,\n                                            inner: [\n                                                  {              \n                                                    name: \"Open \" + projectItem.projectData.name,\n                                                    label: \"Open \" + projectItem.projectData.name,\n                                                    group : false,\n                                                    iconName: global.get(\"icons.fas.open\"),\n                                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                                                    iconState: true,\n                                                    bubble: '',\n                                                    redirect : true,\n                                                    Page: 'project overview',\n                                                    organization_id : new ObjectID(projectItem.organization_id),\n                                                    project_id :  new ObjectID(projectItem.project_id),\n                                                    inner: []},\n                                                {               \n                                                        State: \"Inactive\",\n                                                        name: \"Participants\",\n                                                        label: \"Participants\",\n                                                        group : true,\n                                                        iconName: global.get(\"icons.fas.participants\"),\n                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Flag.svg', \n                                                        iconState: true,\n                                                        bubble: projectItem.projectParticipants,\n                                                        redirect : false,\n                                                        lazyload:  \"participants\",\n                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                        scope: '',\n                                                        inner: [],\n                                                        },\n                                                {    \n                                            name: \"Reporting period management\",\n                                            label: \"Reporting period management\",\n                                            group : true,\n                                            iconName: global.get(\"icons.fas.calendar\"),\n                                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                            iconState: true,\n                                            bubble: '',\n                                            redirect : true,\n                                            Page: 'reporting_period',\n                                            organization_id : new ObjectID(projectItem.organization_id),\n                                            project_id :  new ObjectID(projectItem.project_id),\n                                            // level : 'project',\n                                            scope: '',\n                                            inner: [],\n                                                },\n                                                {    \n                                                    State: \"Inactive\",\n                                                    name: \"Work packages\",\n                                                    label: \"Work packages\",\n                                                    group : true,\n                                                    iconName: global.get(\"icons.fas.work_package\"),\n                                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                    iconState: true,\n                                                    bubble: projectItem.work_packages,\n                                                    redirect : true,\n                                                    Page: 'work_package_management',\n                                                    // lazyload: \"work packages\",\n                                                    organization_id : new ObjectID(projectItem.organization_id),\n                                                    project_id :  new ObjectID(projectItem.project_id),\n                                                    scope: '',\n                                                    inner: [],\n                                                    },\n                                                    {    \n                                                    State: \"Inactive\",\n                                                    name: \"Dashboard\",\n                                                    label: \"Dashboard\",\n                                                    group : true,\n                                                    iconName: global.get(\"icons.fas.dashboard\"),\n                                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                    iconState: true,\n                                                    bubble: 2,\n                                                    redirect : true,\n                                                    Page: 'project dashboard',\n                                                    organization_id : new ObjectID(projectItem.organization_id),\n                                                    project_id :  new ObjectID(projectItem.project_id),\n                                                    scope: '',\n                                                    inner: [\n                                                        \n                                                         {\n                                                            name: \"Transactions dashboard\",\n                                                            label: \"Transactions dashboard\",\n                                                            group : false,\n                                                            iconName: global.get(\"icons.fas.dashboard\"),\n                                                            iconState: true,\n                                                            bubble: '',\n                                                            Page: \"transactions dashboard\",\n                                                            organization_id : new ObjectID(projectItem.organization_id),\n                                                            project_id :  new ObjectID(projectItem.project_id),\n                                                            redirect : true,\n                                                            inner: []\n                                                    },\n                                                        {\n                                                            name: \"Project dashboard\",\n                                                            label: \"Project dashboard\",\n                                                            group : false,\n                                                            iconName: global.get(\"icons.fas.dashboard\"),\n                                                            iconState: true,\n                                                            bubble: '',\n                                                            Page: \"project dashboard\",\n                                                            organization_id : new ObjectID(projectItem.organization_id),\n                                                            project_id :  new ObjectID(projectItem.project_id),\n                                                            redirect : true,\n                                                            inner: []\n                                                    }],\n                        },\n                        {    \n                                                    State: 'Inactive',\n                                                    name: \"file management\",\n                                                    label: \"File management\",\n                                                    group : true,\n                                                    iconName: global.get(\"icons.fas.file_management\"),\n                                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                    iconState: true,\n                                                    bubble: '',\n                                                    redirect : true,\n                                                    Page: 'file management',\n                                                    organization_id : new ObjectID(projectItem.organization_id),\n                                                    project_id :  new ObjectID(projectItem.project_id),\n                                                    level : 'project',\n                                                    scope: '',\n                                                    inner: [],\n                        },\n                        {    \n                                            name: \"Calendar\",\n                                            label: \"Calendar\",\n                                            group : true,\n                                            iconName: global.get(\"icons.fas.calendar\"),\n                                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                            iconState: true,\n                                            bubble: '',\n                                            redirect : true,\n                                            Page: 'calendar',\n                                            organization_id : new ObjectID(projectItem.organization_id),\n                                            project_id :  new ObjectID(projectItem.project_id),\n                                            level : 'project',\n                                            scope: '',\n                                            inner: [],\n                },\n                     \n                \n                        ],\n                                \n                                \n                            })\n                                }\n                                if (projectItem.projectData.funding_scheme_data.hasOwnProperty(\"complexity_level\") === true  && projectItem.projectData.funding_scheme_data.complexity_level  === \"advanced\"){\n                              \n                                        //  _.each(DepartmentItem, function(projectItem, Index){\n                                                        Childs[1].inner[DeptIndex].inner.push({\n                                                                name: projectItem.projectData.name,\n                                                                label: projectItem.projectData.name,\n                                                                group : true,\n                                                                // iconName: global.get(\"icons.fas.project\"),\n                                                                iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n                                                                 filePath :global.get(\"icons.images.project\") ,\n                                                                // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n                                                                iconState: true,\n                                                                bubble: '',\n                                                                organization_id : new ObjectID(projectItem.organization_id),\n                                                                project_id :  new ObjectID(projectItem.project_id),\n                                                                redirect : false,\n                                                                inner: [\n                                                                      {              \n                                                                        name: \"Open \" + projectItem.projectData.name,\n                                                                        label: \"Open \" + projectItem.projectData.name,\n                                                                        group : false,\n                                                                        iconName: global.get(\"icons.fas.open\"),\n                                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                                                                        iconState: true,\n                                                                        bubble: '',\n                                                                        redirect : true,\n                                                                        Page: 'project overview',\n                                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                                        inner: []},\n                                                                         {               \n                                                                        State: \"Inactive\",\n                                                                        name: \"Participants\",\n                                                                        label: \"Participants\",\n                                                                        group : true,\n                                                                        iconName: global.get(\"icons.fas.participants\"),\n                                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Flag.svg', \n                                                                        iconState: true,\n                                                                        bubble: projectItem.projectParticipants,\n                                                                        redirect : false,\n                                                                        lazyload: \"participants\",\n                                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                                        scope: '',\n                                                                        inner: [],\n                                                                        },\n                                                                        {    \n                                                                        State: \"Inactive\",\n                                                                        name: \"Work packages\",\n                                                                        label: \"Work packages\",\n                                                                        group : true,\n                                                                        iconName: global.get(\"icons.fas.work_package\"),\n                                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                                        iconState: true,\n                                                                        bubble: projectItem.work_packages,\n                                                                        redirect : true,\n                                                                        Page: 'work_package_management',\n                                                                        // lazyload: \"work packages\",\n                                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                                        scope: '',\n                                                                        inner: [],\n                                                                        },\n                                                                        {    \n                                                                        State: \"Inactive\",\n                                                                        name: \"Dashboard\",\n                                                                        label: \"Dashboard\",\n                                                                        group : true,\n                                                                        iconName: global.get(\"icons.fas.dashboard\"),\n                                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                                        iconState: true,\n                                                                        bubble: 1,\n                                                                        redirect : true,\n                                                                        Page: 'project dashboard',\n                                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                                        scope: '',\n                                                                        inner: [{\n                                                                                name: \"Project dashboard\",\n                                                                                label: \"Project dashboard\",\n                                                                                group : false,\n                                                                                iconName: global.get(\"icons.fas.dashboard\"),\n                                                                                iconState: true,\n                                                                                bubble: '',\n                                                                                Page: \"project dashboard\",\n                                                                                organization_id : new ObjectID(projectItem.organization_id),\n                                                                                project_id :  new ObjectID(projectItem.project_id),\n                                                                                redirect : true,\n                                                                                inner: []\n                                                                        }],\n                                                                        },\n                                                                        {    \n                                                                        State: 'Inactive',\n                                                                        name: \"file management\",\n                                                                        label: \"File management\",\n                                                                        group : true,\n                                                                        iconName: global.get(\"icons.fas.file_management\"),\n                                                                        // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                                        iconState: true,\n                                                                        bubble: '',\n                                                                        redirect : true,\n                                                                        Page: 'file management',\n                                                                        organization_id : new ObjectID(projectItem.organization_id),\n                                                                        project_id :  new ObjectID(projectItem.project_id),\n                                                                        level : 'project',\n                                                                        scope: '',\n                                                                        inner: [],\n                                                                },\n                                                                {    \n                                                                name: \"Calendar\",\n                                                                label: \"Calendar\",\n                                                                group : true,\n                                                                iconName: global.get(\"icons.fas.calendar\"),\n                                                                // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                                                iconState: true,\n                                                                bubble: '',\n                                                                redirect : true,\n                                                                Page: 'calendar',\n                                                                organization_id : new ObjectID(projectItem.organization_id),\n                                                                project_id :  new ObjectID(projectItem.project_id),\n                                                                level : 'project',\n                                                                scope: '',\n                                                                inner: [],\n                                                         }],\n                                                })\n                                // })\n                                }\n                \n                })\n                } \n                \n                \n            else {\n                \n                // get child index \n                \n                 _.each(DepartmentItem, function(projectItem, Index){\n                    Childs[1].inner.push({\n                            name: projectItem.projectData.name,\n                            label: projectItem.projectData.name,\n                            group : true,\n                            // iconName: global.get(\"icons.fas.project\"),\n                            iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\",\n                             filePath :global.get(\"icons.images.project\") ,\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n                            iconState: true,\n                            bubble: '',\n                            organization_id : new ObjectID(projectItem.organization_id),\n                            project_id :  new ObjectID(projectItem.project_id),\n                            redirect : false,\n                            inner: [\n                                  {              \n                                    name: \"Open \" + projectItem.projectData.name,\n                                    label: \"Open \" + projectItem.projectData.name,\n                                    group : false,\n                                    iconName: global.get(\"icons.fas.open\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                                    iconState: true,\n                                    bubble: '',\n                                    redirect : true,\n                                    Page: 'project overview',\n                                    organization_id : new ObjectID(projectItem.organization_id),\n                                    project_id :  new ObjectID(projectItem.project_id),\n                                    inner: []},\n                                     {               \n                                    State: \"Inactive\",\n                                    name: \"Participants\",\n                                    label: \"Participants\",\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.participants\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Flag.svg', \n                                    iconState: true,\n                                    bubble: projectItem.projectParticipants,\n                                    redirect : false,\n                                    lazyload: \"participants\",\n                                    organization_id : new ObjectID(projectItem.organization_id),\n                                    project_id :  new ObjectID(projectItem.project_id),\n                                    scope: '',\n                                    inner: [],\n                                    },\n                                    {    \n                                    State: \"Inactive\",\n                                    name: \"Work packages\",\n                                    label: \"Work packages\",\n                                    group : true,\n                                    Page: 'work_package_management',\n                                    iconName: global.get(\"icons.fas.work_package\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                    iconState: true,\n                                    bubble: projectItem.work_packages,\n                                    redirect : true,\n                                    // lazyload: \"work packages\",\n                                    organization_id : new ObjectID(projectItem.organization_id),\n                                    project_id :  new ObjectID(projectItem.project_id),\n                                    scope: '',\n                                    inner: [],\n        },\n        {    \n                                    State: \"Inactive\",\n                                    name: \"Dashboard\",\n                                    label: \"Dashboard\",\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.dashboard\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                    iconState: true,\n                                    bubble: 1,\n                                    redirect : true,\n                                    Page: 'project dashboard',\n                                    organization_id : new ObjectID(projectItem.organization_id),\n                                    project_id :  new ObjectID(projectItem.project_id),\n                                    scope: '',\n                                    inner: [{\n                                            name: \"Project dashboard\",\n                                            label: \"Project dashboard\",\n                                            group : false,\n                                            iconName: global.get(\"icons.fas.dashboard\"),\n                                            iconState: true,\n                                            bubble: '',\n                                            Page: \"project dashboard\",\n                                            organization_id : new ObjectID(projectItem.organization_id),\n                                            project_id :  new ObjectID(projectItem.project_id),\n                                            redirect : true,\n                                            inner: []\n                                    }],\n        },\n        {    \n                                    State: 'Inactive',\n                                    name: \"file management\",\n                                    label: \"File management\",\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.file_management\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                    iconState: true,\n                                    bubble: '',\n                                    redirect : true,\n                                    Page: 'file management',\n                                    organization_id : new ObjectID(projectItem.organization_id),\n                                    project_id :  new ObjectID(projectItem.project_id),\n                                    level : 'project',\n                                    scope: '',\n                                    inner: [],\n        }\n        ],\n                \n                \n            })\n                })\n                \n            }\n            \n            \n        })\n}\n\nChilds.push({\n                            name: \"Dashboards\",\n                            label: \"Dashboards\",\n                            button: true,\n                           organization_id :new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                            buttonType: \"success\",\n                            group : true,\n                            bubble : 2, \n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                            iconState: true,\n                            inner:[ {    \n                                    name: \"Involvement dashboard\",\n                                    label: \"Involvement dashboard\",\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.dashboard\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                    iconState: true,\n                                    bubble: '',\n                                    redirect : true,\n                                    Page: 'dashboard - involvement',\n                                    organization_id :new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                                    scope: '',\n                                    inner: [],\n                                },{    \n                                    name: \"organization cockpit dashboard\",\n                                    label: \"Organization cockpit dashboard\",\n                                    group : true,\n                                    iconName: global.get(\"icons.fas.dashboard\"),\n                                    // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                                    iconState: true,\n                                    bubble: '',\n                                    redirect : true,\n                                    Page: 'organization cockpit dashboard',\n                                    organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                                    scope: '',\n                                    inner: [],\n                                },]  \n            })   \n       \nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : \n            {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs}\n        \n    }]\n}\n        \n        \nreturn msg;","outputs":1,"noerr":0,"x":4270,"y":1060,"wires":[["b8cba8eb.07bea8"]]},{"id":"cb44a011.cc27e","type":"function","z":"d8703926.e2eca","name":"Create response obj - Participants","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n\nvar Childs = [ ]\n\n\n\n_.each(lodash.orderBy(msg.payload, [\"organizationData.name\"], [\"asc\"]), function(Item, index){\n    \n    organizationData = Item.organizationData\n    projectData = Item.projectData\n    \n    if (index === 0){\n        Childs.push( {\n                        name: \"Create participant\",\n                        label: \"Create participant\",\n                        // ProjectName: projectData.name,\n                        button: true,\n                        group : false,\n                        buttonType: \"success\",\n                        Entity: \"project\",\n                        Level: \"project\",\n                        iconName: global.get(\"icons.fas.create\"),\n                        // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                        iconState: true,\n                        // Page : \"participant overview\",\n                        // organization_id : Item.organization_id,\n                        project_id : Item.project_id,\n                        organization_id : Item.organization_id,\n                        inner:[]\n                        })\n    }\n    \n    \n    organizationObj = {    \n                            // State:State,\n                            name: organizationData.name,\n                            label: organizationData.name,\n                            group : false,\n                            // iconName: global.get(\"icons.fas.participants\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Compas.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'participant overview',\n                            organization_id : Item.organization_id,\n                            project_id : Item.project_id,\n                            participant_id : Item._id,\n                            scope: '',\n                            inner: [],\n                            }\n            \n             if (Item.hasOwnProperty(\"logo\")){\n                    organizationObj.iconUrl =   global.get(\"functions.fileManagement\")(  Item.logo.url, Item.logo.url ,msg.RevotioData.session._id, \"copySync\"), \n                    organizationObj.filePath = Item.logo.url;\n                } else {\n                    organizationObj.iconName =  global.get(\"icons.fas.participants\");\n                }\n            Childs.push(organizationObj)\n    \n    \n})\n\n  \n\n    \n\n\n\n\n              \n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : \n            {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs}\n        \n    }]\n}\n// node.send(msg)\n\n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : {\n//             parent: msg.RevotioData.PostData.gadgetData,\n//             childs : Childs\n//         }\n//     }]\n// }\n\nreturn msg;","outputs":1,"noerr":0,"x":4280,"y":1180,"wires":[["b8cba8eb.07bea8"]]},{"id":"e1090468.f206a8","type":"function","z":"d8703926.e2eca","name":"Create response obj - Work Packages","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n\nvar Childs = [ ]\n\nChilds.push( {\n                        name: \"Create work package\",\n                        label: \"Create work package\",\n                        button: true,\n                        group : false,\n                        buttonType: \"success\",\n                        iconName: global.get(\"icons.fas.create\"),\n                        // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                        iconState: true,\n                        Page : \"work package overview\",\n                        organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                        project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                        inner:[]\n                        })\n\n_.each(lodash.orderBy(msg.payload, [\"organizationData.name\"], [\"asc\"]), function(Item, index){\n    \n    organizationData = Item.organizationData\n    projectData = Item.projectData\n\n    Childs.push( { \n                           \n                            name: Item.work_package_name,\n                            label: Item.work_package_name,\n                            group : true,\n                            iconName: global.get(\"icons.fas.work_package\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : false,\n                            work_package_id : Item._id,\n                            organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                            project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                            scope: '',\n                            inner: [\n                                {\n                               \n                                name: \"Open \" + Item.work_package_name,\n                                label: \"Open \" + Item.work_package_name,\n                                button: true,\n                                redirect : true,\n                                group : false,\n                                buttonType: \"success\",\n                                iconName: global.get(\"icons.fas.open\"),\n                                // iconUrl: 'https://revotio.nl/webpages/images/Icons/Airplane.svg',\n                                iconState: true,\n                                Page : \"work package overview\",\n                                work_package_id : Item._id,\n                                organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                                project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                                inner:[]\n                                },\n                                {    \n                               \n                                name:  Item.work_package_name + \" Participants\",\n                                label:  Item.work_package_name+ \" Participants\",\n                                group : true,\n                                buttonType: \"success\",\n                                iconName: global.get(\"icons.fas.participants\"),\n                                // iconUrl: 'https://revotio.nl/webpages/Icons/Compas.svg', \n                                iconState: true,\n                                bubble: '',\n                                redirect : false,\n                                lazyload: \"WP participant\",\n                                work_package_id : Item._id,\n                                organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                                project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                                scope: '',\n                                inner: [],\n                                },\n                                {    \n                          \n                            name: \"Dashboard\",\n                            label: \"Dashboard\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'workpackage dashboard',\n                            work_package_id : Item._id,\n                            organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                            project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                            WorkPackageName: Item.work_package_name,\n                            scope: '',\n                            inner: [],\n},\n{    \n                           \n                            name: \"file management\",\n                            label: \"File management\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.file_management\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            page: 'file management',\n                            work_package_id : Item._id,\n                            organization_id : msg.RevotioData.PostData.gadgetData.organization_id,\n                            project_id : msg.RevotioData.PostData.gadgetData.project_id,\n                            WorkPackageName: Item.work_package_name,\n                            level : 'work package',\n                            scope: '',\n                            inner: [],\n}\n],\n})\n    \n    \n})\n\n  \n\n    \n\n              \n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : \n            {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs}\n        \n    }]\n}\n// node.send(msg)\n\n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : {\n//             parent: msg.RevotioData.PostData.gadgetData,\n//             childs : Childs\n//         }\n//     }]\n// }\n\nreturn msg;","outputs":1,"noerr":0,"x":4290,"y":1140,"wires":[["b8cba8eb.07bea8"]]},{"id":"cb681fc.300b76","type":"function","z":"d8703926.e2eca","name":"WPParticipants","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\n            aggregateObj = {\n                    query : { \n                        query : [\n        { \n            \"$match\" : {\n               \n                \"work_package_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.work_package_id) ,\n              \"project_id\" : new ObjectID(msg.RevotioData.PostData.gadgetData.project_id),\n              type: \"work_package\"\n              \n            }\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"organizations\", \n                \"localField\" : \"organization_id\", \n                \"foreignField\" : \"_id\", \n                \"as\" : \"organizationData\"\n            }\n        }, \n        { \n            \"$unwind\" : {\n                \"path\" : \"$organizationData\"\n            }\n        },\n    ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'participants',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n// msg.payload = \n//      , \n//     { \n//         \"allowDiskUse\" : false\n//     };\n    \n\n// msg.operation = \"aggregate.toArray\" ;\n// return msg;","outputs":1,"noerr":0,"x":3620,"y":1220,"wires":[["60ffff06.c345a8"]]},{"id":"60ffff06.c345a8","type":"function","z":"d8703926.e2eca","name":"Create response obj - WPParticipants","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n// filter work_package items\n\nParticipants = []\n\n_.each(msg.payload, function(Item, Index){\n    \n    if (Item.permission === 0 || Item.work_package_id === msg.RevotioData.PostData.gadgetData.work_package_id){\n       Participants.push(Item) \n    }\n    \n})\n\nmsg.Participants = Participants ;\n\n\nvar Childs = [ ]\n\n\n\n_.each(lodash.orderBy(Participants, [\"organizationData.name\"], [\"asc\"]), function(Item, index){\n    \n    organizationData = Item.organizationData\n    // projectData = Item.projectData\n    \n    if (index === 0){\n        Childs.push( {\n                        name: \"Create participant\",\n                        label: \"Create participant\",\n                        // ProjectName: projectData.name,\n                        button: true,\n                        group : false,\n                        buttonType: \"success\",\n                        Entity: \"project\",\n                        Level: \"project\",\n                        iconName: global.get(\"icons.fas.create\"),\n                        // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n                        iconState: true,\n                        Page : \"participant overview\",\n                        // organization_id : Item.organization_id,\n                        project_id : Item.project_id,\n                        organization_id : Item.organization_id,\n                        work_package_id: msg.RevotioData.PostData.gadgetData.work_package_id,\n                        inner:[]\n                        })\n    }\n    \n    \n    Childs.push(  {    \n                            // State:State,\n                            name: organizationData.name,\n                            label: organizationData.name,\n                            group : false,\n                            iconName: global.get(\"icons.fas.participants\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Compas.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'participant overview',\n                            organization_id : Item.organization_id,\n                            project_id : Item.project_id,\n                            participant_id : Item._id,\n                            work_package_id: msg.RevotioData.PostData.gadgetData.work_package_id,\n                            scope: '',\n                            inner: [],\n                            })\n    \n    \n})\n\n  \n\n    \n\n\n\n\n              \n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : \n//             Childs\n        \n//     }]\n// }\n// node.send(msg)\n\n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs} \n        // {\n        //     parent: msg.RevotioData.PostData.gadgetData,\n        //     childs : Childs\n        // }\n    }]\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":4290,"y":1220,"wires":[["b8cba8eb.07bea8"]]},{"id":"1835b72b.da7a11","type":"function","z":"d8703926.e2eca","name":"Create response obj - Employee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n\nvar Childs = [ ]\n\n Childs.push( {\n                name: 'Employee global',\n                label: 'Employee global',\n                group : false,\n                // iconName: global.get(\"icons.fas.users\"),\n                iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\",\n                filePath :global.get(\"icons.images.user\") ,\n                iconState: true,\n                \n                bubble: '',\n                Page: \"employee global\",\n                organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                redirect : true,\n                inner: []\n        },\n        {\n                    name: \"Create employee\",\n                    label: \"Create employee\",\n                    button: true,\n                    group : false,\n                    buttonType: \"success\",\n                    iconName: global.get(\"icons.fas.create\"),\n                    // iconUrl: 'https://revotio.nl/webpages/images/icons/Add.svg',\n                    iconState: true,\n                    organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                    inner:[]\n                })  \n\n_.each(lodash.orderBy(msg.payload, [\"first_name\", \"last_name\"], [\"asc\", \"asc\"]), function(Item, index){\n    \n    // employees index\n    employeesIndex = lodash.findIndex(Childs, {name: \"Employee's\"})\n    \n    if (employeesIndex === -1){\n    \n    Childs.push({\n                name: \"Employee's\",\n                label: \"Employee's\",\n                group : true,\n                iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\",\n                 filePath :global.get(\"icons.images.user\") ,\n                // iconName: global.get(\"icons.fas.users\"),\n                iconState: true,\n                bubble: '',\n                organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                redirect : false,\n                inner: []\n        })\n        employeesIndex = lodash.findIndex(Childs, {name: \"Employee's\"})\n    }\n    \n    \n    \n    \n    \n    \nChilds[employeesIndex].inner.push( {\n        // State:EmployeeOverview,\n        name: Item.first_name + \" \" +  Item.last_name ,\n        label: Item.first_name + \" \" +  Item.last_name ,\n        group : true,\n        iconUrl:  global.get(\"functions.fileManagement\")(  Item.avatar, Item.avatar ,msg.RevotioData.session._id, \"copySync\"), \n         filePath :Item.avatar ,\n       iconState: true,\n        bubble: '',\n        employee_id :Item._id,\n        organization_id: new ObjectID(Item.organization_id),\n        redirect : false,\n        inner: [\n                {\n                            // State:EmployeeOverview,\n                            name: \"Overview\",\n                            label: \"Overview\",\n                            group : false,\n                            iconName: global.get(\"icons.fas.open\"),\n                            iconState: true,\n                            bubble: '',\n                            employee_id :Item._id,\n                            organization_id:new ObjectID(Item.organization_id),\n                            Page: 'employee overview',\n                            redirect : true,\n                            inner: [],\n                            },\n                             {\n                            // State:EmployeeInvolvement,\n                            name: 'Involvement',\n                            label: 'Involvement',\n                            group : false,\n                            iconName: global.get(\"icons.fas.calendar\"),\n                            iconState: true,\n                            bubble: '',\n                            employee_id :Item._id,\n                            organization_id:new ObjectID(Item.organization_id),\n                            Page: 'employee involvement',\n                            redirect : true,\n                            inner: [],\n                            },\n                             {\n                            // State:EmployeeProjectsOverview,\n                            name: 'Projects',\n                            label:\"Projects\",\n                            group : false,\n                            iconName:  global.get(\"icons.fas.project\"),\n                            iconState: true,\n                            bubble: '',\n                            employee_id :Item._id,\n                            organization_id:new ObjectID(Item.organization_id),\n                            Page: 'employee projects overview',\n                            redirect : true,\n                            inner: [],\n                            },\n                             {\n                            // State:EmployeeFileManagement,\n                            name: 'File management',\n                            label:  'File management',\n                            group : false,\n                            iconName:   global.get(\"icons.fas.file_management\"),\n                            iconState: true,\n                            bubble: '',\n                            employee_id :Item._id,\n                            organization_id: new ObjectID(Item.organization_id),\n                            Page: 'file management',\n                            redirect : true,\n                            level : 'employee',\n                            inner: [],\n                            },\n                              {    \n                            name: \"Calendar\",\n                            label: \"Calendar\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.calendar\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'calendar',\n                            employee_id :Item._id,\n                            organization_id: new ObjectID(Item.organization_id),\n                            level : 'employee',\n                            scope: '',\n                            inner: [],\n}\n                           \n                    ]})\n    \n})\n    \n// orderedEmployees = lodash.orderBy(employees, [\"name\" ] , ['asc'])\n\n\n\nChilds.push({\n                name: \"Dashboards\",\n                label: \"Dashboards\",\n                group : true,\n                iconName: global.get(\"icons.fas.dashboard\"),\n                iconState: true,\n                bubble: '1',\n                // Page: \"dashboard - involvement\",\n                organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                redirect : false,\n                inner: [{\n                        name: \"Involvement dashboard\",\n                        label: \"Involvement dashboard\",\n                        group : false,\n                        iconName: global.get(\"icons.fas.dashboard\"),\n                        iconState: true,\n                        bubble: '',\n                        Page: \"dashboard - involvement\",\n                        organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id),\n                        redirect : true,\n                        inner: []\n                }]\n        })\n\n    \n\n              \n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : \n            {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs}\n        \n    }]\n}\n// node.send(msg)\n\n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : {\n//             parent: msg.RevotioData.PostData.gadgetData,\n//             childs : Childs\n//         }\n//     }]\n// }\n\nreturn msg;","outputs":1,"noerr":0,"x":4270,"y":1100,"wires":[["b8cba8eb.07bea8"]]},{"id":"386024ac.f579bc","type":"function","z":"d8703926.e2eca","name":"Create response obj","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n// filter work_package items\n\n\n\n\nvar Childs = [ ]\n\n\n\n// _.each(lodash.orderBy(msg.payload, [\"UserAccountData.first_name\", \"UserAccountData.last_name\"], [\"asc\", \"asc\"]), function(Item, index){\n    \n//     UserAccountData = Item.UserAccountData[0]\n//     // projectData = Item.projectData\n    \n\n    \n    \n//     Childs.push(  {\n//             name:  Item.UserAccountData[0].first_name + \" \" +  Item.UserAccountData[0].last_name,\n//             label: Item.UserAccountData[0].first_name + \" \" +  Item.UserAccountData[0].last_name,\n//             group : false,\n//             button: false,\n//             Type: \"Admin_Users\",\n//             buttonType: \"warning\",\n//             iconUrl: Item.UserAccountData[0].avatar,\n//             iconState: true,\n//             redirect : true,\n//             Page : \"users overview\",\n//             organization_id:new ObjectID(global.get(\"MasterOrganizationData._id\")),\n//             Appuser_id : Item.user,\n//             inner:[]\n//             })\n            \n// })\n\n  \n\n    \n\n\n\n\n              \n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : \n//             Childs\n        \n//     }]\n// }\n// node.send(msg)\n\n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : Childs}\n                 \n                  \n        // {\n        //     parent: msg.RevotioData.PostData.gadgetData,\n        //     childs : Childs\n        // }\n    }]\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1580,"y":820,"wires":[["b8cba8eb.07bea8"]]},{"id":"fe6bd026.750e2","type":"function","z":"d8703926.e2eca","name":"Prepair msg.menu && route based on UserType","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\nmsg.menu = []           ;\nmsg.BreadCrumbData = {\n    Org : [],\n    Pro : [],\n    WP  : [],\n} ;\n\n\n\nvar OrgIds = [];\n\nindex = -1\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index ){\n    // if (Item.type_id === global.get(\"MasterOrganizationData._id\")){\n  if (String(Item.type_id) === String(global.get(\"MasterOrganizationData._id\")) ){\n//   if (new ObjectID(Item.type_id) === new ObjectID(global.get(\"MasterOrganizationData._id\")) ){\n       index =  Index\n    }\n})\nif (index > -1 || msg.RevotioData.session.UserData.UserAccountData.user_type === \"Admin_Users\" ){\n   match = {parent_id: { $exists: false} ,\"_id\": {\"$ne\": new ObjectID(global.get(\"MasterOrganizationData._id\"))}};\n    // msg.operation = \"find.toArray\";\n    \n} else {\n    // get organization ID's\n    \n    var ids = [];\n    \n    _.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index){\n        if (Item.type === \"organization\"){\n            ids.push(new ObjectID(Item.type_id))\n        }\n       \n       \n    })\n    match = {  _id: {\"$in\": ids}}; // parent_id: { $exists: false} ,\n    \n}\nmsg.time = {start : new Date()}\n// find \n            // findObj = {\n            //         query : {\n            //                 query :match, \n            //                 },\n            //         connection:global.get(\"DB_data.connection\"),\n            //         database:global.get(\"DB_data.appDB\"),\n            //         collection:'organizations',\n            //         operation:'find',\n            //         }\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: match\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"organizations\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"parent_id\",\n                                  \"as\": \"childOrganizations\"\n                                }\n                              },\n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                            //   {\n                            //     $unwind: {\n                            //       \"path\": \"$projectData\",\n                            //       \"includeArrayIndex\": \"arrayIndex\",\n                            //       \"preserveNullAndEmptyArrays\": false\n                            //     }\n                            //   }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'aggregate',\n                    }\n\n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n            \n            \n\n\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":1660,"y":860,"wires":[["586b1b7b.fd31c4"]],"outputLabels":["PNO, "]},{"id":"586b1b7b.fd31c4","type":"function","z":"d8703926.e2eca","name":"Create response object - users","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\nvar Childs = [ ]\n\n\n\n_.each(lodash.orderBy(msg.payload, [\"name\"], [\"asc\"]), function(Item, index){\n    \n    projects    = 0\n    employee    = 0\n    user        = 0\n    \n    // if (Item.hasOwnProperty(\"participants\")){\n        \n    //     if (lodash.groupBy(Item.participants, \"type\").hasOwnProperty(\"project\")){\n    //          projects = lodash.groupBy(Item.participants, \"type\").project.length ;\n    //     }   else {\n    //          projects = 0 ;\n    //     }\n       \n    // }\n    // if (Item.hasOwnProperty(\"employee\")){\n    //     employee = Item.employee.length\n    // }\n    // if (Item.hasOwnProperty(\"user\")){\n    //     user = Item.user.length\n    // }\n        \n        OrgObj = {    \n                name: Item.name,\n                label: Item.name,\n                group : true,\n                \n                // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_organization.svg',\n                iconState: true,\n                organization_id : Item._id,\n                bubble: 0,\n                inner:[{\n                  \n                    name: \"Projects\",\n                    label: \"Projects\",\n                    button: true,\n                    lazyload : \"projects\",\n                    buttonType: \"success\",\n                    group : true,\n                    organization_id : Item._id,\n                    // iconName: global.get(\"icons.images.project\"),\n                    iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_rocket.svg\", // global.get(\"icons.images.user\"),\n                    filePath :global.get(\"icons.images.project\") ,\n                    // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                    iconState: true,\n                    bubble : projects,\n                    inner:[]\n                        },\n                        {\n                   \n                    name: \"Employees\",\n                    label: \"Employees\",\n                    button: true,\n                    lazyload : \"employees\",\n                    organization_id : Item._id,\n                    buttonType: \"success\",\n                    group : true,\n                    // iconName: global.get(\"icons.images.employee\"),\n                    iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\", // global.get(\"icons.images.user\"),\n                    filePath :global.get(\"icons.images.user\") ,\n                    bubble : employee, \n                    // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                    iconState: true,\n                    inner:[]\n                        },\n                        {               \n                   \n                    name: 'Organization',\n                    label: 'Organization',\n                    group : true, \n                    iconName: global.get(\"icons.fas.organization\"),\n                    // iconUrl: 'https://revotio.com/webpages/Icons/Airplane.svg', \n                    iconState: true,\n                    bubble: '',\n                      organization_id : Item._id,\n                    redirect : false,\n                    inner: [\n                        {               \n                            name: 'Overview',\n                            label: 'Overview',\n                            group : false,\n                            iconName: global.get(\"icons.fas.organization\"),\n                            iconState: true,\n                            bubble: '',\n                            Page : 'organization overview',\n                              organization_id : Item._id,\n                            redirect : true,\n                            inner: []\n                        },\n                        \n                        // {               \n                        //     name: 'Cost',\n                        //     label: 'Cost',\n                        //     group : false,\n                        //     iconName: global.get(\"icons.fas.organization\"),\n                        //     iconState: true,\n                        //       organization_id : Item._id,\n                        //     bubble: '',\n                        //     Page : 'organization cost',\n                        //     redirect : true,\n                        //     inner: []\n                        // },\n                        \n                        {               \n                            name: 'University contribution',\n                            label: 'University contribution',\n                            group : false,\n                            iconName: global.get(\"icons.fas.organization\"),\n                            iconState: true,\n                              organization_id : Item._id,\n                            bubble: '',\n                            Page : 'organization university contribution',\n                            redirect : true,\n                            inner: []\n                        },\n                        {               \n                            name: 'Finances',\n                            label: 'Finances',\n                            group : false,\n                            iconName: global.get(\"icons.fas.organization\"),\n                            iconState: true,\n                            bubble: '',\n                              organization_id : Item._id,\n                            Page : 'organization finances',\n                            redirect : true,\n                            inner: []\n                        },\n                        // {               \n                        //     name: 'Result',\n                        //     label: 'Result',\n                        //     group : false,\n                        //     iconName: global.get(\"icons.fas.organization\"),\n                        //     iconState: true,\n                        //       organization_id : Item._id,\n                        //     bubble: '',\n                        //     Page : \"organization result\",\n                        //     redirect : true,\n                        //     inner: []\n                        // },\n                        ] },\n                        {\n                   \n                    name: \"Users\",\n                    label: \"Users\",\n                    button: true,\n                    lazyload : \"organization_users\",\n                    organization_id : Item._id,\n                    buttonType: \"success\",\n                    group : true,\n                    // iconName: global.get(\"icons.images.user\"),\n                    iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\", // global.get(\"icons.images.user\"),\n                     filePath :global.get(\"icons.images.user\") ,\n                    // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                    iconState: true,\n                    bubble : user, \n                    inner:[]\n                        },\n                    {\n                    name: \"Dashboards\",\n                    label: \"Dashboards\",\n                    button: true,\n                    organization_id : Item._id,\n                    buttonType: \"success\",\n                    group : true,\n                    bubble : 4, \n                    iconName: global.get(\"icons.fas.dashboard\"),\n                    // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                    iconState: true,\n                    inner:[ {    \n                            name: \"Involvement dashboard\",\n                            label: \"Involvement dashboard\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'dashboard - involvement',\n                            organization_id : Item._id,\n                            scope: '',\n                            inner: [],\n                        },{    \n                            name: \"Time reporting dashboard\",\n                            label: \"Time reporting dashboard\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'dashboard - time reporting',\n                            organization_id : Item._id,\n                            scope: '',\n                            inner: [],\n                        },\n                                                {    \n                            name: \"PM vs TM\",\n                            label: \"PM vs TM\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'dashboard - pf vs tm ',\n                            organization_id : Item._id,\n                            scope: '',\n                            inner: [],\n                        },\n                        \n                        \n                        {    \n                            name: \"organization cockpit dashboard\",\n                            label: \"Organization cockpit dashboard\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'organization cockpit dashboard',\n                            organization_id : Item._id,\n                            scope: '',\n                            inner: [],\n                        },\n                        {    \n                            name: \"Transactions dashboard\",\n                            label: \"Transactions dashboard\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.dashboard\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'Transactions dashboard',\n                            organization_id : Item._id,\n                            scope: '',\n                            inner: [],\n                        },\n                        \n                        ]\n                    },\n                     {\n                    name: \"Settings\",\n                    label: \"Settings\",\n                    button: false,\n                    buttonType: \"success\",\n                    group : true,\n                    // iconUrl: 'https://revotio.com/api/app/images/menu/icon_settings.svg',\n                    iconName: global.get(\"icons.fas.settings\"),\n                     organization_id : Item._id,\n                    iconState: true,\n                    redirect : false,\n                    inner:[\n                            {\n                            name: 'Project management',\n                            label: 'Project management',\n                            group : true,\n                            Page : 'setting project management',\n                            // iconName:  global.get(\"DomainProperties.prodUrl\") + \"/icons/icon_rocket.svg\", // global.get(\"icons.fas.project\"),\n                            iconName: global.get(\"icons.fas.settings\"),\n                            iconState: true,\n                            bubble: '',\n                             organization_id : Item._id,\n                            // organization_id : msg.loopData.OrgData._id,\n                            redirect : true,\n                            inner: []\n                            },\n                            {               \n                            name: \"Employee management\",\n                            label: \"Employee management\",\n                            group : false,\n                            iconName: global.get(\"icons.fas.settings\"),\n                            Page : \"settings - employee management\",\n                            // iconUrl: 'https://revotio.com/webpages/Icons/Airplane.svg', \n                            iconState: true,\n                             organization_id : Item._id,\n                            bubble: '',\n                            // organization_id : msg.loopData.OrgData._id,\n                            redirect : true,\n                            inner: []\n                            },\n                            {               \n                            name: 'Financials management',\n                            label: 'Financials management',\n                            group : false,\n                            iconName: global.get(\"icons.fas.settings\"),\n                            iconState: true,\n                             organization_id : Item._id,\n                            bubble: '',\n                            Page : 'settings - financials management',\n                            redirect : true,\n                            inner: []\n                            },\n                            {               \n                            name: 'File import',\n                            label: 'File import',\n                            group : false,\n                             organization_id : Item._id,\n                            iconName: global.get(\"icons.fas.settings\"),\n                            iconState: true,\n                            Page : \"settings - file import\", // \n                            bubble: '',\n                            redirect : true,\n                            inner: []\n                            },\n                                                        {               \n                            name: 'File export',\n                            label: 'File export',\n                            group : false,\n                            organization_id : Item._id,\n                            iconName: global.get(\"icons.fas.settings\"),\n                            iconState: true,\n                            Page : \"settings - export\", // \n                            bubble: '',\n                            redirect : true,\n                            inner: []\n                            },\n                            ]\n},\n                        {    \n                            name: \"file management\",\n                            label: \"File management\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.file_management\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'file management',\n                            organization_id : Item._id,\n                            level : 'organization',\n                            scope: '',\n                            inner: [],\n},  {    \n                            name: \"Calendar\",\n                            label: \"Calendar\",\n                            group : true,\n                            iconName: global.get(\"icons.fas.calendar\"),\n                            // iconUrl: 'https://revotio.nl/webpages/Icons/Checklist.svg', \n                            iconState: true,\n                            bubble: '',\n                            redirect : true,\n                            Page: 'calendar',\n                            organization_id : Item._id,\n                            level : 'organization',\n                            scope: '',\n                            inner: [],\n}]\n            }\n    if (Item.hasOwnProperty(\"logo\")){\n            OrgObj.iconUrl =   global.get(\"functions.fileManagement\")(  Item.logo.url, Item.logo.url ,msg.RevotioData.session._id, \"copySync\"), \n            OrgObj.filePath = Item.logo.url;\n        } else {\n            OrgObj.iconName =  global.get(\"icons.fas.organization\");\n        }\n    if (Item.hasOwnProperty(\"childOrganizations\") && Item.childOrganizations.length > 0){\n        \n        OrgObj.inner.unshift({\n                    name: \"Sub organizations\",\n                    label: \"Sub organizations\",\n                    button: true,\n                    lazyload : \"sub_organizations\",\n                    buttonType: \"success\",\n                    group : true,\n                    organization_id : Item._id,\n                    // iconName: global.get(\"icons.images.project\"),\n                    iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_organization.svg\", // global.get(\"icons.images.user\"),\n                    filePath :global.get(\"icons.images.organization\") ,\n                    // iconUrl: 'https://revotio.nl/api/app/images/menu/icon_rocket.svg',\n                    iconState: true,\n                    bubble : Item.childOrganizations.length ,\n                    inner:[]\n                        })\n     \n    }\n    \n    // if (Item.hasOwnProperty(\"parent_id\") === true){\n    //     OrgObj.ParentId = new ObjectID(Item.parent_id );\n    // }\n        Childs.push(OrgObj)\n})\n\n\n\n\n// filter work_package items\n\ngroup = lodash.groupBy(Childs, \"ParentId\");\ngroupedPayload= []\n\n_.each(group.undefined, function(parentValue, parentIndex){\n    if (group.hasOwnProperty(parentValue.organization_id)){\n        \n        // check if childs are active\n        _.each(group[parentValue.organization_id], function(Item, Index){\n            if (Item.State === \"Active\"){\n                parentValue.State = Item.State;\n            }\n        });\n        parentValue.inner.unshift({\n            State : parentValue.State,\n            name: \"sub_organizations\",\n            label: \"Sub organizations\",\n            group: true,\n            iconUrl : global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_organization.svg\", // global.get(\"icons.fas.organization\"),\n             filePath :global.get(\"icons.images.organization\") ,\n            inner:lodash.orderBy(group[parentValue.organization_id], ['name','bubble' ], ['asc', 'desc'])\n            })\n    }\n    groupedPayload.push(parentValue)\n})\n\n    \n\n\n\n\n              \n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : \n//             groupedPayload\n        \n//     }]\n// }\n// node.send(msg)\n\n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : groupedPayload}\n                  \n        // {\n        //     parent: msg.RevotioData.PostData.gadgetData,\n        //     childs : Childs\n        // }\n    }]\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":2310,"y":940,"wires":[["b8cba8eb.07bea8"]]},{"id":"8c0473e0.6063c8","type":"function","z":"d8703926.e2eca","name":"Create response obj","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\n// filter work_package items\n\n\n\n\nvar Childs = [ ]\n\n\n\n// _.each(lodash.orderBy(msg.payload, [\"UserAccountData.first_name\", \"UserAccountData.last_name\"], [\"asc\", \"asc\"]), function(Item, index){\n    \n//     UserAccountData = Item.UserAccountData[0]\n//     // projectData = Item.projectData\n    \n\n    \n    \n//     Childs.push(  {\n//             name:  Item.UserAccountData[0].first_name + \" \" +  Item.UserAccountData[0].last_name,\n//             label: Item.UserAccountData[0].first_name + \" \" +  Item.UserAccountData[0].last_name,\n//             group : false,\n//             button: true,\n//             Type: \"Users\",\n//             buttonType: \"warning\",\n//             iconUrl: global.get(\"functions.fileManagement\")( global.get(\"DomainProperties.rootPath\") + \"/organization/\"+ Item.organization_id +\"/\"+ Item.UserAccountData[0].avatar, Item.UserAccountData[0].avatar ,msg.RevotioData.session._id, \"copySync\"), \n     \n//             iconState: true,\n//             redirect : true,\n//             Page : \"users global\",\n//             organization_id:msg.RevotioData.PostData.gadgetData.organization_id,\n//             Appuser_id : Item.user,\n//             inner:[]\n//             })\n            \n// })\n\ndata = [{\n            name: \"Create user\",\n            label: \"Create user\",\n            UserType: \"Admin_Users\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.create\"),\n            // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n            iconState: true,\n            organization_id:msg.RevotioData.PostData.gadgetData.organization_id,\n            // Page: 'users overview',\n            inner:[]\n},{\n            name: \"Open user management\",\n            label: \"Open user management\",\n            Type: \"Admin_Users\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.open\"),\n            // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n            iconState: true,\n            redirect : true,\n            Page : \"users global\",\n            organization_id:msg.RevotioData.PostData.gadgetData.organization_id,\n            // page: 'users overview',\n            inner:[]\n},\n// {\n//             name: \"Users\",\n//             label: \"users\",\n//             Type: \"Users\",\n//             button: true,\n//             buttonType: \"success\",\n//             iconName: global.get(\"icons.fas.users\"),\n//             // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n//             iconState: true,\n//             group : true,\n//             redirect : false,\n//             // Page : \"users global\",\n//             // lazyload: \"admin_users\",\n//             organization_id:msg.RevotioData.PostData.gadgetData.organization_id,\n//             // page: 'users overview',\n//             inner:Childs\n// }\n]\n\n    \n\n\n\n\n              \n\n// msg.payload = {\n//     gadgetsList:[{\n//         gadgetName: \"menu\",\n//         gadgetType: \"Menu\",\n//         gadgetId: \"menu\",\n//         gadgetData : \n//             Childs\n        \n//     }]\n// }\n// node.send(msg)\n\n\nmsg.payload = {\n    gadgetsList:[{\n        gadgetName: \"menu\",\n        gadgetType: \"Menu\",\n        gadgetId: \"menu\",\n        gadgetData : {\n                parent :msg.RevotioData.PostData.gadgetData,\n                 child : data}\n                 \n                  \n        // {\n        //     parent: msg.RevotioData.PostData.gadgetData,\n        //     childs : Childs\n        // }\n    }]\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1580,"y":900,"wires":[["b8cba8eb.07bea8"]]},{"id":"61572008.dbf89","type":"function","z":"d8703926.e2eca","name":"Create settings and formalize menu gadget payload","func":"var _ = global.get('underscore');\n\nmsg.menu.push({\n                    name: \"Settings\",\n                    label: \"Settings\",\n                    button: false,\n                    buttonType: \"success\",\n                    group : true,\n                    // iconUrl: 'https://revotio.com/api/app/images/menu/icon_settings.svg',\n                    iconName: global.get(\"icons.fas.settings\"),\n                    //  organization_id : Item._id,\n                    iconState: true,\n                    redirect : false,\n                    inner:[\n                        // {               \n                        //     name: 'Stats',\n                        //     label: 'Stats',\n                        //     group : false,\n                        //     iconName: global.get(\"icons.fas.settings\"),\n                        //     iconState: true,\n                        //     bubble: '',\n                        //     //  organization_id : Item._id,\n                        //     Page : 'settings',\n                        //     redirect : true,\n                        //     inner: []\n                        //     },\n          \n                            {\n                            name: 'Project management',\n                            label: 'Project management',\n                            group : true,\n                            Page : 'setting project management',\n                            // iconName:  global.get(\"DomainProperties.prodUrl\") + \"/icons/icon_rocket.svg\", // global.get(\"icons.fas.project\"),\n                            iconName: global.get(\"icons.fas.settings\"),\n                            iconState: true,\n                            bubble: '',\n                            //  organization_id : Item._id,\n                            // organization_id : msg.loopData.OrgData._id,\n                            redirect : true,\n                            inner: []\n                            },\n                            {               \n                            name: \"Form settings\",\n                            label: \"Form settings\",\n                            group : false,\n                            iconName: global.get(\"icons.fas.settings\"),\n                            Page : \"settings form management\",\n                            // iconUrl: 'https://revotio.com/webpages/Icons/Airplane.svg', \n                            iconState: true,\n                            //  organization_id : Item._id,\n                            bubble: '',\n                            // organization_id : msg.loopData.OrgData._id,\n                            redirect : true,\n                            inner: []\n                            },\n                            // {               \n                            // name: 'Financials management',\n                            // label: 'Financials management',\n                            // group : false,\n                            // iconName: global.get(\"icons.fas.settings\"),\n                            // iconState: true,\n                            // //  organization_id : Item._id,\n                            // bubble: '',\n                            // Page : 'settings - financials management',\n                            // redirect : true,\n                            // inner: []\n                            // },\n                            \n                            ]\n})\n\nmsg.menu.push({\n            name: \"time registration\",\n            label: \"time registration \" + msg.RevotioData.session.UserData.UserAccountData.first_name + \" \" +msg.RevotioData.session.UserData.UserAccountData.last_name,\n            button: true,\n            buttonType: \"success\",\n            userId : msg.RevotioData.session.UserData._id,\n            Page : \"time registration\",\n            // iconUrl: 'https://revotio.com/api/app/images/menu/icon_settings.svg',\n            iconName: global.get(\"icons.fas.clock\"),\n            iconState: true,\n            redirect : true,\n            inner:[]\n});\n\nmsg.menu.push({\n            name: \"Log out\",\n            label: \"Log out \" + msg.RevotioData.session.UserData.UserAccountData.first_name + \" \" +msg.RevotioData.session.UserData.UserAccountData.last_name,\n            button: false,\n            buttonType: \"success\",\n            // iconUrl: 'https://revotio.com/api/app/images/menu/icon_settings.svg',\n            iconName: global.get(\"icons.fas.logout\"),\n            iconState: true,\n            redirect : true,\n            inner:[]\n});\n\n\n// msg.menu.push({\n//             name: \"demo page\",\n//             label: \"demo page \",\n//             button: false,\n//             buttonType: \"success\",\n//             Page: \"demo page\",\n//             // iconUrl: 'https://revotio.com/api/app/images/menu/icon_settings.svg',\n//             iconName: global.get(\"icons.fas.logout\"),\n//             iconState: true,\n//             redirect : true,\n//             inner:[]\n// });\n\n\n\n\n\nmsg.payload = {\n            \n            gadgetsList:[{\n            gadgetName: 'menu',\n            gadgetId: 'menu',\n             gadgetData: {\n                 parent :{},\n                 child : msg.menu}\n            }]\n};\n\n// msg.payload = {\n            \n//             gadgetsList:[{\n//             gadgetName: 'menu',\n//             gadgetId: 'menu',\n//              gadgetData:  msg.menu\n//             }]\n// };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2710,"y":640,"wires":[["b8cba8eb.07bea8"]]},{"id":"e3d3db19.0f4c1","type":"function","z":"d8703926.e2eca","name":"Add users","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.menu.push({\n            name: \"Admin users\",\n            label: \"Admin users\",\n            group : true,\n            button: false,\n            buttonType: \"warning\",\n            // iconName: global.get(\"icons.fas.users\"),\n            iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\", // global.get(\"icons.images.user\"),\n             filePath :global.get(\"icons.images.user\") ,\n            iconState: true,\n            redirect : false,\n            lazyload: \"admin_users\",\n            inner:[]\n});\n\nUsersIndex = lodash.findIndex(msg.menu, ['name', \"Admin users\"]);\n\n\n// _.each(msg.payload, function(userItem, userIndex){\n    \n//     if (userItem.UserAccountData.length > 0){\n    \n//             State = \"Inactive\";\n\n//             if (String(userItem.user) === String(msg.RevotioData.FlowData.Appuser_id)){\n//                 State = \"Active\";\n                \n//                 msg.menu[UsersIndex].inner.State = State;\n//             }\n    \n    \n    \n//     // msg.permissionIndex = lodash.findIndex(userItem.AppUserPermissionInfo, ['organization_id', String(msg.loopData.OrgData._id)]);\n//     // if (msg.permissionIndex > 0 ){\n//         msg.menu[UsersIndex].inner.push({\n//             State:State,\n//             name:  userItem.UserAccountData[0].first_name + \" \" +  userItem.UserAccountData[0].last_name,\n//             label: userItem.UserAccountData[0].first_name + \" \" +  userItem.UserAccountData[0].last_name,\n//             group : false,\n//             button: false,\n//             Type: \"Admin_Users\",\n//             buttonType: \"warning\",\n//             iconUrl: userItem.UserAccountData[0].avatar,\n//             iconState: true,\n//             redirect : true,\n//             Page : \"users overview\",\n//             organization_id:new ObjectID(global.get(\"MasterOrganizationData._id\")),\n//             Appuser_id : userItem.user,\n//             inner:[]\n//             });\n//     // }\n//     }\n// });\n\n msg.menu[UsersIndex].inner.unshift({\n            name: \"Create user\",\n            label: \"Create user\",\n            UserType: \"Admin_Users\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.create\"),\n            // iconUrl: 'https://revotio.nl/webpages/Icons/Plus.svg', \n            iconState: true,\n            organization_id:new ObjectID(global.get(\"MasterOrganizationData._id\")),\n            // Page: 'users overview',\n            inner:[]\n});\n\n msg.menu[UsersIndex].inner.unshift({\n            name: \"Open user management\",\n            label: \"Open user management\",\n            Type: \"Admin_Users\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.open\"),\n            // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n            iconState: true,\n            redirect : true,\n            Page : \"users global\",\n            \"level\": \"admin\",\n            organization_id:new ObjectID(global.get(\"MasterOrganizationData._id\")),\n            // page: 'users overview',\n            inner:[]\n});\n\n//  msg.menu[UsersIndex].inner.push({\n//             name: \"Users\",\n//             label: \"Users\",\n//             Type: \"Admin_Users\",\n//             button: true,\n//             buttonType: \"success\",\n//             iconName:  global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_user.svg\", // global.get(\"icons.fas.users\"),\n//             // iconUrl: 'https://revotio.nl/webpages/Icons/Airplane.svg', \n//             iconState: true,\n//             group : true,\n//             redirect : false,\n//             // Page : \"users global\",\n//             lazyload: \"admin_users\",\n//             organization_id:new ObjectID(global.get(\"MasterOrganizationData._id\")),\n//             // page: 'users overview',\n//             inner:[]\n// });\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2450,"y":640,"wires":[["61572008.dbf89"]]},{"id":"38a3c6ce.de92ca","type":"function","z":"d8703926.e2eca","name":"Add organization to msg.menu","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nnewArr = []\n\nmsg.menu.push({\n            State: \"Inactive\",\n            name: \"Organizations\",\n            label: \"Organizations\",\n            button: true,\n            group : true,\n            buttonType: \"success\",\n            iconUrl: global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_organization.svg\",// global.get(\"icons.images.organization\"),  \n            filePath :global.get(\"icons.images.organization\") ,\n            iconState: true,\n            inner:[\n                {\n            name: \"Create organization\",\n            label: \"Create organization\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.create\"),\n            // iconUrl: 'https://revotio.nl/webpages/images/icons/Add.svg',\n            iconState: true,\n            inner:[]\n},{\n            name: \"Organizations overview\",\n            label:  \"Organizations overview\",\n            button: true,\n            buttonType: \"success\",\n            iconName: global.get(\"icons.fas.open\"),\n            // iconUrl: 'https://revotio.nl/webpages/images/icons/Open.svg',\n            iconState: true,\n            redirect : true,\n            Page: 'organizations global',\n            inner:[],\n           \n},\n\n{\n            name: \"Organizations\",\n            label: \"Organizations\",\n            button: true,\n            buttonType: \"success\",\n            lazyload : \"organizations\",\n            // iconName: global.get(\"DomainProperties.prodUrl\") + \"/icons/icon_organization.svg\", // global.get(\"icons.fas.organization\"),\n            iconUrl:  global.get(\"DomainProperties.prodUrl\") + \"/files/SystemFiles/icons/icon_organization.svg\",\n            filePath :global.get(\"icons.images.organization\") ,\n            iconState: true,\n            // redirect : true,\n            // Page: 'organizations global',\n            inner:[],\n             bubble: msg.payload,\n}]\n});\n\n\n\n\n// msg.menu[0].inner = newArr ;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2250,"y":640,"wires":[["e3d3db19.0f4c1"]]},{"id":"e8586971.9e6628","type":"function","z":"d8703926.e2eca","name":"Prepair msg.menu && route based on UserType","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.menu = []           ;\nmsg.BreadCrumbData = {\n    Org : [],\n    Pro : [],\n    WP  : [],\n} ;\n\n// Create organizations group\n\nindex = -1\n_.each(msg.RevotioData.session.UserData.AppUserPermissionInfo, function(Item, Index ){\n    // if (Item.type_id === global.get(\"MasterOrganizationData._id\")){\n  if (String(Item.type_id) === String(global.get(\"MasterOrganizationData._id\")) ){\n//   if (new ObjectID(Item.type_id) === new ObjectID(global.get(\"MasterOrganizationData._id\")) ){\n       index =  Index\n    }\n})\nif (index > -1 || msg.RevotioData.session.UserData.UserAccountData.user_type === \"Admin_Users\" ){\n   match = {parent_id: { $exists: false} , \"_id\": {\"$ne\": new ObjectID(global.get(\"MasterOrganizationData._id\"))}};\n    // msg.operation = \"find.toArray\";\n    \n} else {\n    \n    Obj = lodash.find(msg.RevotioData.session.UserData.AppUserPermissionInfo, { \"type\": \"organization\"});\n    match = {\"_id\": new ObjectID(Obj.type_id)};\n    \n}\n\n\nmsg.time = {start : new Date()}\n\nfindManyObj = {\n                    query : {\n                            query :match, \n                            projection: {_id:1}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res.length\n                    node.send(msg) \n            }) \n\n\n\n// return msg;","outputs":1,"noerr":0,"x":1780,"y":640,"wires":[["38a3c6ce.de92ca"]],"outputLabels":["PNO, "]},{"id":"185b7877.16f478","type":"inject","z":"d8703926.e2eca","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1760,"y":520,"wires":[["e8bc643c.5b91f"]]},{"id":"e8bc643c.5b91f","type":"function","z":"d8703926.e2eca","name":"Libs","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\nfindObj = {\n                query : {\n                        query :{\"$or\" : [{Type : \"ProjectType\"}, {Type : \"JobTitle\"},{Type : \"Department\"} ]}, \n                        },\n                connection:\"mongodb://admin:lADOodCgW0vDAKbE@proddb-shard-00-00-mkgff.mongodb.net:27017,proddb-shard-00-01-mkgff.mongodb.net:27017,proddb-shard-00-02-mkgff.mongodb.net:27017/admin?ssl=true&replicaSet=ProdDB-shard-0\",\n                database:\"test\",\n                collection:'devices',\n                operation:'find',\n                }\n\n        mongodbTools.resolveAsync(findObj, node, function(res){\n                msg.result = res\n                node.send(msg) \n        })   \n\n","outputs":1,"noerr":0,"x":1870,"y":520,"wires":[[]]},{"id":"679d95fb.063114","type":"function","z":"d8703926.e2eca","name":"Remove user sessions","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// remove \n            removeObj = {\n                    query : {\n                            query :{\n                                        deviceId : msg.RevotioData.session.deviceId ,\n                                        revotioSessionId: msg.RevotioData.session.revotioSessionId\n                                    }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            })   ","outputs":1,"noerr":0,"x":720,"y":1120,"wires":[["73743298.29765c"]]},{"id":"73743298.29765c","type":"function","z":"d8703926.e2eca","name":"remove global comntext sessions","func":"global.set(\"gadgetGroups.\"+ msg.RevotioData.session.deviceId)\n\nmsg.payload = {\n    RevotioData:{\n    logout : true,},\n    deviceId: msg.RevotioData.session.deviceId,\n    // revotioSessionId : msg.RevotioData.session.revotioSessionId\n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":1120,"wires":[["45f70413.21ab2c"]]},{"id":"45f70413.21ab2c","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":1170,"y":1120,"wires":[]},{"id":"16e26d9e.c0ac62","type":"http in","z":"d8703926.e2eca","name":"Menu","url":"/Menu","method":"post","upload":false,"swaggerDoc":"","x":190,"y":920,"wires":[["9728bf20.e6f3d"]]},{"id":"d95079f7.8dc1d8","type":"subflow:5e9b9c1d.bbe4a4","z":"d8703926.e2eca","name":"","env":[],"x":660,"y":720,"wires":[]},{"id":"9728bf20.e6f3d","type":"function","z":"d8703926.e2eca","name":"Prepair flow","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\npayload = msg.payload\n_.each(payload, function(item, key){\n    msg[key] = item\n})\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":920,"wires":[["5b7fb22f.8de844"]]},{"id":"b8cba8eb.07bea8","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":2950,"y":820,"wires":[]},{"id":"94ef6924.94c9","type":"subflow:3170c4ab.fadb9c","z":"d8703926.e2eca","name":"","env":[],"x":880,"y":760,"wires":[["71636367.1aba4c"]]},{"id":"71636367.1aba4c","type":"function","z":"d8703926.e2eca","name":"Set RevotioData","func":"\npayload = {\n    payload : msg.payload,\n    RevotioData: msg.RevotioData\n}\n\nmsg.payload = payload\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":760,"wires":[["e74b4e81.9065d8"]]},{"id":"e74b4e81.9065d8","type":"http response","z":"d8703926.e2eca","name":"","statusCode":"","headers":{},"x":1130,"y":760,"wires":[]},{"id":"c43cd37b.1268","type":"debug","z":"d8703926.e2eca","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3740,"y":1080,"wires":[]},{"id":"1dfc0e60.c5afa2","type":"function","z":"d8703926.e2eca","name":"Prepair msg.menu && sub_organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\nmsg.menu = []           ;\nmsg.BreadCrumbData = {\n    Org : [],\n    Pro : [],\n    WP  : [],\n} ;\n\n\n// \n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {parent_id : new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id)}\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"organizations\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"parent_id\",\n                                  \"as\": \"childOrganizations\"\n                                }\n                              },\n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                            //   {\n                            //     $unwind: {\n                            //       \"path\": \"$projectData\",\n                            //       \"includeArrayIndex\": \"arrayIndex\",\n                            //       \"preserveNullAndEmptyArrays\": false\n                            //     }\n                            //   }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'aggregate',\n                    }\n\n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n            \n            \n\n\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":1640,"y":940,"wires":[["586b1b7b.fd31c4"]],"outputLabels":["PNO, "]},{"id":"47fdbeb5.4211e","type":"comment","z":"aec22158.fe4e38","name":"Global context data","info":"","x":410,"y":20,"wires":[]},{"id":"bec51817.848ff8","type":"subflow:e25f5e2d.45871","z":"aec22158.fe4e38","name":"","env":[],"x":180,"y":80,"wires":[]},{"id":"4809e15c.231538","type":"link in","z":"aec22158.fe4e38","name":"Push gadgets to frontend","links":["22600218.5f17ce","237dc0d6.55ce58","2d570acc.402cee","4d2f5f49.74d588","4f069602.986148","54156eec.b14a88","6b7d9d4c.4f7de4","6b8fb4fa.663c8c","7bd715c1.48678c","7d81d17c.aaecb8","881d9107.af00e","98c425c5.4b0328","a9e514e2.43afa8","ad59d764.8f538","af92a9f3.f2eab","b62f16e5.5c7998","ba29073e.8adb","bdf7ba4.ba0e548","fb679d51.f23358"],"x":55,"y":80,"wires":[["bec51817.848ff8"]]},{"id":"192fce41.a964e2","type":"comment","z":"2294209a.0c95b","name":"Global context data","info":"","x":350,"y":40,"wires":[]},{"id":"d98d965c.e5c518","type":"subflow:e25f5e2d.45871","z":"2294209a.0c95b","name":"","env":[],"x":420,"y":100,"wires":[]},{"id":"480dae32.8a339","type":"link in","z":"2294209a.0c95b","name":"Push gadgets to frontend","links":["1bc869a3.7eb996","1c021baa.41b07c","2a3f6b04.a7f3bc","56a2b4a6.6d588c","5d648f99.e116b8","b742db6e.8148f","d6f75efd.0ef05","da96270c.50aa4","df9e1699.b208d8","e5361ca5.ccabf","f19484dd.a1fe48","f438ead1.51c198"],"x":295,"y":100,"wires":[["d98d965c.e5c518"]]},{"id":"c91bfeb6.105ee8","type":"comment","z":"e5822137.be45d","name":"Global context data","info":"","x":490,"y":20,"wires":[]},{"id":"195b9b9c.a972dc","type":"subflow:e25f5e2d.45871","z":"e5822137.be45d","name":"","env":[],"x":740,"y":120,"wires":[]},{"id":"a6ee6331.070228","type":"link in","z":"e5822137.be45d","name":"Push Gadget to Frontend","links":["1414db5.9477225","332fcebf.47e5ea","402f0b1e.b2f10c","473575ea.f2ca9c","4e30d34a.94d17c","5a1bf7f9.3cce7","5d9d62c1.c97ae4","63f480be.65ed78","6c372d2d.56f66c","726136cc.ee23e","72f5dc66.d27994","887ec7cf.104c1","950e082d.458a48","9a43c1cc.c7e6a8","9ab04a2a.f2bec","a64310c4.2429c8","b0cd1861.02c32","b5b81ae2.4e6f3","c16d9a0c.c46d58","cc93af00.839ed","d17b5e28.efa078","e7a48cc8.cc60d8","ec6b9f6a.c0a41","f0a7f951.ad708","33287b30.e85ea4","b51910ff.83ca18","6c9f0870.13af78","324de421.bf1f2c","6f9cee85.74eff8"],"x":395,"y":80,"wires":[["e5f1ee6f.1b3268"]]},{"id":"42ee5df0.7ac9b4","type":"link in","z":"e5822137.be45d","name":"Push gadget to frontend","links":["6c1fc1e4.18153","71a75c31.72c3c4","8915c09f.764ff","2c7cb1db.77396e","a46f6b54.9146e8","9380426d.7e2f8","dd17eedc.661de","b6af783.489bb88","bcf32a29.9d22c8","e49f3be7.3f3e98","17bd5710.330e29","b54de25e.224c9","c8128f27.83f0c","5b8d4cf6.ca32a4","8e11c1d1.ada8b","d4ed1cc8.5a11f","34e3a2a7.c7936e","aa4a5c67.21ed7","671679df.f85b58","ba7265f.9e92f98","34d8dd6f.00fb92","17630ade.28bd95","f0aa4719.022068","f5c57219.73ea9","1c3a6655.a06b7a","5b59ec64.44982c","18c9fe9e.5f6899"],"x":435,"y":80,"wires":[["e5f1ee6f.1b3268"]]},{"id":"4fe5a76.5bcfd58","type":"link in","z":"e5822137.be45d","name":"Push Gadgets to frontend","links":["13bcb907.ca42ef","286a4834.8ee44","6800f9d5.3dff58","7e394d6c.c2831c","9906fb19.b9b47","9bc60dce.db6568","c62e0e45.48a2c8"],"x":375,"y":120,"wires":[["e5f1ee6f.1b3268"]]},{"id":"eefe6ecb.492078","type":"link in","z":"e5822137.be45d","name":"Return to Frontend","links":["2ef1becf.7da1b2","a65bd864.ee1828","23e4ed49.681a62","52cac6c8.8f6018","878ed43d.f6c348","16d8ff69.d71e71","4ae71785.1c5fc","5002c494.80c03c","5dba0abb.3b9dbc","fb03028f.7d0f4","44b32d37.175e74","f94c825a.6795a","47f74ceb.d79b1c","32d5e9f1.b935f6","1f8e3f90.84a298","5f1a385c.edb14","37562fb5.4313a","b4a3b5aa.487f6","f10a8582.df74b","f70e748a.df179","30650656.001a8a","b9d6160.16eb6e8","e995ed62.c5e138","4e3d365f.e1d8f","4d639347.c27a34","c2c17e7a.3ca688","69c8a744.a0827","55f4828f.4fb3b4","d4c53ab.5c3e3c8","4c49a90c.d02c48","9e47ec67.076808","ba6eeef0.503198","47b5eaad.ade484","7766b2b7.7570dc","33d4041f.3ee46c","cf5ee563.e9a7","c1f9d0b7.2a065","57c5062c.523b38","56f4c565.9de3f4","66f48d18.a2d8fc","7ea38e7d.370328","76a831f8.cf2bc8","b300552.bc2f128","244b0842.7f8878","fa510cbe.abfd88","ad6f24d.a8f1758","1bc37531.9d52bb"],"x":375,"y":80,"wires":[["e5f1ee6f.1b3268"]]},{"id":"656ec53c.6bb344","type":"link in","z":"e5822137.be45d","name":"organization global ==> Push gadget frontend","links":["d0895998.b221d8","9198d989.635538","589647d4.40b338","4b07fc0a.2f3c64","243bd25a.1dddce","a79d9a84.9e87e8","44496033.f380b","89e07cb5.9ceff","3dfbfbc5.ae5004","c1bbd831.582ba8","62127a31.57f32c","774bc9c9.58a1c","9ecfa92f.c28c9","2eca442d.4fc91c","9909108a.a8f2b8","41e59027.48e72","aafa8726.1d31f8","f786d66a.a9421","aa7b16f6.fea1b","f8555133.f61438","99aa8f9e.07ed8","4b702acd.895cf4","214f3437.be9504","c28406bc.ba45","a42b3aa1.c42c48","164a8d01.4eb1c3","8b0c5b93.fa7688","96028ac8.026ff8","2272d450.d6f004","1d19be79.2f946a","a3794f83.51c8d8","8d6a210f.640ba","57277aec.3334fc","1c35b137.b4b267","3406b068.d2d0c8","ebd47a0c.f53a88","72785794.bda1c8"],"x":395,"y":120,"wires":[["e5f1ee6f.1b3268"]]},{"id":"d95f4281.738d6","type":"link in","z":"e5822137.be45d","name":"organization global ==> Push gadget frontend","links":["9cb9a896.aa1d68","c78a9002.ce20e","767d4c28.0d0bf4","1effa21b.e3429e","30cb18ad.79a6d8","92084dab.74935","9b1164dc.d1ac98","e8ba36c6.b04a48","5573b262.5cb4ac","17ad68.49713299","8462b834.d9dd78","3646efc7.b16e08","66a93ca.a947544","446825fb.8b9704","c0822dfb.e6597","6e3e8606.38dd4","c75c9dc0.0e26c"],"x":395,"y":100,"wires":[["e5f1ee6f.1b3268"]]},{"id":"e5f1ee6f.1b3268","type":"function","z":"e5822137.be45d","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":120,"wires":[["195b9b9c.a972dc"]]},{"id":"d746445.12ff338","type":"comment","z":"d8703926.e2eca","name":"Global context data","info":"","x":1450,"y":120,"wires":[]},{"id":"b2b8b6e9.e3583","type":"subflow:e25f5e2d.45871","z":"d8703926.e2eca","name":"","env":[],"x":1780,"y":220,"wires":[]},{"id":"85ce669.6b97d18","type":"link in","z":"d8703926.e2eca","name":"Push Gadget to Frontend","links":["192ccb9.8f0e834","2daf070a.78ed98","31cfbc66.cc8804","50d2a4eb.931acc","55f75812.d4147","6e19fdf0.93f8ac","7e5248cb.e2b4e8","b8d4d51b.d27168","ca0414d.a9c7a68"],"x":1315,"y":180,"wires":[["232c062f.9308ca"]]},{"id":"411df713.b9876","type":"link in","z":"d8703926.e2eca","name":"Push Gadget To Frontend","links":["1442a4d5.9c0f33","249bc257.6a40be","32936bf1.d4c834","3eb8b197.0a27fe","44f19a87.24091c","4e7dc4ba.e53dec","5bdc7bec.cdb68c","6aabdce9.91cf04","70af7f8.2d8678","7771fa3b.ba2dd4","7bf09f51.39e638","7f170c1b.2dff24","830d2d5c.7649a8","970a5c89.9998d8","a1ac9bfe.4be8f","ab0b0518.41d1f","bf81f94.908f988","cb71ddc7.f86018","d29ab08b.41594","d5af710b.e3f5f8","e4e5817c.d95f98","e7db9cb8.a3f61","f79ed97a.685ca"],"x":1315,"y":220,"wires":[["232c062f.9308ca"]]},{"id":"232c062f.9308ca","type":"function","z":"d8703926.e2eca","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1610,"y":220,"wires":[["b2b8b6e9.e3583"]]},{"id":"f323568d.ab2e98","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":740,"wires":[["ed8516de.4af6a8"]]},{"id":"ed8516de.4af6a8","type":"function","z":"51f1d48a.bfebf4","name":"change FS records","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nfindManyObj = {\n                    query : {\n                            query :{type:\"FundingScheme\", }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'settings',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":370,"y":740,"wires":[["b2259bca.56905","b419a249.73531"]]},{"id":"b2259bca.56905","type":"debug","z":"51f1d48a.bfebf4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":690,"y":780,"wires":[]},{"id":"b419a249.73531","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n_.each(msg.payload, function (item, index){\n   \n    item.timing_expected =  \"Prognosed\";\n    item.timing_factual =  \"Actual\";\n    item.value_credit = \"Funding\";\n    item.value_debit =  \"Cost\";\n\n   \n})\n\n   \n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":740,"wires":[["b2259bca.56905","bec37cdf.53612"]]},{"id":"bec37cdf.53612","type":"function","z":"51f1d48a.bfebf4","name":"Loop through settings records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":770,"y":740,"wires":[["48058747.637818"],["38565b3a.b6a454","b45d8f20.a14e98"]]},{"id":"48058747.637818","type":"function","z":"51f1d48a.bfebf4","name":"settings","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'settings',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n   ","outputs":1,"noerr":0,"x":760,"y":700,"wires":[["bec37cdf.53612"]]},{"id":"38565b3a.b6a454","type":"debug","z":"51f1d48a.bfebf4","name":"DONE FS settings","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1250,"y":760,"wires":[]},{"id":"e1120c3b.52f648","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":240,"y":1040,"wires":[["6dab7223.48baec"]]},{"id":"6dab7223.48baec","type":"function","z":"51f1d48a.bfebf4","name":"Convert all transactions","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\n\n// aggregate\n\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {}\n                              },\n                              { \n                                    \"$lookup\" : { \n                                        \"from\" : \"projects\", \n                                        \"localField\" : \"project_id\", \n                                        \"foreignField\" : \"_id\", \n                                        \"as\" : \"projectData\"\n                                    }\n                                }, \n                                { \n                                    \"$unwind\" : { \n                                        \"path\" : \"$projectData\", \n                                        \"includeArrayIndex\" : \"arrayIndex\", \n                                        \"preserveNullAndEmptyArrays\" : false\n                                    }\n                                }, \n                                { \n                                    \"$lookup\" : { \n                                        \"from\" : \"settings\", \n                                        \"localField\" : \"projectData.funding_scheme\", \n                                        \"foreignField\" : \"_id\", \n                                        \"as\" : \"projectData.fundingSchemeData\"\n                                    }\n                                }, \n                                { \n                                    \"$unwind\" : { \n                                        \"path\" : \"$projectData.fundingSchemeData\", \n                                        \"includeArrayIndex\" : \"arrayIndex\", \n                                        \"preserveNullAndEmptyArrays\" : false\n                                    }\n                                }\n                         \n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'transactions',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n            \n \n// findManyObj = {\n//                     query : {\n//                             query :{type:\"FundingScheme\"}, \n//                             },\n//                     connection:global.get(\"DB_data.connection\"),\n//                     database:global.get(\"DB_data.appDB\"),\n//                     collection:'transactions',\n//                     operation:'find',\n//                     }\n\n//             mongodbTools.resolveAsync(findManyObj, node, function(res){\n//                     msg.payload = res\n//                     node.send(msg) \n//             }) ","outputs":1,"noerr":0,"x":390,"y":1080,"wires":[["5dadee68.1790f"]]},{"id":"9960a23b.5def38","type":"debug","z":"51f1d48a.bfebf4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":450,"y":1180,"wires":[]},{"id":"5dadee68.1790f","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\n//   approved_amount , eligible_amount, amount, accounting_type, timing_type\nrecords = []\n\n_.each(msg.payload, function (item, index){\n   \n   if (item.hasOwnProperty(\"accounting_type\") === false || item.hasOwnProperty(\"timing_type\") === false ){\n   \n   \n   if (item.account_type === \"budget\" || item.record_type === \"budget\"){\n       \n       item.accounting_type = \"value_credit\"\n       \n       item.amount          = item.project_budget\n       item.eligible_amount = item.eligible_budget\n       item.approved_amount = item.approved_budget\n       \n   } else if (item.account_type === \"cost\" || item.record_type === \"cost\"){\n       \n        item.accounting_type = \"value_debit\"\n        \n        item.amount          = item.realized_cost\n        item.eligible_amount = item.eligible_cost\n        item.approved_amount = item.approved_cost\n       \n   }\n   \n   if (item.transaction_type === \"prognosed\"){\n        item.timing_type = \"timing_expected\"\n   } else {\n        item.timing_type = \"timing_factual\"\n   } \n   \n    \n    delete  item.projectData\n    delete  item.arrayIndex\n    records.push(item)\n    \n   }\n})\n\nmsg.records = records\nmsg.payload = records\n\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":1080,"wires":[["9960a23b.5def38","e02c0c82.8f91b8"]]},{"id":"e02c0c82.8f91b8","type":"function","z":"51f1d48a.bfebf4","name":"Loop through transactions records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":820,"y":1080,"wires":[["8f8b93ee.a5745"],["6d1e157e.7211a4"]]},{"id":"8f8b93ee.a5745","type":"function","z":"51f1d48a.bfebf4","name":"transactions","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'transactions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n   ","outputs":1,"noerr":0,"x":810,"y":1040,"wires":[["e02c0c82.8f91b8"]]},{"id":"6d1e157e.7211a4","type":"debug","z":"51f1d48a.bfebf4","name":"DONE transactions","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1150,"y":1080,"wires":[]},{"id":"71332273.c1870c","type":"debug","z":"aec22158.fe4e38","name":"debug - Reset password INIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1070,"y":2160,"wires":[]},{"id":"d83db8b6.615058","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":940,"wires":[["b45d8f20.a14e98"]]},{"id":"b45d8f20.a14e98","type":"function","z":"51f1d48a.bfebf4","name":"change projects FS records","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nfindManyObj = {\n                    query : {\n                            query :{type:\"FundingScheme\"}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'settings',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.FundingScheme = res\n                                   findManyObj = {\n                                    query : {\n                                            query :{ }, \n                                            },\n                                    connection:global.get(\"DB_data.connection\"),\n                                    database:global.get(\"DB_data.appDB\"),\n                                    collection:'projects',\n                                    operation:'find',\n                                    }\n                \n                            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                                    msg.payload = res\n                                    node.send(msg) \n                            }) \n            }) ","outputs":1,"noerr":0,"x":420,"y":920,"wires":[["f6b36ce4.b5192","92ec9379.c2753"]]},{"id":"f6b36ce4.b5192","type":"debug","z":"51f1d48a.bfebf4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":430,"y":1020,"wires":[]},{"id":"92ec9379.c2753","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// \"entity_level\" : \"application\",  \n\nrecords = []\nremovableFSRecords = []\n_.each(msg.payload, function (item, index){\n   \n    // Get funding_scheme record\n    FundingSchemeObj = {}\n    _.each(msg.FundingScheme, function(FundingSchemeRecord, FundingSchemeIndex){\n        if (String(item.funding_scheme) === String(FundingSchemeRecord._id)){\n            FundingSchemeObj = FundingSchemeRecord ;\n        }\n    })\n    \n    if (FundingSchemeObj.hasOwnProperty(\"_id\") && FundingSchemeObj.hasOwnProperty(\"entity_level\") === false ){\n       \n       // get correct FundingSchemeObj\n        NewFundingSchemeObj = {}\n        _.each(msg.FundingScheme, function(FundingSchemeRecord, FundingSchemeIndex){\n            if (String(FundingSchemeObj.name) === String(FundingSchemeRecord.name) && FundingSchemeRecord.hasOwnProperty(\"entity_level\")){\n                NewFundingSchemeObj = FundingSchemeRecord ;\n            }\n        })\n       \n       item.funding_scheme = new ObjectID(NewFundingSchemeObj._id)\n       records.push(item)\n    }\n})\n\n\n_.each(msg.FundingScheme, function(FundingSchemeRecord, FundingSchemeIndex){\n    if (FundingSchemeRecord.hasOwnProperty(\"entity_level\") === false ){\n        removableFSRecords.push(new ObjectID(FundingSchemeRecord._id));\n    }\n})\n    \nmsg.removableFSRecords = removableFSRecords;\nmsg.payload = records\nmsg.records = records   \n\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":920,"wires":[["f6b36ce4.b5192","ff3b11e.8b2147"]]},{"id":"ff3b11e.8b2147","type":"function","z":"51f1d48a.bfebf4","name":"Loop through settings records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":790,"y":920,"wires":[["3c81c03f.5791a8"],["3b19a457.10c5ac"]]},{"id":"3c81c03f.5791a8","type":"function","z":"51f1d48a.bfebf4","name":"projects","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n   ","outputs":1,"noerr":0,"x":780,"y":880,"wires":[["ff3b11e.8b2147"]]},{"id":"9dab3ee7.0f9378","type":"debug","z":"51f1d48a.bfebf4","name":"DONE projects && FS records (DEL)","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1370,"y":920,"wires":[]},{"id":"3b19a457.10c5ac","type":"function","z":"51f1d48a.bfebf4","name":"removableFSRecords","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// remove \n            removeObj = {\n                    query : {\n                            query :{_id:{\"$in\":msg.removableFSRecords}}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'settings',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n// return msg;","outputs":1,"noerr":0,"x":1080,"y":920,"wires":[["9dab3ee7.0f9378","6dab7223.48baec"]]},{"id":"706fae39.cfe208","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":1280,"wires":[["2f130265.7512ce"]]},{"id":"2f130265.7512ce","type":"function","z":"51f1d48a.bfebf4","name":"Get all proects where reporting_periods || payments exists","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n                                   findManyObj = {\n                                    query : {\n                                            query :{\"$or\":[{\"reporting_periods\":{\"$exists\":true}}, { \"payments\":{\"$exists\":true }}] }, \n                                            },\n                                    connection:global.get(\"DB_data.connection\"),\n                                    database:global.get(\"DB_data.appDB\"),\n                                    collection:'projects',\n                                    operation:'find',\n                                    }\n                \n                            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                                    msg.payload = res\n                                    node.send(msg) \n                            }) \n      ","outputs":1,"noerr":0,"x":410,"y":1280,"wires":[["e2a42904.3e3c18"]]},{"id":"e2a42904.3e3c18","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// \"entity_level\" : \"application\",  \n\n\n\n_.each(msg.payload, function (item, index){\n    \n    delete item.payments\n    delete item.reporting_period\n    delete item.reporting_periods\n\n})  \n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1280,"wires":[["7638cda8.3642cc"]]},{"id":"7638cda8.3642cc","type":"function","z":"51f1d48a.bfebf4","name":"Loop through settings records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":830,"y":1280,"wires":[["1f25bdb7.49497a"],["35208656.60dffa"]]},{"id":"1f25bdb7.49497a","type":"function","z":"51f1d48a.bfebf4","name":"projects","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : msg.payload,\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'projects',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n   ","outputs":1,"noerr":0,"x":820,"y":1240,"wires":[["7638cda8.3642cc"]]},{"id":"35208656.60dffa","type":"debug","z":"51f1d48a.bfebf4","name":"DONE transactions","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1090,"y":1320,"wires":[]},{"id":"dd35b662.f8a9","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":1400,"wires":[["f2d781e4.92113"]]},{"id":"f2d781e4.92113","type":"function","z":"51f1d48a.bfebf4","name":"Get all emplyee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n      // aggregate\n\n            aggregateObj = {\n                    query : { query : [ { \n                                            \"$match\" : { \n                                \n                                            }\n                                        }, \n                                        { \n                                            \"$lookup\" : { \n                                                \"from\" : \"members\", \n                                                \"localField\" : \"_id\", \n                                                \"foreignField\" : \"employee_id\", \n                                                \"as\" : \"memberships\"\n                                            }\n                                        }, \n                                        { \n                                            \"$unwind\" : { \n                                                \"path\" : \"$memberships\", \n                                                \"includeArrayIndex\" : \"arrayIndex\", \n                                                \"preserveNullAndEmptyArrays\" : false\n                                            }\n                                        }, \n                                        { \n                                            \"$group\" : { \n                                                \"_id\" : { \n                                                    \"project_id\" : \"$memberships.project_id\", \n                                                    \"employee_id\" : \"$_id\"\n                                                }, \n                                                \"memberships\" : { \n                                                    \"$push\" : \"$memberships\"\n                                                }\n                                            }\n                                        }\n                         \n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":280,"y":1400,"wires":[["731bf46.ea37c0c"]]},{"id":"731bf46.ea37c0c","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// \"entity_level\" : \"application\",  \n\nmsg.masterObjects = []\n\n_.each(msg.payload, function (item, index){\n    \n   record_typeGoup = lodash.groupBy(item.memberships , \"record_type\");\n   \n   if (record_typeGoup.hasOwnProperty(\"master\")){\n       masterObject = record_typeGoup.master[0]\n   } else {\n       \n       masterObject = {\n           _id : new ObjectID(),\n            \"project_id\" : new ObjectID(item._id.project_id), \n            \"employee_id\" : new ObjectID(item._id.employee_id), \n            \"record_type\" : \"master\", \n       }\n   }\n   if (record_typeGoup.hasOwnProperty(\"membership\")){\n     \n   _.each(record_typeGoup.membership, function(membershipItem, Index){\n       \n       _.each(new Array((moment(membershipItem.end_date).year() -  moment(membershipItem.start_date).year()) +1 ), function(yearItem,yearItemIndex){\n           \n           if (masterObject.hasOwnProperty(moment(membershipItem.start_date).year() + yearItemIndex) === false ){\n               masterObject[moment(membershipItem.start_date).year() + yearItemIndex] = 0\n           }\n       })\n   })\n   }\n\nmsg.masterObjects.push(masterObject)\n\n})  \n\nmsg.payload = msg.masterObjects\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1400,"wires":[["268542f3.c0c5f6"]]},{"id":"268542f3.c0c5f6","type":"function","z":"51f1d48a.bfebf4","name":"Loop through settings records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":570,"y":1400,"wires":[["43c50339.dbeadc"],["9fde24dc.dca3f"]]},{"id":"43c50339.dbeadc","type":"function","z":"51f1d48a.bfebf4","name":"members","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : msg.payload,\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'members',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n   ","outputs":1,"noerr":0,"x":560,"y":1360,"wires":[["268542f3.c0c5f6"]]},{"id":"ada0d448.11a838","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":1480,"wires":[["43c36e3d.f0c81"]]},{"id":"43c36e3d.f0c81","type":"function","z":"51f1d48a.bfebf4","name":"Get all emplyee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n\n// findOne \nfindOneObj = {\n                    query : {\n                            query :{_id:new ObjectID(\"5bcd9bf3ede2f43ded73dd62\")} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.organizationData = res[0]\n                } else {\n                    msg.organizationData = {}\n                }\n                    \n\n      // aggregate\n\n            aggregateObj = {\n                    query : { query : [         { \n                                \"$match\" : { \n                    \n                                }\n                            }, \n                            { \n                                \"$lookup\" : { \n                                    \"from\" : \"employee_involvement\", \n                                    \"localField\" : \"_id\", \n                                    \"foreignField\" : \"employee_id\", \n                                    \"as\" : \"employee_involvement\"\n                                }\n                            }, \n                            { \n                                \"$lookup\" : { \n                                    \"from\" : \"employee_department_involvement\", \n                                    \"localField\" : \"_id\", \n                                    \"foreignField\" : \"employee_id\", \n                                    \"as\" : \"employee_department_involvement\"\n                                }\n                            },\n                            { \n                                \"$lookup\" : { \n                                    \"from\" : \"employee_cost\", \n                                    \"localField\" : \"_id\", \n                                    \"foreignField\" : \"employee_id\", \n                                    \"as\" : \"employee_cost\"\n                                }\n                            }\n                         \n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n                   \n    })  \n            ","outputs":1,"noerr":0,"x":280,"y":1480,"wires":[["f9c71c95.c77a7"]]},{"id":"f9c71c95.c77a7","type":"function","z":"51f1d48a.bfebf4","name":"","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n\n\nmsg.notFound = []\n\n_.each(msg.payload, function (item, index){\n    \n    generateYearObject = {}\n    \n    _.each(item.employee_involvement, function(invItem, Index){\n       \n       if (invItem.hasOwnProperty(\"end_date\")){\n           end_date = invItem.end_date\n       } else {\n           end_date = moment(invItem.start_date).add( msg.organizationData.employee_years_calc, 'years')\n       }\n       \n      _.each(new Array((moment(end_date).year() -  moment(invItem.start_date).year()) +1 ), function(yearItem,yearItemIndex){\n           \n          if (generateYearObject.hasOwnProperty(moment(invItem.start_date).year() + yearItemIndex) === false ){\n              generateYearObject[moment(invItem.start_date).year() + yearItemIndex] = 0\n              \n              // check if employee_department_involvement year record exists\n              \n              index = lodash.findIndex(item.employee_department_involvement , {year:moment(invItem.start_date).year() + yearItemIndex })\n              \n              if (index === -1){\n                  msg.notFound.push({\n                      year : moment(invItem.start_date).year() + yearItemIndex,\n                      employeeIndex: index,\n                      employeeItem: item,\n                      invItem : invItem,\n                      generateYearObject : generateYearObject\n                  })\n              }\n          }\n      })\n  })\n  \n    \n  \n\n})  \n\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1480,"wires":[["8623af0b.105e7"]]},{"id":"8623af0b.105e7","type":"debug","z":"51f1d48a.bfebf4","name":"DONE transactions","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":810,"y":1520,"wires":[]},{"id":"b11c4ead.1e5548","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":1560,"wires":[["b9ebe746.1a2a8"]]},{"id":"b9ebe746.1a2a8","type":"function","z":"51f1d48a.bfebf4","name":"Get all emplyee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n// distinct\n\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {}\n                              },\n                                 { \n                                        \"$group\" : { \n                                            \"_id\" : \"$_id\"\n                                        }\n                                    }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                     msg.employee_id = [] ; \n                    \n                    _.each(res, function(Item, Index ){\n                         msg.employee_id.push(new ObjectID(Item._id))\n                    })\n                    node.send(msg) \n            }) \n                   \n\n            ","outputs":1,"noerr":0,"x":260,"y":1560,"wires":[[]]},{"id":"3199acdc.5d559c","type":"debug","z":"508957a1.dd5398","name":"TOKEN post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":670,"y":1540,"wires":[]},{"id":"a16ff674.24bb78","type":"function","z":"39834eee.0dd5a2","name":"Update session","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// update    \n\nupdateObj = {\n                    query : {\n                            query :{\n                                    deviceId:msg.payload.deviceId,\n                                    revotioSessionId:msg.payload.revotioSessionId\n                            }, \n                            update : { \"$set\" : {\n                                                    timestamp : new Date(),\n                                                    token: msg.payload.token,\n                                                    Gadgets: [],\n                                                    Page: msg.payload.Page,\n                                                    groupedObject: msg.payload.presentationLayer.groupedObject}},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":140,"y":80,"wires":[[]]},{"id":"e343bb91.2fe0a8","type":"function","z":"e25f5e2d.45871","name":"Update && Get session","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nif (msg.payload.gadgetsList){\n\nupdateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.RevotioData.session._id)}, \n                            update : { \"$push\": { Gadgets: { \"$each\": msg.payload.gadgetsList } }},\n                            options : {upsert: true, returnOriginal: false}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'findOneAndUpdate', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                \n                if (typeof res === 'object' && res.hasOwnProperty(\"value\")){\n                     msg.session = res.value\n              \n               \n                \n                        //     findOneObj = {\n                        //         query : {\n                        //                 query :{\n                        //                       _id:new ObjectID(msg.RevotioData.session._id)\n                        //                 } \n                        //                 },\n                        //         connection:global.get(\"DB_data.connection\"),\n                        //         database:global.get(\"DB_data.appDB\"),\n                        //         collection:'sessions',\n                        //         operation:'find',\n                        //         }\n            \n                        // mongodbTools.resolveAsync(findOneObj, node, function(res){\n                        //     if (res.length > 0){\n                        //         msg.session = res[0]\n                        //     } else {\n                        //         msg.session = {}\n                        //     }\n                                \n                                node.send(msg) \n                        // })  \n                } \n                else {\n                    msg.response = res\n                    node.send(msg) \n                }\n            \n            \n            }) \n            \n} else {\n    console.log({\n        error : \"no msg.payload.gadgetsList present\",\n        RevotioData : msg.RevotioData,\n        payload : msg.payload\n    })\n    // msg.error = \"no msg.payload.gadgetsList present\"\n     node.send(msg) \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":170,"y":220,"wires":[["242f58f1.b6c22"]]},{"id":"6c4dc95f.5f22c","type":"function","z":"e25f5e2d.45871","name":"Get session","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n   delete msg.sessionNew\n   \nfindOneObj = {\n                    query : {\n                            query :{\n                                        _id:new ObjectID(msg.RevotioData.session._id)\n                            } \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.sessionNew = res[0]\n                } else {\n                    msg.sessionNew = {}\n                }\n                    \n                    if (    msg.sessionNew.hasOwnProperty(\"Gadgets\") &&\n                            msg.sessionNew.Gadgets.length ===  msg.session.Gadgets.length \n                    ){\n                        node.send(msg) \n                    }\n            })  ","outputs":1,"noerr":0,"x":470,"y":380,"wires":[["6267a6f2.146138"]]},{"id":"7934527d.c7f0ec","type":"debug","z":"e25f5e2d.45871","name":"1-B","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":530,"y":500,"wires":[]},{"id":"4bcaefa7.bd4c7","type":"debug","z":"e25f5e2d.45871","name":"2-A","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":730,"y":280,"wires":[]},{"id":"9ca782e7.f308b8","type":"debug","z":"e25f5e2d.45871","name":"1-C","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":750,"y":240,"wires":[]},{"id":"260e7564.997072","type":"debug","z":"e25f5e2d.45871","name":"2-B","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":630,"y":440,"wires":[]},{"id":"7e4884c3.ec091c","type":"debug","z":"e25f5e2d.45871","name":"2-C","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":990,"y":440,"wires":[]},{"id":"de21f442.f2c1e","type":"debug","z":"e25f5e2d.45871","name":"2-D","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1110,"y":360,"wires":[]},{"id":"54a1b615.985f98","type":"function","z":"e25f5e2d.45871","name":"get && check response","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n\n// check if its dev env\n// if (env.get(\"PREFORMANCE_CHECK\") && env.get(\"PREFORMANCE_CHECK\") === true){\n    msg.payload.endtime         = new Date() \n    msg.payload.starttime       = msg.payload.starttime\n    msg.payload.timediff        = moment(msg.payload.endtime).diff(moment(msg.payload.starttime))\n    \n    gadgetsList = lodash.orderBy(msg.payload.gadgetsList, [\"endtime\"], [\"desc\"]);\n    \n    \n    msg.payload.gadgetsList = gadgetsList;\n    msg.payload.included = []\n    _.each(gadgetsList, function(item, index){\n        msg.payload.included.push(item.gadgetName)\n    })\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":930,"y":120,"wires":[["2dee3212.2703a6"]]},{"id":"e99718c9.9567b","type":"catch","z":"e15a0fdb.64cc38","name":"","scope":null,"x":200,"y":80,"wires":[["5d659d5f.a7744c"]]},{"id":"5d659d5f.a7744c","type":"debug","z":"e15a0fdb.64cc38","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":318.33332443237305,"y":79.99999618530273,"wires":[]},{"id":"955f4451.75279","type":"catch","z":"51f1d48a.bfebf4","name":"","scope":null,"x":160,"y":80,"wires":[["b1fee72a.1d8c28"]]},{"id":"b1fee72a.1d8c28","type":"debug","z":"51f1d48a.bfebf4","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":278.33332443237305,"y":79.99999618530273,"wires":[]},{"id":"19995f83.8a4738","type":"comment","z":"51f1d48a.bfebf4","name":"Anonymize employee data","info":"","x":230,"y":220,"wires":[]},{"id":"37fd8f06.1143d8","type":"comment","z":"51f1d48a.bfebf4","name":"Anonymize project data","info":"","x":240,"y":480,"wires":[]},{"id":"9fde24dc.dca3f","type":"debug","z":"51f1d48a.bfebf4","name":"DONE transactions","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":830,"y":1420,"wires":[]},{"id":"c54784cc.a6c3a8","type":"inject","z":"a2b40f09.d18fd8","name":"","repeat":"","crontab":"00 00 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":190,"y":200,"wires":[["e2b8eccb.0397b8"]]},{"id":"d84265e6.ed1ec","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (fundingScheme >> Settings)","info":"","x":290,"y":700,"wires":[]},{"id":"59f91170.0a7a9","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (fundingScheme >> projects)","info":"","x":310,"y":880,"wires":[]},{"id":"f92c5bb7.fef368","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (fundingScheme >> transactions)","info":"","x":280,"y":1040,"wires":[]},{"id":"bd19e765.c17c7","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (remove RP in project obj)","info":"","x":240,"y":1240,"wires":[]},{"id":"ca21327c.f68ce8","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (update master obj)","info":"","x":220,"y":1360,"wires":[]},{"id":"49d694b1.bd959c","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (employee involvement department obj)","info":"","x":280,"y":1440,"wires":[]},{"id":"16b1cc20.4b0a34","type":"comment","z":"51f1d48a.bfebf4","name":"enfore data model changes (recalc employee cost)","info":"","x":230,"y":1520,"wires":[]},{"id":"e2b8eccb.0397b8","type":"function","z":"a2b40f09.d18fd8","name":"Get all emplyee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n// distinct\n\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {}\n                              },\n                                 { \n                                        \"$group\" : { \n                                            \"_id\" : \"$_id\"\n                                        }\n                                    }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                     msg.employee_id = [] ; \n                    \n                    _.each(res, function(Item, Index ){\n                         msg.employee_id.push(new ObjectID(Item._id))\n                    })\n                    node.send(msg) \n            }) \n                   \n\n            ","outputs":1,"noerr":0,"x":340,"y":200,"wires":[[]]},{"id":"7d81ff72.bad3e","type":"comment","z":"a2b40f09.d18fd8","name":"Recalc all employee's","info":"","x":140,"y":160,"wires":[]},{"id":"7232508b.9067a","type":"inject","z":"a2b40f09.d18fd8","name":"","repeat":"","crontab":"00 00 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":340,"wires":[["5fceb272.c1085c"]]},{"id":"5fceb272.c1085c","type":"function","z":"a2b40f09.d18fd8","name":"Get all emplyee","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n// distinct\n\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {}\n                              },\n                                 { \n                                        \"$group\" : { \n                                            \"_id\" : \"$_id\"\n                                        }\n                                    }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'employee',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                     msg.employee_id = [] ; \n                    \n                    _.each(res, function(Item, Index ){\n                         msg.employee_id.push(new ObjectID(Item._id))\n                    })\n                    node.send(msg) \n            }) \n                   \n\n            ","outputs":1,"noerr":0,"x":340,"y":340,"wires":[[]]},{"id":"85bbaefb.c8db08","type":"comment","z":"a2b40f09.d18fd8","name":"Session management","info":"","x":120,"y":300,"wires":[]},{"id":"59fb872e.5902f8","type":"function","z":"508957a1.dd5398","name":"Add session to session_stats","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// _id management\nObj = msg.current_session;\nObj.session_id = new ObjectID(msg.current_session._id)\nmsg.current_session._id = new ObjectID();\n\n// Add redirect data\n\nObj.destination_page =  msg.responseObj.Page\nObj.redirect_time =  new Date()\n\n// remove current session flowData\n\ndelete Obj.FlowData\nObj.redirect_revotio_data =  msg.responseObj.RevotioData\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :Obj, \n                            update : { \"$set\" : Obj},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'session_stats',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":1020,"y":1500,"wires":[[]]},{"id":"af5c8a5f.64c24","type":"function","z":"508957a1.dd5398","name":"Get session","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findOne \nfindOneObj = {\n                    query : {\n                            query :{revotioSessionId: msg.responseObj.revotioSessionId, deviceId:msg.responseObj.deviceId} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sessions',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.current_session = res[0]\n                } else {\n                    msg.current_session = {}\n                }\n                    \n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":770,"y":1020,"wires":[["59fb872e.5902f8","1a7afd51.7ed1e3"]]},{"id":"447c8b0f.66f08c","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1915,"y":980,"wires":[["892ab224.21ee78"]]},{"id":"fbacb00a.ef48b8","type":"function","z":"e5822137.be45d","name":"Create users DT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nvar columnStyles = [] ;\nvar headerStyles = [] ;\n\n\nvar tableColumnData  =  {\n         columnHead : [\n                  {\n                    \"title\": \"Name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                            {\n                    \"title\": \"User name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"User name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                   {\n                    \"title\": \"last login\",\n                    \"allowSort\": true,\n                    \"headKey\": \"last login\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                  {\n                    \"title\": \"State\",\n                    \"allowSort\": true,\n                    \"headKey\": \"State\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                ],\n          \"columnOptions\": {\n            \"columnStyle\": {\n              \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\n        \nvar tableRowData = [];\n_.each(lodash.orderBy(msg.result, [\"user_accounts.first_name\", \"user_accounts.last_name\"], [\"asc\", \"asc\"]),function(userItem, userItemIndex){\n     \n    // set state \n    state = \"Undefined\"\n    if (userItem.users.hasOwnProperty(\"deactivated\") && userItem.users.deactivated === true ){\n       state = \"Deactivated\" \n    } else if (userItem.users.hasOwnProperty(\"blockAccount\") && userItem.users.blockAccount === true ){\n       state = \"Blocked account\" \n    } else if (userItem.user_accounts.hasOwnProperty(\"active\") && userItem.users.active === false ){\n       state = \"Account inactive\" \n    } else if (userItem.user_accounts.hasOwnProperty(\"active\") && userItem.users.active === true ){\n       state = \"Account active\" \n    }\n    \n    name = \"\"\n    \n    if (userItem.user_accounts.hasOwnProperty(\"first_name\") ){\n       name = userItem.user_accounts.first_name\n    }\n    \n    if (userItem.user_accounts.hasOwnProperty(\"last_name\") ){\n       name = name + \" \" + userItem.user_accounts.last_name;\n    }\n    \n    username = \"\"\n    if (userItem.user_accounts.hasOwnProperty(\"username\") ){\n       username = userItem.user_accounts.username;\n    }\n    \n    lastlogin = \"\"\n    if (userItem.user_accounts.hasOwnProperty(\"lastlogin\") ){\n       lastlogin = userItem.user_accounts.lastlogin;\n    }\n    \n     \n     obj = {\n           \"rowData\" :[\n                 {\n                           \"data\": userItem.user,\n                           \"type\": \"string\",\n                           \"headKey\":\"_id\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                              {\n                           \"data\":  name,\n                           \"type\": \"string\",\n                           \"headKey\":\"Name\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           {\n                           \"data\": username,\n                           \"type\": \"string\",\n                           \"headKey\": \"User name\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           {\n                           \"data\": moment(lastlogin).format(\"DD-MM-YYYY\") ,\n                           \"type\": \"string\",\n                           \"headKey\":\"Last login\",  \n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           {\n                           \"data\": state ,\n                            \"type\": \"string\",\n                           \"headKey\": \"State\", \n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                       ],\n                   \"rowOptions\": {\n                   //   \"state\": \"warning\",\n                     \"globalClick\": true,\n                     \"style\": {\n                       \"width\": \"20%\"\n                     }\n                   },\n                //   \"rowSourceData\":orgItem\n           }\n\n    tableRowData.push(obj);\n});\n\ntableButton = [\n          {\n            \"buttonData\":\n              {\n                \"title\": \"Create\",\n                // \"allowSearch\": false,\n                // \"searchPlaceholder\": \"Search\",\n                \"design\":\n                  {\n                   \"file\": \"\",\n                    \"icon\":global.get(\"icons.fas.create\") ,\n                    // \"width\": \"\",\n                    size :\"small\",\n                    \"embossed\": true,\n                    \"linebox\": true,\n                    \"gradient\": false,\n                    // \"color\": \"green\",\n                    // padding : \"10px\"\n                  },\n              \n                  \"disabled\": false,\n                // \"type\": \"success\",\n                 action: 'create',\n\n              },\n            \"buttonOptions\":\n              {\n                \"dataType\": \"single\",\n                \"displayType\": \"text\",\n                \"selectionType\": \"global\"\n              }\n          }\n      ]\n\n\n\n\n\nif (tableRowData.length > 10 ){\n    paged = 10;\n} else {\n    paged = tableRowData.length;\n}\n\n//////  Button permissions ************************\n\n\nmsg.payload = { \n    gadgetsList: \n    [ {\n    \"gadgetId\": '2f14f7c2-b61c-f51a-1d4a-dd08884ea246',\n  \"gadgetName\": \"users DT\",\n  \"gadgetType\": \"data-table\",\n            \n    \"gadgetOptions\": {\n      \"allowSearch\": true,\n      \"maxItems\": paged,\n      \"striped\": true,\n      \"export\": true\n    },\n    \"gadgetData\": {\n      \"tableColumnData\": tableColumnData,\n      \"tableTitle\": \"Users\",\n      \"tableRowData\": tableRowData ,\n      \"tableButton\": tableButton,\n  \n    }\n  }]}\n\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":2620,"y":980,"wires":[["4c49a90c.d02c48"]]},{"id":"4c49a90c.d02c48","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2815,"y":980,"wires":[]},{"id":"56bf5158.fb4898","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1915,"y":900,"wires":[["3ef2ba95.4ef7d6"]]},{"id":"3ef2ba95.4ef7d6","type":"function","z":"e5822137.be45d","name":"get All Items","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n// Get UserData\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [\n                                        { \n                                            \"$match\" : {\n                                                \"organization_id\" : new ObjectID(msg.RevotioData.FlowData.organization_id), \n                                             \n                                            }\n                                        }, \n                                       \n                                    ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n            \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":2030,"y":860,"wires":[["671ade1e.f13d4"]]},{"id":"671ade1e.f13d4","type":"function","z":"e5822137.be45d","name":"Create items DT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nvar columnStyles = [] ;\nvar headerStyles = [] ;\n\n\nvar tableColumnData  =  {\n         columnHead : [\n                  {\n                    \"title\": \"Name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                ],\n          \"columnOptions\": {\n            \"columnStyle\": {\n            //   \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\nvar tableRowData = [];\n_.each(msg.payload,function(Item, ItemIndex){\n      obj = {\n           \"rowData\" :[\n                 {\n                           \"data\": Item._id,\n                           \"type\": \"string\",\n                           \"headKey\":\"_id\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                            \n                           {\n                           \"data\": Item.name,\n                           \"type\": \"string\",\n                           \"headKey\": \"Name\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           \n                       ],\n                   \"rowOptions\": {\n                   //   \"state\": \"warning\",\n                     \"globalClick\": true,\n                     \"style\": {\n                    //   \"width\": \"20%\"\n                     }\n                   },\n                //   \"rowSourceData\":orgItem\n           }\n\n\n      \n\n    tableRowData.push(obj);\n});\n\ntableButton = [\n          {\n            \"buttonData\":\n              {\n                \"title\": \"Create\",\n                // \"allowSearch\": false,\n                // \"searchPlaceholder\": \"Search\",\n                \"design\":\n                  {\n                   \"file\": \"\",\n                    \"icon\":global.get(\"icons.fas.create\") ,\n                    // \"width\": \"\",\n                    size:\"small\",\n                    \"embossed\": true,\n                    \"linebox\": true,\n                    \"gradient\": false,\n                    // \"color\": \"green\",\n                    // padding : \"10px\"\n                  },\n              \n                  \"disabled\": false,\n                // \"type\": \"success\",\n                 action: 'create',\n                //   clickType: \"row\"\n\n              },\n            \"buttonOptions\":\n              {\n                \"dataType\": \"single\",\n                \"displayType\": \"text\",\n                \"selectionType\": \"global\"\n              }\n          }\n      ]\n\n\n\n\n\nif (tableRowData.length > 10 ){\n    paged = 10;\n} else {\n    paged = tableRowData.length;\n}\n\n//////  Button permissions ************************\n\n\nmsg.payload = { \n    user_id : msg.RevotioData.FlowData.user_id,\n    gadgetsList: \n    [ {\n    \"gadgetId\": '273471aa-18a0-6bc2-2a78-1e74f4ae47d2',\n    \"gadgetName\": \"Items DT\",\n    \"gadgetType\": \"data-table\",\n            \n    \"gadgetOptions\": {\n      \"allowSearch\": true,\n      \"maxItems\": paged,\n      \"striped\": true,\n      \"export\": true\n    },\n    \"gadgetData\": {\n      \"tableColumnData\": tableColumnData,\n      \"tableTitle\": \"Items\",\n      \"tableRowData\": tableRowData ,\n      \"tableButton\": tableButton,\n    //   \"tableOptions\": {\n    //     \"mainOption\": \"global\"\n    //   }\n    }\n  }]}\n\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":2420,"y":860,"wires":[["fa510cbe.abfd88"]]},{"id":"fa510cbe.abfd88","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2535,"y":860,"wires":[]},{"id":"892ab224.21ee78","type":"function","z":"e5822137.be45d","name":"get users","func":"var mongodbTools = global.get('mongodbTools');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"type_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                  \"type\": \"organization\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"user_accounts\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"user\",\n                                  \"as\": \"user_accounts\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"users\",\n                                  \"localField\": \"user\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"users\"\n                                }\n                              },\n                              \n                              \n                            //   {\n                            //     $project: {\n                            //       \"permission\": 1.0,\n                            //       \"projectData.name\": 1.0\n                            //     }\n                            //   },\n                              {\n                                $unwind: {\n                                  \"path\": \"$user_accounts\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              },\n                              {\n                                $unwind: {\n                                  \"path\": \"$users\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = res\n                    node.send(msg) \n            })  \n// return msg;","outputs":1,"noerr":0,"x":2080,"y":980,"wires":[["fbacb00a.ef48b8"]]},{"id":"ea1c9b82.6b253","type":"function","z":"f8594dbe.be6f8","name":"Route based on msg.RevotioData.Form.FormActionType","func":"var Create, Edit,Move, Copy,Template,  Post;\n\n\nif (msg.RevotioData.FlowData.Form.FormActionType === \"Create\"){\n    msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n    msg.RevotioData.FlowData.Form.ModalAction = 'show';\n    Create = msg;\n} else if (msg.RevotioData.FlowData.Form.FormActionType === \"Edit\"){\n    msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n    msg.RevotioData.FlowData.Form.ModalAction = 'show';\n    Edit = msg;\n} else if (msg.RevotioData.FlowData.Form.FormActionType === \"Move\"){\n    msg.RevotioData.FlowData.Form.ModalAction = 'show';\n    Move = msg;\n} else if (msg.RevotioData.FlowData.Form.FormActionType === \"Copy\"){\n    msg.RevotioData.FlowData.Form.ModalAction = 'show';\n    Copy = msg;\n}else if (msg.RevotioData.FlowData.Form.FormActionType === \"Template\"){\n    msg.RevotioData.FlowData.Form.ModalAction = 'show';\n    Template = msg;\n} else if (msg.RevotioData.FlowData.Form.FormActionType === \"Post\"){\n    msg.RevotioData.FlowData.Form.ModalAction = 'hide';\n    Post = msg;\n} \nreturn [Create, Edit,Move, Copy, Template,  Post];","outputs":6,"noerr":0,"x":790,"y":580,"wires":[["b796b735.e3db6","b1484faa.14c4a8"],["2647f867.fdaa5","7524c531.d210dc"],["15a5f0ae.239787","e44bc704.c13258"],["61ac7d98.a23d9c","b8332ee7.c1c62"],["5e996959.4711","615fb178.72384"],["c8d9476d.98a6b8","e7e6e9c.592d718"]],"outputLabels":["Create","Edit","Move","Copy","Template","Post"]},{"id":"1e5b7f4a.b332b1","type":"debug","z":"f8594dbe.be6f8","name":"Form action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":660.0003051757812,"y":512.0947875976562,"wires":[]},{"id":"70d4862b.5523b","type":"comment","z":"f8594dbe.be6f8","name":"Route form action","info":"","x":570,"y":540,"wires":[]},{"id":"b796b735.e3db6","type":"debug","z":"f8594dbe.be6f8","name":"form CREATE","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1300,"y":200,"wires":[]},{"id":"b1484faa.14c4a8","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1341.2498779296875,"y":278.5713195800781,"wires":[["ad63e625.ccfcf"],["6e477b3e.db5d9c"],["39a72f9f.1ed22"],["cb53facf.aeffc8"],["5b1757a.e9b2ea8"]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"fc354697.a3356","type":"comment","z":"f8594dbe.be6f8","name":"Form data ","info":"msg.formData = {\n    type: \"create\", \"update\",\n    formType : \"user\", // empoloyee, project, teammember, involvement, time-recording\n    formActionType : \"create\", \"update\",\n    modalAction : \"show\", \"hide\"\n    data:{\n        _id: Entity ID \n        }\n    \n}","x":480,"y":460,"wires":[]},{"id":"7524c531.d210dc","type":"debug","z":"f8594dbe.be6f8","name":"form EDIT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1300,"y":500,"wires":[]},{"id":"2647f867.fdaa5","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1361.2498779296875,"y":578.5713195800781,"wires":[["3d38afd0.ff824"],["2729a692.708e42"],["dac1ec9c.b8b2d8"],["ad0adff8.7c1c98"],["3a3c18db.de29d8"]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"c8d9476d.98a6b8","type":"debug","z":"f8594dbe.be6f8","name":"form POST","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1230,"y":1320,"wires":[]},{"id":"e7e6e9c.592d718","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1270,"y":1440,"wires":[["2f9fac83.980e3c"],["885379b1.db3ef"],["e15a8c1b.84bdf"],["e87f48c0.e1ce"],[]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"ad63e625.ccfcf","type":"function","z":"f8594dbe.be6f8","name":"Set new organziation payload","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar title = \"Choose \" + msg.RevotioData.FlowData.Form.FormSubType;\nvar options = {} ;\n\n// create options payload\n_.each(msg.payload, function(item, value){\n    options[item._id] = item.name;\n});\n\nmsg.form = {\n      id: 'create-organization',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'organization overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Create organization',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'Organization name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n            {\n                name: 'subscription',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: \"\",\n                    label: 'Subscription',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n            {\n              name: 'subscriptionDate',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'Subscription date',\n                type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n                width: 50\n              }\n            },\n            \n      ]}]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1990,"y":140,"wires":[["5c511bd2.aa90d4"]]},{"id":"6e477b3e.db5d9c","type":"function","z":"f8594dbe.be6f8","name":"Set new application payload","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\nvar title = \"Choose \" + msg.RevotioData.FlowData.Form.FormSubType;\nvar options = {} ;\n\n// create options payload\n_.each(msg.payload, function(item, value){\n    options[item._id] = item.name;\n});\n\nmsg.form = {\n      id: 'create-application',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      organization_id : msg.RevotioData.FlowData.Form.organization_id,\n      application_id:new ObjectID(),\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'application overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Create application',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n              name: 'domain',\n              htmlTag: 'input',  // button | select | textarea\n              \n              options: {\n                value: \"\",\n                label: 'Domain',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n              name: 'api',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'Api',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n              name: 'autoSave',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Auto save',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n             {\n              name: 'github',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Github repo ?',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubUrl',\n              htmlTag: 'input',  // button | select | textarea\n               execActionData: [\n                { 'github': true }\n                ],\n              options: {\n                value: \"\",\n                label: 'Github url',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubHTTPS',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                { 'github': true }\n                ],\n              options: {\n                value: \"\",\n                \n                label: 'Github HTTPS',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubSSH',\n              execActionData: [\n                { 'github': true }\n                ],\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'github SSH',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n              name: 'dockerBasedApp',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Docker based app',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n                name: 'dockerImageRecords',\n                htmlTag: 'subform',\n                execActionData: [\n                { 'dockerBasedApp': true }\n                ],\n                fields: [\n                          [\n                           {\n                              htmlTag: 'input',\n                              name: 'dockerImageName',\n                              options: {\n                                label: 'Docker image name',\n                                placeholder: '',\n                                required: true,\n                                type: 'text',\n                                value: '',\n                                width: 100\n                              }\n                            },\n                            {\n                              name: 'dockerImagePrio',\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value: '',\n                                label: 'Docker image prio',\n                                type: 'number', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 50,\n                                width: 50\n                              }\n                            },\n                            {\n                              name: '_id',\n                              htmlTag: 'input',  // button | select | textarea\n                              options: {\n                                value: String(new ObjectID()),\n                                label: 'Id',\n                                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                                placeholder: '',\n                                required: false, // false by default\n                                maxlength: 50,\n                                disabled : true,\n                                width: 50\n                              }\n                            },\n                          ]\n                        ],\n                options: {\n                  required: false, // false by default\n                  label: 'Docker image management',\n                  subformType: 'multiple', //or single - if multiple we need to create the add/remove buttons\n                //   subformMin: 1, // optional\n                //   subformMax: 10, // optional\n                  subformDisplay: 'table', // list (table: with the label on top of the column) (list: label on left)\n                  subformAppend: 'top', // bottom\n                  width: 100\n                }\n              },\n              \n\n\n      ]},\n      ]\n    };\n\n// get page templates\n\nif (fs.existsSync(global.get(\"DomainProperties.filesFolder\")+\"templates/applications\")) {\n    templates = {}\n    _.each(fs.readdirSync(global.get(\"DomainProperties.filesFolder\")+\"templates/applications\"), function(Item, index){\n        \n        templates[global.get(\"DomainProperties.filesFolder\")+\"templates/applications/\"+Item] = Item\n                   \n    \n        \n             \n    })\n    \n    msg.form.steps[0].fields.push( {\n              name: 'use_template',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: false,\n                label: 'Use application template',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            })\n    msg.form.steps[0].fields.push( {\n                name: 'template',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:templates,\n                 execActionData: [\n                    { 'use_template':true }\n                    ],\n                  options: {\n                    value: \"\",\n                    label: 'Templates',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                })\n    \n    \n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":180,"wires":[["ab7c211d.ca157"]]},{"id":"cb53facf.aeffc8","type":"function","z":"f8594dbe.be6f8","name":"Set new item payload","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar title = \"Choose \" + msg.RevotioData.FlowData.Form.FormSubType;\nvar options = {} ;\n\n// create options payload\n_.each(msg.payload, function(item, value){\n    options[item._id] = item.name;\n});\n\nmsg.form = {\n      id: 'create-item',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      organization_id : msg.RevotioData.FlowData.Form.organization_id,\n      item_id: new ObjectID(),\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'item overview',\n        // url: true,\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Create item',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: \"\",\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n            // {\n            //   name: 'domain ',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: \"\",\n            //     label: 'Domain',\n            //     type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: \"\",\n            //     required: true, // false by default\n            //     maxlength: 50,\n            //     disabled: false,\n            //   }\n            // },\n            // {\n            //   name: 'api',\n            //   htmlTag: 'input',  // button | select | textarea\n            //   options: {\n            //     value: \"\",\n            //     label: 'Api',\n            //     type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //     placeholder: \"\",\n            //     required: true, // false by default\n            //     maxlength: 50,\n            //     disabled: false,\n            //   }\n            // },\n            \n      ]}]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":300,"wires":[["50e65079.afdbc8"]]},{"id":"39a72f9f.1ed22","type":"function","z":"f8594dbe.be6f8","name":"Set new page payload","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar title = \"Choose \" + msg.RevotioData.FlowData.Form.FormSubType;\nvar options = {} ;\n\n\n// create options payload\n_.each(msg.payload, function(item, value){\n    options[item._id] = item.name;\n});\n\nmsg.form = {\n      id: 'create-page',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      page_id: new ObjectID(),\n      organization_id : new ObjectID(msg.RevotioData.FlowData.Form.organization_id),\n      application_id : new ObjectID(msg.RevotioData.FlowData.Form.application_id),\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n    //   Page: 'application overview',\n        // url: true,\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n        Page: \"page overview\",\n      title: 'Create page',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n               execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n            {\n              name: 'label',\n              htmlTag: 'input',  // button | select | textarea\n               execActionData: [\n                    { 'use_template':false }\n                    ],\n              options: {\n                value: \"\",\n                label: 'Label',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            }\n          \n      ]}]\n    };\n\n// get page templates\n\n\nif (fs.existsSync(global.get(\"DomainProperties.filesFolder\")+\"templates/pages\")) {\n    templates = {}\n    _.each(fs.readdirSync(global.get(\"DomainProperties.filesFolder\")+\"templates/pages\"), function(Item, index){\n        \n        templates[global.get(\"DomainProperties.filesFolder\")+\"templates/pages/\"+Item] = Item\n        \n    })\n    \n    msg.form.steps[0].fields.push( {\n              name: 'use_template',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: false,\n                label: 'Use template',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            })\n    msg.form.steps[0].fields.push( {\n                name: 'template',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:templates,\n                 execActionData: [\n                    { 'use_template':true }\n                    ],\n                  options: {\n                    value: \"\",\n                    label: 'Templates',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                })\n    \n    \n}\n\n\n\n\n\n// if (        msg.RevotioData.FlowData.Form.FormData.ApplicationData                                  && \n//             msg.RevotioData.FlowData.Form.FormData.ApplicationData.hasOwnProperty(\"dockerBasedApp\")      && \n//             msg.RevotioData.FlowData.Form.FormData.ApplicationData.dockerBasedApp === true               &&\n//             msg.RevotioData.FlowData.Form.FormData.ApplicationData.hasOwnProperty(\"dockerImageRecords\")  && \n//             msg.RevotioData.FlowData.Form.FormData.ApplicationData.dockerImageRecords.length > 0 \n//             ){\n\n//             Obj = {\n//                       htmlTag: 'select',\n//                       name: 'dockerContainerID',\n//                       optionsGroup: {} ,\n                   \n//                       options: {\n//                         label: 'Docker container',\n//                         required: true,\n//                         type: 'text',\n//                         value: ''\n//                       }\n//                     };\n                    \n//                     _.each(lodash.orderBy(msg.RevotioData.FlowData.Data.applicationData.dockerImageRecords, [\"dockerImagePrio\"],[\"desc\"] ), function(Item, Index){\n//                         Obj.optionsGroup[Item._id] = Item.dockerImageName\n//                     })\n                    \n//                     if (msg.RevotioData.FlowData.Form.hasOwnProperty(\"FormData\") && msg.RevotioData.FlowData.Form.FormData.hasOwnProperty(\"dockerContainerID\")){\n//                     Obj.options.value = msg.RevotioData.FlowData.Form.FormData.dockerContainerID\n//                     }\n//                 msg.form.steps[0].fields.push(Obj)\n                \n//             }\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":240,"wires":[["36518f46.a0a108"]]},{"id":"5b1757a.e9b2ea8","type":"function","z":"f8594dbe.be6f8","name":"Set new user payload","func":"var _ = global.get('underscore');\nvar lodash = global.get('lodash');\n\n\nmsg.form = {\n      id: 'create-user-form',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      entity : \"user\", // empoloyee, project, teammember, involvement, time-recording\n      Type: \"Create\",\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      organization_id: msg.RevotioData.PostData.gadgetData.organization_id,\n      FormType : \"User\",\n      title: 'Create user',\n      steps: [\n        {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n              {\n              name: 'first_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'First name',\n                placeholder: 'John',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                required: true // false by default\n              }\n            },\n              {\n              name: 'middle_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Middle name',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'last_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Last name',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: 'Do',\n                required: true, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'email',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Email address',\n                type: 'email', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: true, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'roles',\n              htmlTag: 'select',  // button | select | textarea\n              optionsGroup:  global.get('permissions.ID'),\n              options: {\n                value: '',\n                label: 'User type',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n\n            \n        ]},\n      ]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":340,"wires":[["4482bc2f.50bbc4"]]},{"id":"fc166fda.5685e8","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect PAGES","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: msg.RevotioData.PostData.gadgetData.formObj.application_id,\n        page_id: msg.RevotioData.PostData.gadgetData.formObj.page_id,\n        organization_id: msg.RevotioData.PostData.gadgetData.formObj.organization_id\n    }\n}\n    \nif (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-page\"){\n\n    // check if template is used\n    if (msg.RevotioData.PostData.gadgetData.formData.use_template){\n      \n            // content = JSON.parse()\n              content =   fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template)\n               \n    } else {\n        content = { \"container\" : []}\n    }\n\n    query = {\n        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},\n        update : {\"$set\": { \n            label:msg.RevotioData.PostData.gadgetData.formData.label,\n            page_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id),\n            timestamp : new Date(),\n            application_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n            organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n            name : msg.RevotioData.PostData.gadgetData.formData.name,\n           \"content\" : content, \n            groupedObject : {},\n            menuSettings : {},\n            customItems:[],\n            dockerContainerID : new ObjectID(msg.RevotioData.PostData.gadgetData.formData.dockerContainerID)\n            \n        }},\n        options : {upsert : true }\n    }\n    \n    \n    \n     Obj = { \n            query : query,\n        \n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'pages',\n        operation:\"update\",\n                }\n                // node.send(msg) \n        mongodbTools.resolveAsync(Obj, node, function(res){\n            // msg.result = res\n            // result = res;\n            // create new token string\n   \n        \n            node.send(msg)\n        })\n} else {\n\nAppfindObj = { \n        query : {query: {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},},\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'pages',\n        operation:\"findOne\",\n    }\n    \n    // node.send(msg) \n        mongodbTools.resolveAsync(AppfindObj, node, function(res){\n            \n            \n                \n            res.changedDate = new Date()\n            res.page_id = new ObjectID(res._id)\n            \n            delete res._id\n            AppretentionInsertObj = { \n                query : {\n                        query : {_id: new ObjectID()},\n                                \n                                update : {\"$set\": res},\n                                options : {upsert : true }\n                            },\n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'pages_retention',\n                operation:\"update\",\n            }\n            \n            mongodbTools.resolveAsync(AppretentionInsertObj, node, function(res){\n\n           \n            \n                        query = {\n                        query :  {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},\n                        update : {\"$set\": { \n                             backend_flows_files: msg.RevotioData.PostData.gadgetData.formData.backend_flows_files,\n                            backend_flows: msg.RevotioData.PostData.gadgetData.formData.backend_flows,\n                             label:msg.RevotioData.PostData.gadgetData.formData.label,\n                            name : msg.RevotioData.PostData.gadgetData.formData.name,\n                            dockerContainerID : new ObjectID(msg.RevotioData.PostData.gadgetData.formData.dockerContainerID),\n                            updated : new Date()\n                        }},\n                        options : {upsert : true }\n                    }\n                    \n                AppUpdateObj = { \n                        query : query,\n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'pages',\n                        operation:\"update\",\n                    }\n            \n               mongodbTools.resolveAsync(AppUpdateObj, node, function(res){\n\n                \n            \n                node.send(msg)\n               })\n                })\n\n        })\n\n\n\n}\n\n\n// return msg;","outputs":1,"noerr":0,"x":1940,"y":1520,"wires":[["395b6a0a.00b266"]]},{"id":"2f9fac83.980e3c","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect ORG","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nif (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-organization\"){\n    msg.RevotioData.PostData.gadgetData.formObj.organization_id = new ObjectID()\n    query = {\n        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)},\n        update : {\"$set\": { \n           \n           \n            created : new Date(),\n            name :              msg.RevotioData.PostData.gadgetData.formData.name,\n            subscription:       msg.RevotioData.PostData.gadgetData.formData.subscription,\n            subscriptionDate:   new Date(msg.RevotioData.PostData.gadgetData.formData.subscriptionDate),\n        }},\n        options : {upsert : true }\n    }\n} else {\n    query = {\n        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)},\n        update : {\"$set\": { \n            name :                  msg.RevotioData.PostData.gadgetData.formData.name,\n            subscription:           msg.RevotioData.PostData.gadgetData.formData.subscription,\n            subscriptionDate:       new Date(msg.RevotioData.PostData.gadgetData.formData.subscriptionDate),\n            updated :               new Date()\n        }},\n        options : {upsert : true }\n    }\n    \n    \n}\nmsg.query = query\nObj = { \n        query : query,\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'organizations',\n        operation:\"update\",\n        }\n                \nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        organization_id: msg.RevotioData.PostData.gadgetData.formObj.organization_id\n    }\n}\n                \n// node.send(msg) \n        mongodbTools.resolveAsync(Obj, node, function(res){\n            // msg.result = res\n            // result = res;\n            // create new token string\n            \n           if (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-organization\"){\n               \n                \n                query = {\n                    query : {user: new ObjectID(msg.RevotioData.session.user_id) , type_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)},\n                    update : {\"$set\": { \n                        type_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n                        created : new Date(),\n                        type : \"organization\",\n                        permission : 0,\n                       user: new ObjectID(msg.RevotioData.session.user_id) , \n                     \n                        \n                       \n                    }},\n                    options : {upsert : true }\n                }\n                Obj = { \n                    query : query,\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'user_permissions',\n                    operation:\"update\",\n                    }\n                      mongodbTools.resolveAsync(Obj, node, function(res){\n                         \n                         node.send(msg)\n                         \n                      })\n            } else {\n            node.send(msg)\n            }\n        })\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":1670,"y":1260,"wires":[["ea6bac95.51f2f8"]]},{"id":"25a9d4ae.887f9c","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect ITEMS","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n                \nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        item_id: msg.RevotioData.PostData.gadgetData.formObj.item_id,\n        organization_id: msg.RevotioData.PostData.gadgetData.formObj.organization_id\n    }\n}\n       \n        \n        \nif (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-item\"){\n    msg.RevotioData.PostData.gadgetData.formObj.item_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)\n    query = {\n        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)},\n        update : {\"$set\": { \n            _id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id),\n            timestamp : new Date(),\n           \n            organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n            name : msg.RevotioData.PostData.gadgetData.formData.name,\n           \"content\" : { \"container\" : []}, \n            groupedObject : {},\n            // menuSettings : {},\n            // customItems:[],\n        }},\n        options : {upsert : true }\n    }\n    Obj = { \n            query : query,\n        \n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'items',\n        operation:\"update\",\n                }         \n// node.send(msg) \n        mongodbTools.resolveAsync(Obj, node, function(res){\n            // msg.result = res\n            // result = res;\n            // create new token string\n            \n        \n            node.send(msg)\n        })\n      \n} else {\n\nAppfindObj = { \n        query : {query: {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)},},\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'items',\n        operation:\"findOne\",\n    }\n    \n\n    \n\n    \n    // node.send(msg) \n        mongodbTools.resolveAsync(AppfindObj, node, function(res){\n            \n            \n                \n            res.changedDate = new Date()\n            res.item_id = new ObjectID(res._id)\n            \n            delete res._id\n            AppretentionInsertObj = { \n                query : {\n                        query : {_id: new ObjectID()},\n                            update : {\"$set\": res},\n                                options : {upsert : true }\n                            },\n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'items_retention',\n                operation:\"update\",\n            }\n            \n            mongodbTools.resolveAsync(AppretentionInsertObj, node, function(res){\n\n            })\n            \n                        query = {\n                        query :  {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)},\n                        update : {\"$set\": { \n                            name : msg.RevotioData.PostData.gadgetData.formData.name,\n                            updated : new Date()\n                        }},\n                        options : {upsert : true }\n                    }\n                    \n                AppUpdateObj = { \n                        query : query,\n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'items',\n                        operation:\"update\",\n                    }\n            \n               mongodbTools.resolveAsync(AppUpdateObj, node, function(res){\n\n                \n            \n                node.send(msg)\n                \n                })\n\n        })\n\n\n\n}\n\n","outputs":1,"noerr":0,"x":1950,"y":1740,"wires":[["aa2ff81.c531988"]]},{"id":"37cf5ac7.3ceeae","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect APPS","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\n\n                \nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n        organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)\n    }\n}\n                \n    if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('autoSave') === false){\n        msg.RevotioData.PostData.gadgetData.formData.autoSave = false\n    }\n    if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('dockerBasedApp') === false){\n        msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp = false\n    }\n    if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"dockerImageRecords\") === true && msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords.length > 0){\n        \n        dockerImageRecords = []\n        _.each(msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,function(Item, Index){\n            \n            // dockerImageRecords.push({\n            //   dockerImageName :Item.dockerImageName,\n            //   dockerImagePrio :Item.dockerImagePrio,\n            //   _id :new ObjectID(Item._id),\n            // })\n            if (ObjectID.isValid(Item._id) === false){\n                Item._id = new ObjectID()\n            } else {\n                 Item._id = new ObjectID(Item._id)\n            }\n            \n        })\n        // msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords = dockerImageRecords\n        \n    }\n    if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"environmentsRecords\") === true && msg.RevotioData.PostData.gadgetData.formData.environmentsRecords.length > 0){\n        \n        environmentsRecords = []\n        _.each(msg.RevotioData.PostData.gadgetData.formData.environmentsRecords,function(Item, Index){\n            \n            // dockerImageRecords.push({\n            //   dockerImageName :Item.dockerImageName,\n            //   dockerImagePrio :Item.dockerImagePrio,\n            //   _id :new ObjectID(Item._id),\n            // })\n            \n            if (ObjectID.isValid(Item._id) === false){\n                Item._id = new ObjectID()\n            } else {\n                 Item._id = new ObjectID(Item._id)\n            }\n            \n        })\n        // msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords = dockerImageRecords\n        \n    }\n\n\n// check globalContext Data\n\nif (    \n                msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"environments\") && \n                msg.RevotioData.PostData.gadgetData.formData.environments === true && \n                msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"globalContextData\") &&\n                msg.RevotioData.PostData.gadgetData.formData.globalContextData.length > 0  ){\n    \n    _.each(msg.RevotioData.PostData.gadgetData.formData.globalContextData,function(Item, Index){\n        \n        // get envRecord \n        \n        Item.environmentName = \"None\"\n        _.each(msg.RevotioData.PostData.gadgetData.formData.environmentsRecords, function (environmentsRecordsItem, environmentsRecordsIndex){\n            \n            if (String(environmentsRecordsItem._id) === String(Item.environment)){\n                Item.environmentName = environmentsRecordsItem.name\n                \n            }\n            \n        })\n        \n        \n        \n    })\n    \n}\n\n\nif (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-application\"){\n    \n                 updateObj = {\n                    query : {\n                            query :  { _id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)},\n                            update :   { \n                                        organization_id:new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n                                        name : msg.RevotioData.PostData.gadgetData.formData.name,\n                                        domain: msg.RevotioData.PostData.gadgetData.formData.domain,\n                                        adminSettings: {\n                                            autoSave: msg.RevotioData.PostData.gadgetData.formData.autoSave,\n                                        },\n                                         github: msg.RevotioData.PostData.gadgetData.formData.github,\n                                        githubUrl: msg.RevotioData.PostData.gadgetData.formData.githubUrl,\n                                        githubHTTPS: msg.RevotioData.PostData.gadgetData.formData.githubHTTPS,\n                                        githubSSH : msg.RevotioData.PostData.gadgetData.formData.githubSSH,\n                                        api: msg.RevotioData.PostData.gadgetData.formData.api,\n                                        updated : new Date(),\n                                        dockerImageRecords  :msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,\n                                        dockerBasedApp :msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp,\n                                        globalContextData : msg.RevotioData.PostData.gadgetData.formData.globalContextData,\n                                        environments :  msg.RevotioData.PostData.gadgetData.formData.environments,\n                                        environmentsRecords: msg.RevotioData.PostData.gadgetData.formData.environmentsRecords\n                             },\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n                    node.send(msg) \n            })  \n           \n\n\n\n} else {\n    \n    // adminSettings = {}\n    \n    \nAppfindObj = { \n        query : {query:{_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)} },\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'applications',\n        operation:\"findOne\",\n    }\n    \n\n    \n\n    \n    // node.send(msg) \n        mongodbTools.resolveAsync(AppfindObj, node, function(res){\n            \n            \n                \n            res.changedDate = new Date()\n            res.application_id = new ObjectID(res._id)\n            delete res._id\n            AppretentionInsertObj = { \n                query : {\n                        query : {_id: new ObjectID()},\n                            update : {\"$set\": res},\n                                options : {upsert : true }\n                            },\n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'applications_retention',\n                operation:\"update\",\n            }\n            \n            mongodbTools.resolveAsync(AppretentionInsertObj, node, function(res){\n\n            })\n            \n        \n            \n                 updateObj = {\n                    query : {\n                            query :  {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)},\n                            update :  {\"$set\": { \n                            name : msg.RevotioData.PostData.gadgetData.formData.name,\n                            domain: msg.RevotioData.PostData.gadgetData.formData.domain,\n                            adminSettings: {\n                                autoSave: msg.RevotioData.PostData.gadgetData.formData.autoSave,\n                            },\n                            backend_flows_files: msg.RevotioData.PostData.gadgetData.formData.backend_flows_files,\n                            backend_flows: msg.RevotioData.PostData.gadgetData.formData.backend_flows,\n                                       \n                            github: msg.RevotioData.PostData.gadgetData.formData.github,\n                            githubUrl: msg.RevotioData.PostData.gadgetData.formData.githubUrl,\n                            githubHTTPS: msg.RevotioData.PostData.gadgetData.formData.githubHTTPS,\n                            githubSSH : msg.RevotioData.PostData.gadgetData.formData.githubSSH,\n                            api: msg.RevotioData.PostData.gadgetData.formData.api,\n                            updated : new Date(),\n                            dockerImageRecords  :msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,\n                            dockerBasedApp :msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp,\n                            globalContextData : msg.RevotioData.PostData.gadgetData.formData.globalContextData,\n                            environments :  msg.RevotioData.PostData.gadgetData.formData.environments,\n                            environmentsRecords: msg.RevotioData.PostData.gadgetData.formData.environmentsRecords\n                        }},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n                    node.send(msg) \n            })  \n                \n          \n\n        })\n\n\n\n}\n\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2010,"y":1300,"wires":[["a90cea2a.7d8828"]]},{"id":"3d38afd0.ff824","type":"function","z":"f8594dbe.be6f8","name":"Map organziation data","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nmsg.form = {\n      id: 'edit-organization',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'organization overview',\n      organization_id: msg.RevotioData.FlowData.Form.FormData._id,\n      title: 'Edit organization',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Organization name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n              {\n                name: 'subscription',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: msg.RevotioData.FlowData.Form.FormData.subscription,\n                    label: 'Subscription',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n            {\n              name: 'subscriptionDate',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.subscriptionDate,\n                label: 'Subscription date',\n                type: 'date', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n                width: 50\n              }\n            },\n      ]}]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":500,"wires":[["30bb8f6e.97b36"]]},{"id":"2729a692.708e42","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nmsg.form = {\n      id: 'edit-application',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'application overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Edit application',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n                \n              }\n            },\n            {\n              name: 'domain',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.domain,\n                label: 'Domain',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n            {\n              name: 'api',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.api,\n                label: 'Api',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n          \n      ]},\n    //     {\n    //       title: 'Context information',\n    //       subtitle: '',\n    //       fields:  [] \n        \n    //   }\n      ]\n    };\n\n\nif (msg.RevotioData.FlowData.Form.FormData.hasOwnProperty('adminSettings') === false  ){\nmsg.RevotioData.FlowData.Form.FormData.adminSettings = {}\n} \nif ( msg.RevotioData.FlowData.Form.FormData.adminSettings.hasOwnProperty('autoSave')=== false){\n    msg.RevotioData.FlowData.Form.FormData.adminSettings.autoSave = false\n}\nif ( msg.RevotioData.FlowData.Form.FormData.hasOwnProperty('githubUrl')=== false){\n    msg.RevotioData.FlowData.Form.FormData.github = false\n    msg.RevotioData.FlowData.Form.FormData.githubUrl =  \"\"\n    msg.RevotioData.FlowData.Form.FormData.githubHTTPS =  \"\"\n    msg.RevotioData.FlowData.Form.FormData.githubSSH =  \"\"\n}\n\n\nmsg.form.steps[0].fields.push(  {\n              name: 'github',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.github,\n                label: 'Github repo ?',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubUrl',\n              htmlTag: 'input',  // button | select | textarea\n               execActionData: [\n                { 'github': true }\n                ],\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.githubUrl,\n                label: 'Github url',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubHTTPS',\n              htmlTag: 'input',  // button | select | textarea\n              execActionData: [\n                { 'github': true }\n                ],\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.githubHTTPS,\n                \n                label: 'Github HTTPS',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },\n             {\n              name: 'githubSSH',\n              execActionData: [\n                { 'github': true }\n                ],\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.githubSSH,\n                label: 'github SSH',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            },{\n              name: 'autoSave',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:  msg.RevotioData.FlowData.Form.FormData.adminSettings.autoSave,\n                label: 'Auto save',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            })\n\n\n// backend files\n\nmsg.form.steps[0].fields.push( {\n              name: 'backend_flows',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:  msg.RevotioData.FlowData.Form.FormData.backend_flows,\n                label: 'Backend flows',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            })\n\n\nfields = []\nif ( msg.RevotioData.FlowData.Form.FormData.backend_flows && msg.RevotioData.FlowData.Form.FormData.backend_flows_files && msg.RevotioData.FlowData.Form.FormData.backend_flows_files.length > 0){\n\n    \n    _.each(msg.RevotioData.FlowData.Form.FormData.backend_flows_files, function(Item, index){\n        \n \n        \n        \n        fields.push( [           \n                   {\n                          name: 'title',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: Item.title,\n                            label: 'Flow/ file title',\n                            type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: \"\",\n                            required: true, // false by default\n                            maxlength: 100,\n                            disabled: false,\n                          }\n                        },\n                        {\n                            name: 'flow_file',\n                            label: 'File',\n                            htmlTag: 'button',\n                            options: {\n                                        //  required: true, // false by default\n                                    value:Item.flow_file,\n                                    type: 'upload',\n                                    folder:global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.FlowData.Form.FormData._id+\"/backend_flows_files/\",  //global.get(\"DomainProperties.filesFolder\") + \n                                    classes: 'md-icon-button md-primary',\n                                    preview: 'inside', // inside / outside\n                                    previewPosition: 'right',\n                                    icon: 'fas fa-upload',\n                                     width: 100\n                            }\n                       },\n                  ])\n        \n    })\n\n} else {\n    fields.push( [           \n                   {\n                          name: 'title',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: \"\",\n                            label: 'Flow/ file title',\n                            type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: \"\",\n                            required: true, // false by default\n                            maxlength: 100,\n                            disabled: false,\n                          }\n                        },\n                        {\n                            name: 'flow_file',\n                            label: 'File',\n                            htmlTag: 'button',\n                            options: {\n                                        //  required: true, // false by default\n                                    // value:msg.RevotioData.FlowData.Form.FormData.avatar,\n                                    type: 'upload',\n                                    folder:global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.FlowData.Form.FormData._id+\"/backend_flows_files/\",  //global.get(\"DomainProperties.filesFolder\") + \n                                    classes: 'md-icon-button md-primary',\n                                    preview: 'inside', // inside / outside\n                                    previewPosition: 'right',\n                                    icon: 'fas fa-upload',\n                                     width: 100\n                            }\n                       },\n                  ])\n}\n\n   msg.form.steps[0].fields.push({\n                name: 'backend_flows_files',\n                htmlTag: 'subform',\n                execActionData: [\n                { 'backend_flows': true }\n                ],\n               \n                fields: fields,\n                options: {\n                  label: 'Backend flows',\n                  subformType: 'multiple', //or single - if multiple we need to create the add/remove buttons\n                  subformMin: 0, // optional\n                //   subformMax: , // optional\n                  subformDisplay: 'tabel', // list (table: with the label on top of the column) (list: label on left)\n                  subformAppend: 'top', // bottom\n                  width : 100\n        }})\n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":540,"wires":[["f53e598e.5a6b2"]]},{"id":"ad0adff8.7c1c98","type":"function","z":"f8594dbe.be6f8","name":"Map item data","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nmsg.form = {\n      id: 'edit-item',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      organization_id : msg.RevotioData.FlowData.Form.organization_id,\n      item_id: msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'item overview',\n        // url: true,\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Edit item',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n            \n            \n      ]}]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":620,"wires":[["e0a1d2fa.9d7ad8"]]},{"id":"dac1ec9c.b8b2d8","type":"function","z":"f8594dbe.be6f8","name":"Map page data","func":"const Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nmsg.form = {\n      id: 'edit-page',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData.application_id,\n      page_id: msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n    //   Page: 'application overview',\n        // url: true,\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n        Page: \"page overview\",\n      title: 'Edit page',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n           {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n             {\n              name: 'label',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: msg.RevotioData.FlowData.Form.FormData.label,\n                label: 'Label',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 50,\n                disabled: false,\n              }\n            },\n      ]}]\n    };\n\nif (         msg.RevotioData.FlowData.Form.ApplicationData &&\n            msg.RevotioData.FlowData.Form.ApplicationData.hasOwnProperty(\"dockerBasedApp\")      && \n            msg.RevotioData.FlowData.Form.ApplicationData.dockerBasedApp === true               &&\n            msg.RevotioData.FlowData.Form.ApplicationData.hasOwnProperty(\"dockerImageRecords\")  && \n            msg.RevotioData.FlowData.Form.ApplicationData.dockerImageRecords.length > 0 \n            ){\n\n            Obj = {\n                      htmlTag: 'select',\n                      name: 'dockerContainerID',\n                      optionsGroup: {} ,\n                   \n                      options: {\n                        label: 'Docker container',\n                        required: true,\n                        type: 'text',\n                        value: ''\n                      }\n                    };\n                    \n                    _.each(lodash.orderBy(msg.RevotioData.FlowData.Data.applicationData.dockerImageRecords, [\"dockerImagePrio\"],[\"desc\"] ), function(Item, Index){\n                        Obj.optionsGroup[Item._id] = Item.dockerImageName\n                    })\n                    \n                    Obj.options.value = msg.RevotioData.FlowData.Form.FormData.dockerContainerID\n                    msg.form.steps[0].fields.push(Obj)\n}\n\n// backend files\n\nmsg.form.steps[0].fields.push( {\n              name: 'backend_flows',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:  msg.RevotioData.FlowData.Form.FormData.backend_flows,\n                label: 'Backend flows',\n                type: 'checkbox', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: false, // false by default\n                maxlength: 100,\n                disabled: false,\n              }\n            })\n            \n            \nfields = []\nif ( msg.RevotioData.FlowData.Form.FormData.backend_flows && msg.RevotioData.FlowData.Form.FormData.backend_flows_files && msg.RevotioData.FlowData.Form.FormData.backend_flows_files.length > 0){\n\n    _.each(msg.RevotioData.FlowData.Form.FormData.backend_flows_files, function(Item, index){\n        \n        fields.push( [           \n                   {\n                          name: 'title',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: Item.title,\n                            label: 'Flow/ file title',\n                            type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: \"\",\n                            required: true, // false by default\n                            maxlength: 100,\n                            disabled: false,\n                          }\n                        },\n                        {\n                            name: 'flow_file',\n                            label: 'File',\n                            htmlTag: 'button',\n                            options: {\n                                        //  required: true, // false by default\n                                    value:Item.flow_file,\n                                    type: 'upload',\n                                    folder:global.get(\"DomainProperties.rootPath\")+ \"applications/\"+ msg.RevotioData.FlowData.Form.FormData.application_id + \"/pages/\" +msg.RevotioData.FlowData.Form.FormData._id +\"/backend_flows_files/\",  //global.get(\"DomainProperties.filesFolder\") + \n                                    classes: 'md-icon-button md-primary',\n                                    preview: 'inside', // inside / outside\n                                    previewPosition: 'right',\n                                    icon: 'fas fa-upload',\n                                     width: 100\n                            }\n                       },\n                  ])\n        \n    })\n\n} else {\n    fields.push( [           \n                   {\n                          name: 'title',\n                          htmlTag: 'input',  // button | select | textarea\n                          options: {\n                            value: \"\",\n                            label: 'Flow/ file title',\n                            type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                            placeholder: \"\",\n                            required: true, // false by default\n                            maxlength: 100,\n                            disabled: false,\n                          }\n                        },\n                        {\n                            name: 'flow_file',\n                            label: 'File',\n                            htmlTag: 'button',\n                            options: {\n                                        //  required: true, // false by default\n                                    // value:msg.RevotioData.FlowData.Form.FormData.avatar,\n                                    type: 'upload',\n                                    folder:global.get(\"DomainProperties.rootPath\")+ \"applications/\"+ msg.RevotioData.FlowData.Form.FormData.application_id + \"/pages/\" +msg.RevotioData.FlowData.Form.FormData._id +\"/backend_flows_files/\", \n                                    classes: 'md-icon-button md-primary',\n                                    preview: 'inside', // inside / outside\n                                    previewPosition: 'right',\n                                    icon: 'fas fa-upload',\n                                     width: 100\n                            }\n                       },\n                  ])\n}\n\n   msg.form.steps[0].fields.push({\n                name: 'backend_flows_files',\n                htmlTag: 'subform',\n                execActionData: [\n                { 'backend_flows': true }\n                ],\n               \n                fields: fields,\n                options: {\n                  label: 'Backend flows',\n                  subformType: 'multiple', //or single - if multiple we need to create the add/remove buttons\n                  subformMin: 0, // optional\n                //   subformMax: , // optional\n                  subformDisplay: 'tabel', // list (table: with the label on top of the column) (list: label on left)\n                  subformAppend: 'top', // bottom\n                  width : 100\n        }})\n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":580,"wires":[["1e364f59.c59481"]]},{"id":"3a3c18db.de29d8","type":"function","z":"f8594dbe.be6f8","name":"Set new user payload","func":"var _ = global.get('underscore');\nvar lodash = global.get('lodash');\n\n\nmsg.form = {\n      id: 'create-user-form',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      entity : \"user\", // empoloyee, project, teammember, involvement, time-recording\n      Type: \"Create\",\n      nextButtonText: 'Next',\n      showPrevious: true, //false\n      organization_id: msg.RevotioData.PostData.gadgetData.organization_id,\n      FormType : \"User\",\n      title: 'Create user',\n      steps: [\n        {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n              {\n              name: 'first_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'First name',\n                placeholder: 'John',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                required: true // false by default\n              }\n            },\n              {\n              name: 'middle_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Middle name',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'last_name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Last name',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: 'Do',\n                required: true, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'email',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value: '',\n                label: 'Email address',\n                type: 'email', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: true, // false by default\n                maxlength: 50\n              }\n            },\n            {\n              name: 'roles',\n              htmlTag: 'select',  // button | select | textarea\n              optionsGroup:  global.get('permissions.ID'),\n              options: {\n                value: '',\n                label: 'User type',\n                type: 'text', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: '',\n                required: false, // false by default\n                maxlength: 50\n              }\n            },\n\n            \n        ]},\n      ]\n    };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":660,"wires":[["13a1f38d.140cf4"]]},{"id":"15a5f0ae.239787","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1370,"y":780,"wires":[[],["de6cbf88.34d03"],["a3f74950.e95238"],["6dc1e89c.ac3b7"],[]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"e44bc704.c13258","type":"debug","z":"f8594dbe.be6f8","name":"form Move","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1318.7501220703125,"y":701.4286804199219,"wires":[]},{"id":"b8332ee7.c1c62","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1390,"y":960,"wires":[[],["90191107.1d3818"],["804d562b.7e0858"],["4b8152bf.d37eb4"],[]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"61ac7d98.a23d9c","type":"debug","z":"f8594dbe.be6f8","name":"form Copy","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1338.7501220703125,"y":881.4286804199219,"wires":[]},{"id":"f42ca680.668788","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.organizations, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.organization_id) ){\n        currentId = Item._id\n        currentName = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'move-application',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'application overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Move application',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_organization',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_organization',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":760,"wires":[["b52d4c0b.70d11"]]},{"id":"de6cbf88.34d03","type":"function","z":"f8594dbe.be6f8","name":"Get all organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'organizations',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.organizations = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1740,"y":760,"wires":[["f42ca680.668788"]]},{"id":"ac586a7a.bacdc8","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.organizations, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.organization_id) ){\n        currentId = Item._id\n        currentName = Item.name\n        dropDown[Item._id] = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'copy-application',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'application overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Copy application',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_organization',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_organization',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Copy to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":920,"wires":[["24cd5f0f.1f1de8"]]},{"id":"90191107.1d3818","type":"function","z":"f8594dbe.be6f8","name":"Get all organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'organizations',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.organizations = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1760,"y":920,"wires":[["ac586a7a.bacdc8"]]},{"id":"885379b1.db3ef","type":"function","z":"f8594dbe.be6f8","name":"Route based on form-id","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar edit, create, move, copy, template;\n\nif ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"create\")){\n    create = msg\n} else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"edit\")){\n    edit = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"move\")){\n    move = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"copy\")){\n    copy = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"template\")){\n    template = msg\n}\n\nreturn [edit, create, move, copy, template];","outputs":5,"noerr":0,"x":1610,"y":1360,"wires":[["37cf5ac7.3ceeae"],["ebc12e05.f0c44"],["dd43bee8.c5d39"],["dd43bee8.c5d39"],["cec3ed82.66ec8"]],"outputLabels":["edit","create","move","copy","template"]},{"id":"dd43bee8.c5d39","type":"function","z":"f8594dbe.be6f8","name":"Get APP data","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"pages\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"pages\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"items\"\n                                }\n                              },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = res[0]\n                    node.send(msg) \n            })  \n            \n            \n// return msg;\n","outputs":1,"noerr":0,"x":1900,"y":1380,"wires":[["1bd5bb0c.a84d0d","b3196b0c.517678"]]},{"id":"fc929792.747058","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.applications, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.application_id) ){\n        currentId = Item._id\n        currentName = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'move-page',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData.application_id,\n      page_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'page overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Move page',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_application',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_application',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":800,"wires":[["d74ed19e.5fb24"]]},{"id":"a3f74950.e95238","type":"function","z":"f8594dbe.be6f8","name":"Get all apps","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{\"organization_id\": new ObjectID(msg.RevotioData.FlowData.Form.FormData.organization_id)}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'applications',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.applications = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1710,"y":800,"wires":[["fc929792.747058"]]},{"id":"6dc1e89c.ac3b7","type":"function","z":"f8594dbe.be6f8","name":"Get all organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'organizations',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.organizations = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1740,"y":840,"wires":[["2101dd2f.9531ea"]]},{"id":"2101dd2f.9531ea","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.organizations, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.organization_id) ){\n        currentId = Item._id\n        currentName = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'move-item',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      item_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'item overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Move item',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_organization',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_organization',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":840,"wires":[["22c4d614.567a02"]]},{"id":"e15a8c1b.84bdf","type":"function","z":"f8594dbe.be6f8","name":"Route based on form-id","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar edit, create, move, copy, template;\n\nif ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"create\")){\n    create = msg\n} else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"edit\")){\n    edit = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"move\")){\n    move = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"copy\")){\n    copy = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"template\")){\n    template = msg\n}\n\nreturn [edit, create, move, copy,template];","outputs":5,"noerr":0,"x":1610,"y":1580,"wires":[["fc166fda.5685e8"],["2f981aec.22be6e"],["b5fb6647.f35dd"],["b5fb6647.f35dd"],["6b844e7d.6bc8c"]],"outputLabels":["edit","create","move","copy","template"]},{"id":"e87f48c0.e1ce","type":"function","z":"f8594dbe.be6f8","name":"Route based on form-id","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar edit, create, move, copy;\n\nif ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"create\")){\n    create = msg\n} else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"edit\")){\n    edit = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"move\")){\n    move = msg\n}else if ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"copy\")){\n    copy = msg\n}\n\nreturn [edit, create, move, copy];","outputs":4,"noerr":0,"x":1590,"y":1780,"wires":[["25a9d4ae.887f9c"],["25a9d4ae.887f9c"],["ba13989b.e63a"],["2fb20029.33a04"]],"outputLabels":["edit","create","move","copy"]},{"id":"ba13989b.e63a","type":"function","z":"f8594dbe.be6f8","name":"Move ITEM ** Remove to do && >> remove all item references in pages**","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// get itemObject\n        findObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    itemObj = res[0];\n                    id = new ObjectID(id)\n                    // manipulate itemObject\n                    itemObj.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.new_organization)\n                    itemObj.sourceID = new ObjectID(itemObj._id)\n                    itemObj.item_id = new ObjectID(itemObj._id)\n                    itemObj.name = msg.RevotioData.PostData.gadgetData.formData.name\n                     delete  itemObj._id    \n                        \n                        query = {\n                                query : {_id: new ObjectID(id)},\n                                update : {\"$set\": itemObj},\n                                options : {upsert : true }\n                            }\n                            \n                             Obj = { \n                                    query : query,\n                                \n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'items',\n                                operation:\"update\",\n                                        }\n                                        // node.send(msg) \n                                mongodbTools.resolveAsync(Obj, node, function(res){\n                                    // msg.result = res\n                                    // result = res;\n                                    // create new token string\n                           \n                                msg.result\n                                \n                                msg.payload = {\n                                        Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n                                        RevotioData : {\n                                            item_id: id,\n                                            organization_id: itemObj.organization_id\n                                        }\n                                    }\n\n                                        findObj = {\n                                                            query : {\n                                                                    query :{organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)}, \n                                                                    },\n                                                            connection:global.get(\"DB_data.connection\"),\n                                                            database:global.get(\"DB_data.appDB\"),\n                                                            collection:'pages',\n                                                            operation:'find',\n                                                            }\n                                        \n                                                                mongodbTools.resolveAsync(findObj, node, function(res){\n                                                                    \n                                                                    // Loop through pages\n                                                                    _.each(res, function(pageItem,pageItemIndex ){\n                                                                        \n                                                                                result = global.get(\"functions.pageObjectManipulation\")(pageItem, \"removeItem\", { source : itemObj.sourceID })\n                                                                                if (result.hasOwnProperty(\"customItems\")&& result.customItems.length>0){\n                                                                                    _.each(result.customItems,function(customItemId, customItemsIndex){\n                                                                                        if (String(customItemId)=== String(itemObj.sourceID) ){\n                                                                                            customItemId = new ObjectID(itemObj._id )\n                                                                                        }\n                                                                                    } )\n                                                                                }\n                                                                                             query = {\n                                                                                                        query : {_id: new ObjectID(result._id)},\n                                                                                                        update : {\"$set\": result},\n                                                                                                        options : {upsert : true }\n                                                                                                    }\n                                                                                                     pageUpdate = { \n                                                                                                            query : query,\n                                                                                                        \n                                                                                                        connection:global.get(\"DB_data.connection\"),\n                                                                                                        database:global.get(\"DB_data.appDB\"),\n                                                                                                        collection:'pages',\n                                                                                                        operation:\"update\",\n                                                                                                                }\n                                                                                                                // node.send(msg) \n                                                                                                        mongodbTools.resolveAsync(Obj, node, function(res){\n    \n                                                                                                        })\n                                                                        \n                                                                                 })\n                                                                    \n                                                                         node.send(msg)\n                                                                })\n                                })\n                    \n                    \n            })   \n","outputs":1,"noerr":0,"x":2040,"y":1780,"wires":[["d7ca73e2.ffd27"]]},{"id":"2fb20029.33a04","type":"function","z":"f8594dbe.be6f8","name":"Copy ITEM","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// get itemObject\n        findObj = {\n                    query : {\n                            query :{_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    itemObj = res[0];\n                    \n                    id = new ObjectID()\n                    // manipulate itemObject\n                    itemObj.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.new_organization)\n                    \n                    itemObj.item_id = new ObjectID(itemObj._id)\n                    itemObj.sourceObject = new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.item_id)\n                    itemObj.clonedAt = new Date()\n                    itemObj.name = msg.RevotioData.PostData.gadgetData.formData.name\n                       delete  itemObj._id\n                       query = {\n                                query : {_id: new ObjectID(id)},\n                                update : {\"$set\": itemObj},\n                                options : {upsert : true }\n                            }\n                            \n                             Obj = { \n                                    query : query,\n                                \n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'items',\n                                operation:\"update\",\n                                        }\n                                        // node.send(msg) \n                                mongodbTools.resolveAsync(Obj, node, function(res){\n                                    // msg.result = res\n                                    // result = res;\n                                    // create new token string\n                           \n                                msg.result\n                                \n                                msg.payload = {\n                                        Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n                                        RevotioData : {\n                                            item_id: id,\n                                            organization_id: itemObj.organization_id\n                                        }\n                                    }\n\n\n                                    node.send(msg)\n                                })\n                    \n                    \n            })   \n","outputs":1,"noerr":0,"x":1850,"y":1820,"wires":[["f083c58f.c7e048"]]},{"id":"c88a001e.3d914","type":"function","z":"f8594dbe.be6f8","name":"Remove original page PAGE (>> WHEN === MOVE <<)","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nif ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"move\")){\n                // remove all app files\n\n                fs.removeSync(global.get(\"DomainProperties.filesFolder\")+ \"applications/\" + msg.RevotioData.PostData.gadgetData.formObj.application_id+\"/pages/\"+msg.RevotioData.PostData.gadgetData.formObj.page_id)\n\n\n            removeObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            }) \n}\n","outputs":1,"noerr":0,"x":2150,"y":1600,"wires":[[]]},{"id":"b5fb6647.f35dd","type":"function","z":"f8594dbe.be6f8","name":"Clone page","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n// find             \n            findObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    \n                    pageObject = res[0]\n                    pageObject.actionPreformed = new Date()\n                    pageObject.actionPreformedBy = new ObjectID(msg.RevotioData.session.UserData._id)\n                    pageObject.sourceID= new ObjectID(pageObject._id)\n                    delete pageObject._id\n                    id = new ObjectID()\n                    pageObject.name = msg.RevotioData.PostData.gadgetData.formData.name\n                    pageObject.page_id = new ObjectID(pageObject.sourceID)\n                    pageObject.sourceAppID = new ObjectID(pageObject.application_id)\n                    pageObject.application_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.new_application)\n                    msg.redirectPayload = {\n                        Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n                        RevotioData :{\n                            page_id: new ObjectID(pageObject.sourceID),\n                            organization_id: new ObjectID(pageObject.organization_id),\n                            application_id: new ObjectID(pageObject.application_id),\n                        }\n                    }\n                    \n                    // copy page files\n                    if (pageObject.backend_flows){\n                        // ensure dir\n                        fs.ensureDirSync(global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +pageObject.application_id + \"/pages/\"+ id +\"/backend_flows_files/\") \n                    \n                        NEW_backend_flows = []\n                       \n                        _.each(pageObject.backend_flows_files, function(fileItem, fileItemIndex){\n                            \n                            NEW_backend_flows.push({\n                                title:fileItem.title,\n                                flow_file:{\n                                    path: global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +pageObject.application_id + \"/pages/\"+ id +\"/backend_flows_files/\"+fileItem.flow_file.name,\n                                    size: fileItem.flow_file.size,\n                                    name: fileItem.flow_file.name,\n                                    uploadFileType:fileItem.flow_file.uploadFileType,\n                                    type: fileItem.flow_file.type,\n                                }\n                            })\n                            fs.copySync(fileItem.flow_file.path,  \"/files/applications/\" +pageObject.application_id + \"/pages/\"+ id +\"/backend_flows_files/\"+fileItem.flow_file.name)\n                        })\n                        pageObject.backend_flows_files = NEW_backend_flows\n                    }\n        \n        \n                        updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(id)}, \n                            update : { \"$set\" : pageObject},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                pageObject._id = id\n                    msg.payload = pageObject\n                    node.send(msg) \n            })  \n            \n            \n                    // msg.payload = pageObject\n                    // msg.operation = \"insert\"\n                    // node.send(msg) \n            })  \n\n\n// return msg","outputs":1,"noerr":0,"x":1830,"y":1600,"wires":[["c88a001e.3d914","e47e6402.6a4c6"]]},{"id":"c737031c.f2f138","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.applications, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.application_id) ){\n        currentId = Item._id\n        currentName = Item.name\n        dropDown[Item._id] = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'copy-page',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData.application_id,\n      page_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'page overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Copy page',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_application',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_application',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":960,"wires":[["eb4f7d91.185b98"]]},{"id":"804d562b.7e0858","type":"function","z":"f8594dbe.be6f8","name":"Get all apps","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{\"organization_id\": new ObjectID(msg.RevotioData.FlowData.Form.FormData.organization_id)}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'applications',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.applications = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1730,"y":960,"wires":[["c737031c.f2f138"]]},{"id":"4b8152bf.d37eb4","type":"function","z":"f8594dbe.be6f8","name":"Get all organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'organizations',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.organizations = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1760,"y":1000,"wires":[["cd7d99d3.47871"]]},{"id":"cd7d99d3.47871","type":"function","z":"f8594dbe.be6f8","name":"Map item data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.organizations, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.organization_id) ){\n        currentId = Item._id\n        currentName = Item.name\n        dropDown[Item._id] = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'copy-item',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      item_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'item overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Move item',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_organization',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_organization',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":1000,"wires":[["6098553b.ef73c4"]]},{"id":"1bd5bb0c.a84d0d","type":"function","z":"f8594dbe.be6f8","name":"Edit source app records","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// update application data\n    msg.result.sourceOrganization_id = new ObjectID(msg.result.organization_id)\n    msg.result.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.new_organization)\n    msg.result.sourceID = new ObjectID(msg.result._id)\n    msg.result._id = new ObjectID()\n    msg.result.actionPreformed = new Date()\n    msg.result.actionPreformedBy = new ObjectID(msg.RevotioData.session.UserData._id)\n    msg.result.name = msg.RevotioData.PostData.gadgetData.formData.name\n    \n     // copy page files\n        // if (msg.result.backend_flows){\n        //     // ensure dir\n        //     fs.ensureDirSync(global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +msg.result._id + \"/backend_flows_files/\") \n        \n        //     NEW_backend_flows = []\n           \n        //     _.each(msg.result.backend_flows_files, function(fileItem, fileItemIndex){\n                \n        //         NEW_backend_flows.push({\n        //             title:fileItem.title,\n        //             flow_file:{\n        //                 path: global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +msg.result._id + \"/backend_flows_files/\"+fileItem.flow_file.name,\n        //                 size: fileItem.flow_file.size,\n        //                 name: fileItem.flow_file.name,\n        //                 uploadFileType:fileItem.flow_file.uploadFileType,\n        //                 type: fileItem.flow_file.type,\n        //             }\n        //         })\n        //         fs.copySync(fileItem.flow_file.path,  \"/files/applications/\" +msg.result._id +\"/backend_flows_files/\"+fileItem.flow_file.name)\n        //     })\n        //     msg.result.backend_flows_files = NEW_backend_flows\n        // }\n    \n// update items\n\n    _.each(msg.result.items, function(itemRecord,itemRecordIndex ){\n        itemRecord.sourceID = itemRecord._id\n        itemRecord._id = new ObjectID()\n        itemRecord.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)\n        node.send({payload:itemRecord, operation:\"insert\", query:true, entity:\"item\"  })\n    })\n\n// update pages\n\n    var newItemArr = []\n    \n    _.each(msg.result.pages, function(pageRecord, pageRecordItem){\n        pageRecord.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.formData.new_organization)\n        pageRecord.application_id = new ObjectID(msg.result._id)\n        pageRecord.sourceID = pageRecord._id\n        pageRecord._id = new ObjectID()\n        \n        // copy page files\n        if (pageRecord.backend_flows){\n            // ensure dir\n            fs.ensureDirSync(global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +pageRecord.application_id + \"/pages/\"+ pageRecord._id +\"/backend_flows_files/\") \n        \n            NEW_backend_flows = []\n           \n            _.each(pageRecord.backend_flows_files, function(fileItem, fileItemIndex){\n                \n                NEW_backend_flows.push({\n                    title:fileItem.title,\n                    flow_file:{\n                        path: global.get(\"DomainProperties.filesFolder\")+\"/applications/\" +pageRecord.application_id + \"/pages/\"+ pageRecord._id +\"/backend_flows_files/\"+fileItem.flow_file.name,\n                        size: fileItem.flow_file.size,\n                        name: fileItem.flow_file.name,\n                        uploadFileType:fileItem.flow_file.uploadFileType,\n                        type: fileItem.flow_file.type,\n                    }\n                })\n                fs.copySync(fileItem.flow_file.path,  \"/files/applications/\" +pageRecord.application_id + \"/pages/\"+ pageRecord._id +\"/backend_flows_files/\"+fileItem.flow_file.name)\n            })\n            pageRecord.backend_flows_files = NEW_backend_flows\n        }\n       \n        \n        if (pageRecord.hasOwnProperty(\"customItems\") && pageRecord.customItems > 0){\n            _.each(pageRecord.customItems, function(customItemsRecord, customItemsRecordIndex){\n                _.each(msg.result.items, function (resultItemsRecord,resultItemsRecordIndex ){\n                    if (String(resultItemsRecord.sourceID)=== String(customItemsRecord)){\n                        newPage_replaceItem  = global.get(\"functions.pageObjectManipulation\")(pageRecord, \"replaceItem\", { source : resultItemsRecord.sourceID , replace :resultItemsRecord._id})\n                        if (newPage_replaceItem.hasOwnProperty(\"state\") && newPage_replaceItem.state === \"success\"){\n                            pageRecord = newPage_replaceItem.pageObject\n                        }\n                        customItemsRecord = String(resultItemsRecord._id)\n                    }\n                })\n            })\n        }\n        \n         node.send({payload:pageRecord, operation:\"insert\", query:true, entity:\"page\" })\n    })\n\n\nmsg.query = true ;\nmsg.entity = \"app\";\n\nmsg.pages = msg.result.pages;\nmsg.items = msg.result.items;\ndelete msg.result.pages;\ndelete msg.result.items;\n\nmsg.application = msg.result;\nmsg.operation = \"insert\";\nmsg.payload = msg.result;\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2110,"y":1380,"wires":[["e0118b3a.efdcc"]]},{"id":"e0118b3a.efdcc","type":"function","z":"f8594dbe.be6f8","name":"Preform query","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.entity  === \"item\"){\n    // update    \n\n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            })  \n    \n} else if (msg.entity === \"page\"){\n    \n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            })  \n} else if (msg.entity === \"app\"){\n \n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            })  \n\n    return msg;\n}\n\n","outputs":1,"noerr":0,"x":2300,"y":1380,"wires":[["3f17ca54.52a456"]],"outputLabels":["item"]},{"id":"3f17ca54.52a456","type":"function","z":"f8594dbe.be6f8","name":"Create response msg","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: new ObjectID(msg.application._id),\n        organization_id: new ObjectID(msg.application.organization_id)\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":2480,"y":1380,"wires":[["45bf31c1.98b8f8","e7106bd8.2b33d8"]]},{"id":"45bf31c1.98b8f8","type":"function","z":"f8594dbe.be6f8","name":"Remove source app data if needed","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\nif ( lodash.includes(String(msg.RevotioData.PostData.gadgetData.formObj.id.toLowerCase()), \"move\")){\n    \n    _.each(msg.items, function(itemRecord,itemRecordIndex ){\n        node.send({\n            payload: {_id: new ObjectID(itemRecord.sourceID)}, \n            operation : \"deleteOne\",\n            query : true,\n            entity:\"item\"\n        })\n        \n        \n    })\n    \n    _.each(msg.pages, function(pageRecord,pageRecordIndex ){\n        node.send({\n            payload: {_id: new ObjectID(pageRecord.sourceID)}, \n            operation : \"deleteOne\",\n            query : true,\n            entity:\"page\"\n        })\n        \n        \n    })\n    \n    // remove all app files\n\n    fs.removeSync(global.get(\"DomainProperties.filesFolder\")+ \"applications/\" + msg.application.sourceID)\n\n\n    node.send({\n            payload: {_id: new ObjectID(msg.application.sourceID)}, \n            operation : \"deleteOne\",\n            query : true,\n            entity:\"app\"\n        })\n    \n    \n}\n\n\n// return msg;","outputs":1,"noerr":0,"x":2760,"y":1400,"wires":[["5025db54.d6a61c"]]},{"id":"5025db54.d6a61c","type":"function","z":"f8594dbe.be6f8","name":"Preform query","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.entity === \"item\"){\n   // remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    // msg.payload = res\n                    // node.send(msg) \n            })   \n} else if (msg.entity === \"page\"){\n   // remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                   \n            })   \n} else if (msg.entity === \"app\"){\n   // remove \n            removeObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    \n            })   \n            \nreturn msg;\n}\n","outputs":1,"noerr":0,"x":2980,"y":1400,"wires":[[]],"outputLabels":["item","page","app"]},{"id":"e47e6402.6a4c6","type":"function","z":"f8594dbe.be6f8","name":"Set redirectPayload","func":"msg.payload = msg.redirectPayload\nreturn msg;","outputs":1,"noerr":0,"x":2030,"y":1640,"wires":[["e4d964fa.5242d8"]]},{"id":"ea90828e.c30f28","type":"function","z":"f8594dbe.be6f8","name":"Route user","func":"\n\n// declair output var's\n\nvar Settings                            ;\nvar SettingProjectManagement            ;\nvar OrganizationsGlobal                 ;\nvar OrganizationsOverview               ;\nvar UsersGlobal                         ;\nvar settings_form_management            ;\nvar applicationOverview                 ;\nvar pageOverview                        ;\nvar itemOverview                        ;\n\nvar Page = msg.RevotioData.session.Page ;\n\n\n// tab based routing\n\nif (Page === \"settings\"){\n    Settings = msg;\n}   else if (Page === \"setting project management\"){\n    SettingProjectManagement = msg;\n} else if (Page === \"organizations global\"){\n    OrganizationsGlobal = msg;\n} else if (Page ===  \"organization overview\"){\n    OrganizationsOverview = msg;\n} else if (Page ===  \"users global\"){\n    UsersGlobal = msg;\n}  else if (Page ===  \"settings form management\"){\n    settings_form_management   = msg;\n}  else if (Page ===  \"application overview\"){\n    applicationOverview   = msg;\n}  else if (Page ===  \"page overview\"){\n    pageOverview   = msg;\n} else if (Page ===  \"item overview\"){\n    itemOverview   = msg;\n}\n\n\n\n             \n\n\n\nreturn [   \n            Settings,\n            SettingProjectManagement,\n            OrganizationsGlobal,\n            OrganizationsOverview,\n            UsersGlobal,\n            settings_form_management,\n            applicationOverview,\n            pageOverview,\n            itemOverview\n            ];","outputs":9,"noerr":0,"x":3070,"y":700,"wires":[["d4d64bd1.43dab"],["5321ab56.b41e7c"],["170e770.9334989"],["d4f4b0a2.122118"],["7eade508.445c34"],["6f334213.b7fe94"],["b6139a.b2006468"],["f0597f72.837008"],["cd452dc.c71ead"]],"outputLabels":["Settings","SettingProjectManagement","OrganizationsGlobal","OrganizationsOverview","UsersGlobal","settings_form_management","applicationOverview","pageOverview","itemOverview"]},{"id":"d4d64bd1.43dab","type":"function","z":"f8594dbe.be6f8","name":"settings","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"d8db7af4-0694-1d29-6825-b5ace791ff10\",\n            \"gadgetName\": \"settings\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"117a0f70-8524-92f9-4547-646868aba9d4\",\n            \"gadgetName\":  \"settings\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3380,"y":480,"wires":[["59ca27a4.ef09b8"]]},{"id":"5321ab56.b41e7c","type":"function","z":"f8594dbe.be6f8","name":"setting project management","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"69b18c9b-f18e-d7aa-6f5d-e5be261cc836\",\n            \"gadgetName\": \"setting : project management\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\n                            \"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction,\n                            \"size\":80,\n            }}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"972086fc-2c57-595f-1342-baf86d16e8ec\",\n            \"gadgetName\":  \"setting : project management\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3420,"y":560,"wires":[["59ca27a4.ef09b8"]]},{"id":"882a581a.b498d8","type":"comment","z":"f8594dbe.be6f8","name":"Post form actions","info":"","x":3000,"y":380,"wires":[]},{"id":"59ca27a4.ef09b8","type":"link out","z":"f8594dbe.be6f8","name":"","links":["4700b6d8.8b0b9"],"x":3475,"y":1220,"wires":[]},{"id":"170e770.9334989","type":"function","z":"f8594dbe.be6f8","name":"organizations global","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"8df9d86f-ee8a-5321-dd8c-bd07631b3d14\",\n            \"gadgetName\": \"organizations global\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"a91a41a7-102b-e6f8-af73-156a67524c68\",\n            \"gadgetName\":  \"organizations global\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3400,"y":640,"wires":[["59ca27a4.ef09b8"]]},{"id":"d4f4b0a2.122118","type":"function","z":"f8594dbe.be6f8","name":"Organization overview","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"84c4f3f6-6173-a020-5c11-05042758ba2f\",\n            \"gadgetName\": \"Organization overview\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"ef01763d-2f59-05d5-1264-be24c24727c2\",\n            \"gadgetName\":  \"Organization overview\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3400,"y":700,"wires":[["59ca27a4.ef09b8"]]},{"id":"7eade508.445c34","type":"function","z":"f8594dbe.be6f8","name":"UsersGlobal","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"c3370113-f7a9-2cee-95c9-ad4277c5642b\",\n            \"gadgetName\": \"form modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"2c284317-798f-5bb6-6225-6c6fd99cb784\",\n            \"gadgetName\":  \"page form\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3390,"y":800,"wires":[["59ca27a4.ef09b8"]]},{"id":"5a81fd95.60dfdc","type":"link in","z":"f8594dbe.be6f8","name":"","links":["8df9032e.ff92a","f4d75133.e49d","f5c2f81f.dd2388","7512a60d.287528","f7961936.d339f8","570b81f4.c2f9a","55dcf8b1.92b0d8","47feb0f.9236c5","56462010.15ba9","ca4c6f66.d9bed8","8b3080.ac20af8","1ddc85d0.be4212","17946b5b.71462d","d128206.f0cd5e","550f7b55.7d69f4","47c4d210.064044","9b433e4b.d30538","f9c4b2ca.f12378","282bf7cd.e2021","95bfa1bd.750b58","742eb555.72fa3c","c52529fe.059238","8afe0626.198ed","67e81f83.94e218","405a9356.e6dbdc","f5d53335.b1df7","f146936c.579d1","4d0080b3.382db","a9a958bc.15d988","d9132f56.543e08","24517828.b37f1","55b99a58.50f2a4","f271944.3f69a68","1b73dcaa.38e9cb","339f46c7.ab70ba","3f217fcf.122f28","4aba2cff.a00494","de1b1934.605eb","f12853ef.a8cb3","fcfa1f38.6713c","d47c5381.b9328","6b084aa.e98d534","a85ef91f.0f7768","6853a236.731c14","354c95df.36b4c2","15c516ac.746441","7ddb1450.07315c","5c511bd2.aa90d4","ab7c211d.ca157","36518f46.a0a108","50e65079.afdbc8","4482bc2f.50bbc4","30bb8f6e.97b36","f53e598e.5a6b2","1e364f59.c59481","e0a1d2fa.9d7ad8","13a1f38d.140cf4","b52d4c0b.70d11","d74ed19e.5fb24","22c4d614.567a02","24cd5f0f.1f1de8","eb4f7d91.185b98","6098553b.ef73c4","bdce7501.0fccf","37bba173.32e986","fbf08439.8ee4e"],"x":2695,"y":700,"wires":[["8a1d0deb.92cf68","ea90828e.c30f28"]]},{"id":"8a1d0deb.92cf68","type":"debug","z":"f8594dbe.be6f8","name":"Pre form mapping ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3010,"y":860,"wires":[]},{"id":"4700b6d8.8b0b9","type":"link in","z":"f8594dbe.be6f8","name":"","links":["59ca27a4.ef09b8"],"x":3535,"y":1260,"wires":[["c089c94c.6260c"]]},{"id":"c089c94c.6260c","type":"http response","z":"f8594dbe.be6f8","name":"","statusCode":"","headers":{},"x":3770,"y":1260,"wires":[]},{"id":"dcb8338.06183d","type":"function","z":"f8594dbe.be6f8","name":"Set RevotioData","func":"\nvar newRecords, next; \n\nvar tmp_payload = {\n    payload : msg.payload,\n    Form: msg.RevotioData.FlowData.Form\n}\n\n\nmsg.payload = tmp_payload\n\nif (msg.newRecords && msg.newRecords.length >0){\n    newRecords = {payload : msg.newRecords}\n}\nnext = msg;\n\nreturn [newRecords, next];","outputs":2,"noerr":0,"x":3700,"y":1200,"wires":[[],["c089c94c.6260c"]],"outputLabels":["newRecords, ","next"]},{"id":"86e58a5f.2c5a","type":"function","z":"f8594dbe.be6f8","name":"Get & set form info & titles","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nfindManyObj = {\n                    query : {\n                            query :{type: \"formData\", form_id : msg.form.id }, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'settings',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                   \n                    msg.newRecords = []\n                    \n                    _.each(msg.form.steps, function(steps, stepIndex){\n                        \n                        _.each(steps.fields, function(fieldItem, fieldItemIndex){\n                            \n                            // get formfield record\n                            index = lodash.findIndex(res, {field:fieldItem.name, step:stepIndex})\n                            \n                            if (fieldItem.options.hasOwnProperty(\"info\")=== false ){\n                                fieldItem.options.info = fieldItem.options.label\n                            }\n                            if (index === -1){\n                                msg.newRecords.push({\n                                    type: \"formData\", \n                                    form_id : msg.form.id,\n                                    field:fieldItem.name, \n                                    step:stepIndex,\n                                    options: fieldItem.options,\n                                })\n                            } else {\n                               \n                                fieldItem.options.label = res[index].options.label\n                                fieldItem.options.info = res[index].options.info\n                            }\n                        })\n                        \n                        \n                    })\n\n                     node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":2840,"y":600,"wires":[["ea90828e.c30f28"]]},{"id":"cdc6fe93.b1ab48","type":"function","z":"f8594dbe.be6f8","name":"Update","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n updateObj = {\n            query : {\n                    query :msg.payload, \n                    update : { \"$set\" :msg.payload},\n                    options : {upsert: true}\n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'settings',\n            operation:'update', // updateMany , updateOne\n            }\n\n    mongodbTools.resolveAsync(updateObj, node, function(res){\n            msg.payload = res\n            node.send(msg) \n    }) \n                                                        \n                                                        \n// return msg;","outputs":1,"noerr":0,"x":3660,"y":1000,"wires":[["76d06f1a.664298"]]},{"id":"76d06f1a.664298","type":"function","z":"f8594dbe.be6f8","name":"Loop through records","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":3680,"y":1060,"wires":[["cdc6fe93.b1ab48"],["6ffbd191.a22e"]]},{"id":"6ffbd191.a22e","type":"debug","z":"f8594dbe.be6f8","name":"Field settings updated ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3810,"y":1100,"wires":[]},{"id":"6f334213.b7fe94","type":"function","z":"f8594dbe.be6f8","name":"settings_form_management","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"69b18c9b-f18e-d7aa-6f5d-e5be261cc836\",\n            \"gadgetName\": \"setting : project management\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\n                            \"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction,\n                            \"size\":80,\n            }}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"972086fc-2c57-595f-1342-baf86d16e8ec\",\n            \"gadgetName\":  \"setting : project management\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3420,"y":860,"wires":[["59ca27a4.ef09b8"]]},{"id":"5c511bd2.aa90d4","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":140,"wires":[]},{"id":"ab7c211d.ca157","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":180,"wires":[]},{"id":"36518f46.a0a108","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":240,"wires":[]},{"id":"50e65079.afdbc8","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":300,"wires":[]},{"id":"4482bc2f.50bbc4","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":360,"wires":[]},{"id":"30bb8f6e.97b36","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":500,"wires":[]},{"id":"f53e598e.5a6b2","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":540,"wires":[]},{"id":"1e364f59.c59481","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":580,"wires":[]},{"id":"e0a1d2fa.9d7ad8","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":620,"wires":[]},{"id":"13a1f38d.140cf4","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":660,"wires":[]},{"id":"b52d4c0b.70d11","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":760,"wires":[]},{"id":"d74ed19e.5fb24","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":800,"wires":[]},{"id":"22c4d614.567a02","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2235,"y":840,"wires":[]},{"id":"24cd5f0f.1f1de8","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":920,"wires":[]},{"id":"eb4f7d91.185b98","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":960,"wires":[]},{"id":"6098553b.ef73c4","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":1000,"wires":[]},{"id":"60f41148.1370d8","type":"http in","z":"f8594dbe.be6f8","name":"form","url":"/form","method":"post","upload":false,"swaggerDoc":"","x":370,"y":580,"wires":[["cebfe9fc.a85e28"]]},{"id":"cebfe9fc.a85e28","type":"function","z":"f8594dbe.be6f8","name":"Prepair flow","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\npayload = msg.payload\n_.each(payload, function(item, key){\n    msg[key] = item\n})\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":580,"wires":[["ea1c9b82.6b253","1e5b7f4a.b332b1"]]},{"id":"ea6bac95.51f2f8","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":1900,"y":1260,"wires":[]},{"id":"34854bfd.42aabc","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2500,"y":1260,"wires":[]},{"id":"e4d964fa.5242d8","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2180,"y":1640,"wires":[]},{"id":"bb6f57c9.0c75a8","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2460,"y":1520,"wires":[]},{"id":"f083c58f.c7e048","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2000,"y":1820,"wires":[]},{"id":"aa2ff81.c531988","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2200,"y":1740,"wires":[]},{"id":"d7ca73e2.ffd27","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2380,"y":1780,"wires":[]},{"id":"b518d1ad.725f6","type":"link in","z":"7ba47ea5.e51c4","name":"OrganizationOverview - INIT FLOW","links":["d609b87f.7e619","6171b7c5.44b0b","b5fb4d7e.2e87f8","a2c7fac0.36278"],"x":975,"y":880,"wires":[["ee919d54.dc1568"]]},{"id":"3db63aec.566166","type":"function","z":"7ba47ea5.e51c4","name":"Route userAction","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar EditMoveCopyTemplateApplication, FormAction, MenuAction,  CreatePageTrigger , RemoveApplicationTrigger, RemoveApplicationActions,Redirect, breadcrumb;\n\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"){\n    \n    // if ( msg.RevotioData.GadgetPost.gadgetName === \"Add organization to project\"){\n    if (PostData.gadgetName === \"Remove application\"){\n        RemoveApplicationTrigger = msg;\n    } else if ( PostData.gadgetName === \"Edit application\"  ||\n                 PostData.gadgetName === \"Move application\" ||\n                 PostData.gadgetName === \"Convert app to template\" ||\n                 \n                  PostData.gadgetName === \"Copy application\"){\n        \n        EditMoveCopyTemplateApplication = msg;\n    } else if (PostData.gadgetName === \"Cancel remove application\" || PostData.gadgetName === \"Conform remove application\"){\n        RemoveApplicationActions = msg;\n    } \n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n}  else if (PostData.gadgetType=== \"data-table\" ){\n    if (msg.RevotioData.PostData.gadgetName === \"pages DT\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreatePageTrigger = msg;\n    } else {\n        msg.payload = { \n                Page : \"page overview\",\n                RevotioData: {\n                    page_id :new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                    organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n                    application_id : new ObjectID(msg.RevotioData.FlowData.application_id)\n                }            \n            };\n\n         Redirect = msg;\n    }} \n} else if (PostData.gadgetType===\"revotio-breadcrumbs\"){\n    breadcrumb = msg;\n}\n \n\nreturn [EditMoveCopyTemplateApplication, FormAction, MenuAction,  CreatePageTrigger , RemoveApplicationTrigger, RemoveApplicationActions,Redirect, breadcrumb]\n","outputs":8,"noerr":0,"x":3410,"y":900,"wires":[["3300d6d5.6ca252"],["a6c964ec.f8154"],["32648c67.74af74"],["ac021d39.d59198"],["65235db7.b0710c"],["caf91c08.c6b15"],["43f90b21.d4c454"],["e828eb77.629c7"]],"outputLabels":["EditMoveCopyTemplateApplication","FormAction","MenuAction","CreatePageTrigger","RemoveApplicationTrigger","RemoveApplicationActions","Redirect","breadcrumb"]},{"id":"31177cae.22305c","type":"link out","z":"7ba47ea5.e51c4","name":"Trigger gadgets","links":["58a6dbae.b2125c","ce3ca33c.4ef938","dbd474d8.e62b68","3b6905a3.644562","7a3f690f.580ea8","883c7cee.db8a6","76027a09.548534","ba4ff609.18c878","bb7d751c.1c7ac8","7421bf8d.f51dd8","f32152b8.b14bf8","bbeef07d.cea3f8","c6cd3b88.cb163","97fe6585.9a1a6","574da7a4.73af18","a88d7865.54fca8","72d7057f.2a6e6c","46bd6ffd.eb357","b69bcaf5.122f2","5f4e05d3.244a84"],"x":1495,"y":880,"wires":[]},{"id":"1b4fa294.f05545","type":"comment","z":"7ba47ea5.e51c4","name":"INIT FLOW","info":"","x":960,"y":840,"wires":[]},{"id":"218ba0cd.dee748","type":"function","z":"7ba47ea5.e51c4","name":"Remove application btn","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"7536d205-807d-3372-f9e0-943c242486db\",\n            \"gadgetName\":\"Remove application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Remove application\" },\n                \"gadgetData\":{}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2010,"y":640,"wires":[["940eb508.efdf98"]]},{"id":"3b6905a3.644562","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":640,"wires":[["218ba0cd.dee748"]]},{"id":"3300d6d5.6ca252","type":"function","z":"7ba47ea5.e51c4","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Application\",\n        FormActionType : msg.RevotioData.PostData.gadgetData.action,\n        FormData: msg.RevotioData.FlowData.Data.ApplicationData,\n        organization_id : msg.RevotioData.FlowData.organization_id,\n        application_id : msg.RevotioData.FlowData.application_id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":600,"wires":[["40d1fac2.9bf774"]]},{"id":"a6c964ec.f8154","type":"function","z":"7ba47ea5.e51c4","name":"Set Form Data","func":"     msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n msg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":640,"wires":[["40d1fac2.9bf774"]]},{"id":"1a012b52.85c1c5","type":"function","z":"7ba47ea5.e51c4","name":"Create pages DT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nvar columnStyles = [] ;\nvar headerStyles = [] ;\n\n\nvar tableColumnData  =  {\n         columnHead : [\n                  {\n                    \"title\": \"Name\",\n                    \"allowSort\": true,\n                    \"headKey\": \"Name\",\n                    \"hidden\": false,\n                    \"editable\": false\n                  },\n                ],\n          \"columnOptions\": {\n            \"columnStyle\": {\n            //   \"width\": \"30%\"\n            },\n            \"cellStyle\": {\n            //   \"color\": \"red\"\n            },\n            \"allowSort\": true\n          }\n        };\nvar tableRowData = [];\n_.each( lodash.orderBy(msg.payload,[\"name\"],[\"asc\"]),function(pageItem, pageItemIndex){\n      obj = {\n           \"rowData\" :[\n                 {\n                           \"data\": pageItem._id,\n                           \"type\": \"string\",\n                           \"headKey\":\"_id\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                            \n                           {\n                           \"data\": pageItem.name,\n                           \"type\": \"string\",\n                           \"headKey\": \"Name\",\n                           \"hidden\": false,\n                           \"editable\": false\n                         },\n                           \n                       ],\n                   \"rowOptions\": {\n                   //   \"state\": \"warning\",\n                     \"globalClick\": true,\n                     \"style\": {\n                    //   \"width\": \"20%\"\n                     }\n                   },\n                //   \"rowSourceData\":orgItem\n           }\n\n\n      \n\n    tableRowData.push(obj);\n});\n\ntableButton = [\n          {\n            \"buttonData\":\n              {\n                \"title\": \"Create\",\n                // \"allowSearch\": false,\n                // \"searchPlaceholder\": \"Search\",\n                \"design\":\n                  {\n                   \"file\": \"\",\n                    \"icon\":global.get(\"icons.fas.create\") ,\n                    // \"width\": \"\",\n                    size:\"small\",\n                    \"embossed\": true,\n                    \"linebox\": true,\n                    \"gradient\": false,\n                    // \"color\": \"green\",\n                    // padding : \"10px\"\n                  },\n              \n                  \"disabled\": false,\n                // \"type\": \"success\",\n                 action: 'create',\n                //   clickType: \"row\"\n\n              },\n            \"buttonOptions\":\n              {\n                \"dataType\": \"single\",\n                \"displayType\": \"text\",\n                \"selectionType\": \"global\"\n              }\n          },\n             {\n            \"buttonData\":\n              {\n                \"title\": \"Remove\",\n                // \"allowSearch\": false,\n                // \"searchPlaceholder\": \"Search\",\n                \"design\":\n                  {\n                   \"file\": \"\",\n                    \"icon\":global.get(\"icons.fas.remove\") ,\n                    // \"width\": \"\",\n                    size:\"small\",\n                    \"embossed\": true,\n                    \"linebox\": true,\n                    \"gradient\": false,\n                    // \"color\": \"green\",\n                    // padding : \"10px\"\n                  },\n              \n                  \"disabled\": false,\n                // \"type\": \"success\",\n                 action: 'remove',\n                //   clickType: \"row\"\n\n              },\n            \"buttonOptions\":\n              {\n                \"dataType\": \"single\",\n                \"displayType\": \"text\",\n                \"selectionType\": \"row\"\n              }\n          }\n      ]\n\n\n\n\n\nif (tableRowData.length > 10 ){\n    paged = 10;\n} else {\n    paged = tableRowData.length;\n}\n\n//////  Button permissions ************************\n\n\nmsg.payload = { \n    user_id : msg.RevotioData.FlowData.user_id,\n    gadgetsList: \n    [ {\n                 \"gadgetId\": 'c31185f7-9031-d821-2eab-f6ec9a8427fa',\n            \"gadgetName\": \"pages DT\",\n            \"gadgetType\": \"data-table\",\n            \n    \"gadgetOptions\": {\n      \"allowSearch\": true,\n      \"maxItems\": paged,\n      \"striped\": true,\n      \"export\": true\n    },\n    \"gadgetData\": {\n      \"tableColumnData\": tableColumnData,\n      \"tableTitle\": \"Pages\",\n      \"tableRowData\": tableRowData ,\n      \"tableButton\": tableButton,\n    //   \"tableOptions\": {\n    //     \"mainOption\": \"global\"\n    //   }\n    }\n  }]}\n\n\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2290,"y":720,"wires":[["8da1bbe8.04bbc"]]},{"id":"e84c152c.297a88","type":"function","z":"7ba47ea5.e51c4","name":"get All pages","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar mongodbTools = global.get('mongodbTools');\n// Get UserData\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [\n                                        { \n                                            \"$match\" : {\n                                                \"application_id\" : new ObjectID(msg.RevotioData.FlowData.application_id), \n                                             \n                                            }\n                                        }, \n                                       \n                                    ]},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) \n            \n            \n            \n// return msg;","outputs":1,"noerr":0,"x":2010,"y":720,"wires":[["1a012b52.85c1c5","f1d0effd.3ba548"]]},{"id":"76027a09.548534","type":"link in","z":"7ba47ea5.e51c4","name":"Org overview - DT & Tabs & Card","links":["31177cae.22305c","b47978b8.e72108"],"x":1895,"y":720,"wires":[["e84c152c.297a88"]]},{"id":"e32bfbbc.c072f8","type":"function","z":"7ba47ea5.e51c4","name":"Edit application Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"5343ce4a-7abd-6f7f-2b01-93e745d69713\",\n            \"gadgetName\":\"Edit application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-warning\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Edit application\"},\n                \"gadgetData\":{\n                    action: \"Edit\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1990,"y":680,"wires":[["9cebc8d2.03588"]]},{"id":"7421bf8d.f51dd8","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":680,"wires":[["e32bfbbc.c072f8"]]},{"id":"ac021d39.d59198","type":"function","z":"7ba47ea5.e51c4","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Page\",\n        FormActionType : \"Create\",\n        FormData:{\n            organization_id: msg.RevotioData.FlowData.organization_id,\n            application_id : msg.RevotioData.FlowData.application_id,\n        },\n        organization_id: msg.RevotioData.FlowData.organization_id,\n        application_id : msg.RevotioData.FlowData.application_id,\n        \n        \n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":720,"wires":[["df47c4ea.1f7fa"]]},{"id":"eb8e1f87.fa97c","type":"link in","z":"7ba47ea5.e51c4","name":"OrganizationOverview - GadgetAction","links":["7a97faf2.da1704","988606f9.ca8a78","9e67672.fbf3c98"],"x":3275,"y":900,"wires":[["3db63aec.566166","9c2693a3.52a768"]]},{"id":"65235db7.b0710c","type":"function","z":"7ba47ea5.e51c4","name":"Remove application modal","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove organization modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'show'}}];\n\n\n    \ngadgetsList.push({            \n       \"gadgetId\": \"db2252fd-9e1a-44ae-b00c-47ac1fdf4c11\",\n            \"gadgetName\":\"Conform remove application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Yes\"},//, remove \" + msg.RevotioData.FlowData.Data.OrganizationData.name},\n                \"gadgetData\":{action : \"remove\", _id: msg.RevotioData.FlowData.Data.ApplicationData._id}\n       \n   })\n\ngadgetsList.push({            \n       \"gadgetId\": \"47975d37-c5e4-bd28-d0b6-e09d2276bb44\",\n            \"gadgetName\":\"Cancel remove application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Cancel\"},\n                \"gadgetData\":{action : \"cancel\"}\n       \n   })\n   \n   \ndata =  [{\nlabel: \"You are about to delete \" + msg.RevotioData.FlowData.Data.ApplicationData.name + \", are you sure?\", \nvalue: \"\",//+ \" \" +  + \" - GO team \" + msg.RevotioData.FlowData.Data.MembershipsData.TeamData[0].name\noptions: {\n'text-align': 'center', // left | center | right\n'font-size': 25,\n'font-weight': 700,\n'font-family': 'roboto',\n'color': '#003580',\n'value-color': '#003580',\n// 'label-margin-bottom': 20,\n}\n}]\n\n\n\ngadgetsList.push({\n\"gadgetId\": \"1062d5ff-d470-c77c-46a8-68fe55cf6153\",\n\"gadgetName\":\"Remove modal conformation text\",\ngadgetType: 'dynamic-text-area',\ngadgetData: {\ndata: data,\noptions: {\n'display': 'flex', // block | inline-block | flex\n'field-display': 'flex', // block | inline-block | flex\n'text-align': 'center', // left | center | right\n'font-size': 12,\n'font-weight': 400,\n'font-family': 'arial',\n'color': '#ccc',\n'label-font-size': 16,\n'label-font-weight': 400,\n'label-font-family': 'arial',\n'label-color': 'red',\n'label-margin-top': 0,\n'label-margin-right': 10,\n'label-margin-bottom': 10,\n'label-margin-left': 0,\n'label-padding-top': 0,\n'label-padding-right': 0,\n'label-padding-bottom': 0,\n'label-padding-left': 0,\n'value-font-size': 14,\n'value-font-weight': 400,\n'value-family': 'verdana',\n'value-color': '#18a689',\n'value-margin-top': 0,\n'value-margin-right': 0,\n'value-margin-bottom': 0,\n'value-margin-left': 0,\n'value-padding-top': 0,\n'value-padding-right': 0,\n'value-padding-bottom': 0,\n'value-padding-left': 0,\n'label-position': 'left', // top | left | right | bottom\n'margin-top': 0,\n'margin-right': 20,\n'margin-bottom': 0,\n'margin-left': 0,\n'number-columns': 1\n}}});\n\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3840,"y":800,"wires":[["10342fd.85b50d"]]},{"id":"caf91c08.c6b15","type":"function","z":"7ba47ea5.e51c4","name":"Route based on action","func":"var Remove, Cancel;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n\nif (PostData.gadgetData.action === 'remove'){\n    msg.application_id = msg.RevotioData.PostData.gadgetData._id\n    Remove = msg;\n} else if (PostData.gadgetData.action === 'cancel'){\n    Cancel = msg;\n}\nreturn [Remove, Cancel];","outputs":"2","noerr":0,"x":3820,"y":920,"wires":[["19881911.6e23d7","aa196110.79727"],["19881911.6e23d7"]],"outputLabels":["Remove","Cancel"]},{"id":"19881911.6e23d7","type":"function","z":"7ba47ea5.e51c4","name":"Hide Remove application modal","func":"\nvar gadgetsList =[ {\n                  \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove application modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'hide'}}];\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4090,"y":940,"wires":[["5769feab.1938e"]]},{"id":"5769feab.1938e","type":"link out","z":"7ba47ea5.e51c4","name":"Push gagdets to frontend","links":["ed29e924.d84018","b84e6833.04603","643ec9be.afe5c8","9fa3437a.32fc28","2ef38e9f.9b1652","ff374233.426928","35994986.0c2f46","714d3f49.3cb3c8","77f50e6a.257ba8","e07ac5c9.329c2","e80a4ee8.bc6cc8","91b0d636.30c0a","8f8af900.2d5568","636af534.63fd94","67fafb7c.d55fdc","ceb7cb22.46d6d","62354ab5.8af784","192a7e40.ba47a2","634060be.86e828","bc005923.240b","1f46b80e.c3e75","e9345d01.5c8fb","8378522a.50d3a","8b0389ee.3adf1","6c564fdb.5ca2f8","19d38825.da0488","50b6680f.064ea","dfd0a08e.b83258","db667e4b.c50578"],"x":4215,"y":940,"wires":[]},{"id":"d169179a.15a598","type":"function","z":"7ba47ea5.e51c4","name":"Redirect user to organizations overview","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.payload = { \n    Page : \"organization overview\",\n    RevotioData: {\n        organization_id:new ObjectID(msg.RevotioData.FlowData.organization_id)\n    }            \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":4540,"y":900,"wires":[["5b30ed92.05940c"]]},{"id":"e2b67e32.2dc86","type":"comment","z":"7ba47ea5.e51c4","nameinfo":"","x":2430,"y":560,"wires":[]},{"id":"cc196199.f37dc8","type":"comment","z":"7ba47ea5.e51c4","name":"ApplicationOverview","info":"","x":150,"y":620,"wires":[]},{"id":"3f3dd94b.37505e","type":"comment","z":"7ba47ea5.e51c4","name":"application overview gadgets","info":"","x":1420,"y":580,"wires":[]},{"id":"a666c4e2.8d2a28","type":"comment","z":"7ba47ea5.e51c4","name":"application overview gagdet actions","info":"","x":3280,"y":780,"wires":[]},{"id":"940eb508.efdf98","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2135,"y":640,"wires":[]},{"id":"9cebc8d2.03588","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2115,"y":680,"wires":[]},{"id":"8da1bbe8.04bbc","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2435,"y":720,"wires":[]},{"id":"9c2693a3.52a768","type":"debug","z":"7ba47ea5.e51c4","name":"application overview ACTION","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3450,"y":1060,"wires":[]},{"id":"10342fd.85b50d","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","db667e4b.c50578"],"x":3975,"y":800,"wires":[]},{"id":"972feda0.1c1a1","type":"comment","z":"7ba47ea5.e51c4","name":"Push gadget to frontend","info":"","x":4090,"y":820,"wires":[]},{"id":"13d1baf8.c5646d","type":"comment","z":"7ba47ea5.e51c4","name":"Form","info":"","x":4220,"y":778.3333740234375,"wires":[]},{"id":"ecff29ea.69e678","type":"comment","z":"7ba47ea5.e51c4","name":"Redirect","info":"","x":4760,"y":920,"wires":[]},{"id":"5436731b.55b5d4","type":"comment","z":"7ba47ea5.e51c4","name":"Delete all organization data","info":"","x":3830,"y":860,"wires":[]},{"id":"5d8ccb1e.0e35c4","type":"debug","z":"7ba47ea5.e51c4","name":"APP OVERVIEW INIT - 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1410,"y":1000,"wires":[]},{"id":"c8ec51ec.aaa98","type":"subflow:45759581.11da84","z":"7ba47ea5.e51c4","name":"","env":[],"x":1950,"y":760,"wires":[["2bbc8a97.24b25e"]]},{"id":"2bbc8a97.24b25e","type":"function","z":"7ba47ea5.e51c4","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"e463f60c-0606-fd3e-692c-471692f539fb\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2260,"y":760,"wires":[["9e08862b.b018f8"]]},{"id":"58a6dbae.b2125c","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":760,"wires":[["c8ec51ec.aaa98"]]},{"id":"9e08862b.b018f8","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2435,"y":760,"wires":[]},{"id":"2f33bec8.93faaa","type":"link in","z":"7ba47ea5.e51c4","name":"Organization overview - design","links":["2e050c0f.a8cfbc","435bb0f8.9671","67b5e299.a325b4"],"x":955,"y":760,"wires":[["87fa11da.1f858"]]},{"id":"979007b0.6154a8","type":"http response","z":"7ba47ea5.e51c4","name":"","statusCode":"","headers":{},"x":1650,"y":760,"wires":[]},{"id":"d3e3c414.e9cbc8","type":"function","z":"7ba47ea5.e51c4","name":"Organization overview -  design","func":"msg.topbarContanerId = \"887ef027-08c1-143b-b3e8-78667a8b6d83\"\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":760,"wires":[["3586e698.3abd52"]]},{"id":"833bb984.27e5c","type":"comment","z":"7ba47ea5.e51c4","name":"DESIGN","info":"","x":960,"y":720,"wires":[]},{"id":"6eac5354.6d7d1c","type":"http in","z":"7ba47ea5.e51c4","name":"ApplicationOverview","url":"/ApplicationOverview","method":"post","upload":false,"swaggerDoc":"","x":90,"y":840,"wires":[["a5c88475.dae858","d5261045.03deb8"]]},{"id":"67b5e299.a325b4","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["2f33bec8.93faaa"],"x":495,"y":800,"wires":[]},{"id":"a2c7fac0.36278","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["b518d1ad.725f6"],"x":495,"y":840,"wires":[]},{"id":"9e67672.fbf3c98","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["eb8e1f87.fa97c"],"x":495,"y":880,"wires":[]},{"id":"334f8e2.49c3bf2","type":"comment","z":"7ba47ea5.e51c4","name":"INIT","info":"","x":570,"y":840,"wires":[]},{"id":"c100fbc6.c30708","type":"comment","z":"7ba47ea5.e51c4","name":"DESIGN","info":"","x":580,"y":800,"wires":[]},{"id":"4fb597b4.187d","type":"comment","z":"7ba47ea5.e51c4","name":"ROUTE","info":"","x":570,"y":880,"wires":[]},{"id":"87fa11da.1f858","type":"subflow:39834eee.0dd5a2","z":"7ba47ea5.e51c4","name":"","x":1080,"y":760,"wires":[["d3e3c414.e9cbc8"]]},{"id":"5b30ed92.05940c","type":"subflow:5e9b9c1d.bbe4a4","z":"7ba47ea5.e51c4","name":"","env":[],"x":4920,"y":900,"wires":[]},{"id":"43f90b21.d4c454","type":"subflow:5e9b9c1d.bbe4a4","z":"7ba47ea5.e51c4","name":"","env":[],"x":3780,"y":960,"wires":[]},{"id":"a5c88475.dae858","type":"debug","z":"7ba47ea5.e51c4","name":"ApplicationOverview","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":380,"y":720,"wires":[]},{"id":"d5261045.03deb8","type":"subflow:a55f7aee.572be","z":"7ba47ea5.e51c4","name":"","env":[],"x":330,"y":840,"wires":[["67b5e299.a325b4"],["a2c7fac0.36278"],["9e67672.fbf3c98"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"5c47add9.57de8c","type":"http request","z":"7ba47ea5.e51c4","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":4230,"y":860,"wires":[["d169179a.15a598"]]},{"id":"aa196110.79727","type":"function","z":"7ba47ea5.e51c4","name":"Fire remove action","func":"msg.url = global.get(\"DomainProperties.url\") + \"removeApplication\"\n\nmsg.payload = {\n    application_id : msg.application_id\n}\nreturn msg;","outputs":1,"noerr":0,"x":4050,"y":860,"wires":[["5c47add9.57de8c"]]},{"id":"40d1fac2.9bf774","type":"subflow:3170c4ab.fadb9c","z":"7ba47ea5.e51c4","name":"","x":4100,"y":600,"wires":[["11597947.43e467"]]},{"id":"11597947.43e467","type":"link out","z":"7ba47ea5.e51c4","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","db667e4b.c50578"],"x":4175,"y":600,"wires":[]},{"id":"32648c67.74af74","type":"subflow:152aab03.7a806d","z":"7ba47ea5.e51c4","name":"","env":[],"x":3780,"y":680,"wires":[["dd254265.00abb8"]]},{"id":"dd254265.00abb8","type":"link out","z":"7ba47ea5.e51c4","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","db667e4b.c50578"],"x":3855,"y":680,"wires":[]},{"id":"df47c4ea.1f7fa","type":"subflow:3170c4ab.fadb9c","z":"7ba47ea5.e51c4","name":"","env":[],"x":4020,"y":720,"wires":[["505e0886.cd1c7"]]},{"id":"505e0886.cd1c7","type":"link out","z":"7ba47ea5.e51c4","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","db667e4b.c50578"],"x":4155,"y":720,"wires":[]},{"id":"4811010d.83c18","type":"subflow:152aab03.7a806d","z":"7ba47ea5.e51c4","name":"","env":[],"x":1980,"y":600,"wires":[["8c67a5eb.f47518"]]},{"id":"8c67a5eb.f47518","type":"link out","z":"7ba47ea5.e51c4","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","db667e4b.c50578"],"x":2235,"y":600,"wires":[]},{"id":"c6cd3b88.cb163","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":600,"wires":[["4811010d.83c18"]]},{"id":"3586e698.3abd52","type":"subflow:2ef93158.ae5276","z":"7ba47ea5.e51c4","name":"","env":[],"x":1520,"y":760,"wires":[["979007b0.6154a8"]]},{"id":"db667e4b.c50578","type":"link in","z":"7ba47ea5.e51c4","name":"","links":["8c67a5eb.f47518","940eb508.efdf98","9cebc8d2.03588","8da1bbe8.04bbc","d0d918ae.b85de","9e08862b.b018f8","6655cb34.620dc4","11597947.43e467","dd254265.00abb8","505e0886.cd1c7","64b24870.e0251","10342fd.85b50d","5769feab.1938e","8d675ebd.cb8468","995c8f2b.9ee64","e7390970.81ca1","58be8ed6.4537b","ee5624fc.6018","c1fcdfad.f08f1","93499b81.012378"],"x":715,"y":380,"wires":[["9a924e61.4e5da8"]]},{"id":"ee0e7f3e.eaede8","type":"subflow:e25f5e2d.45871","z":"7ba47ea5.e51c4","name":"","env":[],"x":980,"y":360,"wires":[]},{"id":"9a924e61.4e5da8","type":"function","z":"7ba47ea5.e51c4","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":380,"wires":[["ee0e7f3e.eaede8","297daff1.fbe6d"]]},{"id":"ccb6fa38.a59c98","type":"debug","z":"7ba47ea5.e51c4","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":220,"y":520,"wires":[]},{"id":"602bd760.18282","type":"catch","z":"7ba47ea5.e51c4","name":"","scope":null,"x":100,"y":520,"wires":[["ccb6fa38.a59c98"]]},{"id":"d31c1dfd.40a08","type":"function","z":"7ba47ea5.e51c4","name":"INIT APP level","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.application_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.ApplicationData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.ApplicationData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1360,"y":880,"wires":[["31177cae.22305c","3c90016e.b3d74e"]]},{"id":"3c90016e.b3d74e","type":"debug","z":"7ba47ea5.e51c4","name":"APP OVERVIEW INIT - 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1650,"y":960,"wires":[]},{"id":"b6139a.b2006468","type":"function","z":"f8594dbe.be6f8","name":"Application overview","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"84c4f3f6-6173-a020-5c11-05042758ba2f\",\n            \"gadgetName\": \"application overview\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"ef01763d-2f59-05d5-1264-be24c24727c2\",\n            \"gadgetName\":  \"application overview\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3400,"y":900,"wires":[["59ca27a4.ef09b8"]]},{"id":"f0597f72.837008","type":"function","z":"f8594dbe.be6f8","name":"Page overview","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"84c4f3f6-6173-a020-5c11-05042758ba2f\",\n            \"gadgetName\": \"page overview\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"ef01763d-2f59-05d5-1264-be24c24727c2\",\n            \"gadgetName\":  \"page overview\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3380,"y":940,"wires":[["59ca27a4.ef09b8"]]},{"id":"14833431.be5594","type":"link in","z":"4c633fc.7d56fc","name":"OrganizationOverview - INIT FLOW","links":["d609b87f.7e619","6171b7c5.44b0b","b5fb4d7e.2e87f8","d62604b5.cfdc78"],"x":975,"y":520,"wires":[["fbfda81e.0bead"]]},{"id":"a436ae.cf95b95","type":"function","z":"4c633fc.7d56fc","name":"Route userAction","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar EditMoveCopyTemplatePage, FormAction, MenuAction,  CreatePageTrigger , RemovePageTrigger, RemovePageActions,Redirect, builderAction, breadcrumbs;\n\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"){\n    \n    // if ( msg.RevotioData.GadgetPost.gadgetName === \"Add organization to project\"){\n    if (PostData.gadgetName === \"Remove page\"){\n        RemovePageTrigger = msg;\n    } else if ( PostData.gadgetName === \"Edit page\"  ||\n                PostData.gadgetName === \"Generate page template\"  ||\n                 PostData.gadgetName === \"Move page\" ||\n                  PostData.gadgetName === \"Copy page\"){\n        \n        EditMoveCopyTemplatePage = msg;\n    } \n    // else if ( PostData.gadgetName === \"Edit page\"){\n        \n    //     EditPage = msg;\n    // } \n    else if (PostData.gadgetName === \"Cancel remove page\" || PostData.gadgetName === \"Conform remove page\"){\n        RemovePageActions = msg;\n    } \n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n}  else if (PostData.gadgetType=== \"data-table\" ){\n    if (msg.RevotioData.PostData.gadgetName === \"pages DT\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreatePageTrigger = msg;\n    } else {\n        msg.payload = { \n                Page : \"page overview\",\n                RevotioData: {\n                    page_id :new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                    organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n                    application_id : new ObjectID(msg.RevotioData.FlowData.application_id)\n                }            \n            };\n\n         Redirect = msg;\n    }} \n}else if (PostData.gadgetType === \"page-builder\"){\n    builderAction = msg;\n}  else if ( PostData.gadgetType === \"revotio-breadcrumbs\"){ \n    breadcrumbs = msg;\n}\n\n\n\nreturn [EditMoveCopyTemplatePage, FormAction, MenuAction,  CreatePageTrigger , RemovePageTrigger, RemovePageActions,Redirect, builderAction, breadcrumbs]\n","outputs":9,"noerr":0,"x":3410,"y":540,"wires":[["a2d1123f.bfd6e8"],["393baa74.e5925e"],["19186ffb.2063b"],["dbd5c5a0.17911"],["37914f21.919058"],["9e4c3223.fcebb"],["75fcbd53.ba66bc"],["95bc7a5d.0aea88","3485373f.a42a18"],["3e082bf0.404b0c"]],"outputLabels":["EditMoveCopyTemplatePage","FormAction","MenuAction","CreatePageTrigger","RemovePageTrigger","RemovePageActions","Redirect","builderAction","breadcrumbs"]},{"id":"d61d5621.9a6a9","type":"link out","z":"4c633fc.7d56fc","name":"Trigger gadgets","links":["1b412642.d4822a","ce3ca33c.4ef938","dbd474d8.e62b68","6e5bdff9.225f78","7a3f690f.580ea8","883c7cee.db8a6","b44743b5.0de1f","ba4ff609.18c878","bb7d751c.1c7ac8","e4257dd4.c6777","f32152b8.b14bf8","bbeef07d.cea3f8","db7bce75.7399c8","97fe6585.9a1a6","574da7a4.73af18","d343deac.1f9298","1efb8c2.719daf4","d3bebacb.fa55e","fd605e92.114ca8","60f3d403.da9484","368c92c8.b35696","cd4dbfc1.f7df8","d7cf743e.c59b6"],"x":1495,"y":520,"wires":[]},{"id":"5d9b07df.f68e6","type":"comment","z":"4c633fc.7d56fc","name":"INIT FLOW","info":"","x":960,"y":480,"wires":[]},{"id":"b91e43f4.727bd","type":"function","z":"4c633fc.7d56fc","name":"Remove page btn","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"7536d205-807d-3372-f9e0-943c242486db\",\n            \"gadgetName\":\"Remove page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Remove page\" },\n                \"gadgetData\":{}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1990,"y":280,"wires":[["7501bae4.f69f74"]]},{"id":"6e5bdff9.225f78","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":280,"wires":[["b91e43f4.727bd"]]},{"id":"a2d1123f.bfd6e8","type":"function","z":"4c633fc.7d56fc","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Page\",\n        FormActionType : msg.RevotioData.PostData.gadgetData.action,\n        FormData: msg.RevotioData.FlowData.Data.PageData,\n        organization_id : msg.RevotioData.FlowData.organization_id,\n        application_id : msg.RevotioData.FlowData.application_id,\n        page_id : msg.RevotioData.FlowData.Data.PageData._id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":240,"wires":[["5d7f0aed.22c454"]]},{"id":"393baa74.e5925e","type":"function","z":"4c633fc.7d56fc","name":"Set Form Data","func":"     msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n msg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":280,"wires":[["5d7f0aed.22c454"]]},{"id":"b44743b5.0de1f","type":"link in","z":"4c633fc.7d56fc","name":"Org overview - DT & Tabs & Card","links":["d61d5621.9a6a9","b47978b8.e72108","1804443f.b686e4"],"x":1895,"y":360,"wires":[["aaf94934.0549c8"]]},{"id":"32847011.a18db8","type":"function","z":"4c633fc.7d56fc","name":"Edit page Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"5343ce4a-7abd-6f7f-2b01-93e745d69713\",\n            \"gadgetName\":\"Edit page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-warning\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Edit page\"},\n                 \"gadgetData\":{\n                    action: \"Edit\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":320,"wires":[["ece84ba2.f8d9a8"]]},{"id":"e4257dd4.c6777","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":320,"wires":[["32847011.a18db8"]]},{"id":"dbd5c5a0.17911","type":"function","z":"4c633fc.7d56fc","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Page\",\n        FormActionType : \"Create\",\n        FormData:{\n            organization_id: msg.RevotioData.FlowData.organization_id,\n            application_id : msg.RevotioData.FlowData.application_id,\n        },\n        organization_id: msg.RevotioData.FlowData.organization_id,\n        application_id : msg.RevotioData.FlowData.application_id,\n        \n        \n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":360,"wires":[["9222ccf2.accf4"]]},{"id":"3533e10.d5ccf2","type":"link in","z":"4c633fc.7d56fc","name":"OrganizationOverview - GadgetAction","links":["7a97faf2.da1704","988606f9.ca8a78","87e71123.94a068"],"x":3275,"y":540,"wires":[["a436ae.cf95b95","c7eb469.d5e1bb8"]]},{"id":"37914f21.919058","type":"function","z":"4c633fc.7d56fc","name":"Remove page modal","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove page modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'show'}}];\n\n\n    \ngadgetsList.push({            \n       \"gadgetId\": \"db2252fd-9e1a-44ae-b00c-47ac1fdf4c11\",\n            \"gadgetName\":\"Conform remove page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Yes\"},//, remove \" + msg.RevotioData.FlowData.Data.OrganizationData.name},\n                \"gadgetData\":{action : \"remove\", _id: msg.RevotioData.FlowData.Data.PageData._id}\n       \n   })\n\ngadgetsList.push({            \n       \"gadgetId\": \"47975d37-c5e4-bd28-d0b6-e09d2276bb44\",\n            \"gadgetName\":\"Cancel remove page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Cancel\"},\n                \"gadgetData\":{action : \"cancel\"}\n       \n   })\n   \n   \ndata =  [{\nlabel: \"You are about to delete \" + msg.RevotioData.FlowData.Data.PageData.name + \", are you sure?\", \nvalue: \"\",//+ \" \" +  + \" - GO team \" + msg.RevotioData.FlowData.Data.MembershipsData.TeamData[0].name\noptions: {\n'text-align': 'center', // left | center | right\n'font-size': 25,\n'font-weight': 700,\n'font-family': 'roboto',\n'color': '#003580',\n'value-color': '#003580',\n// 'label-margin-bottom': 20,\n}\n}]\n\n\n\ngadgetsList.push({\n\"gadgetId\": \"1062d5ff-d470-c77c-46a8-68fe55cf6153\",\n\"gadgetName\":\"Remove modal conformation text\",\ngadgetType: 'dynamic-text-area',\ngadgetData: {\ndata: data,\noptions: {\n'display': 'flex', // block | inline-block | flex\n'field-display': 'flex', // block | inline-block | flex\n'text-align': 'center', // left | center | right\n'font-size': 12,\n'font-weight': 400,\n'font-family': 'arial',\n'color': '#ccc',\n'label-font-size': 16,\n'label-font-weight': 400,\n'label-font-family': 'arial',\n'label-color': 'red',\n'label-margin-top': 0,\n'label-margin-right': 10,\n'label-margin-bottom': 10,\n'label-margin-left': 0,\n'label-padding-top': 0,\n'label-padding-right': 0,\n'label-padding-bottom': 0,\n'label-padding-left': 0,\n'value-font-size': 14,\n'value-font-weight': 400,\n'value-family': 'verdana',\n'value-color': '#18a689',\n'value-margin-top': 0,\n'value-margin-right': 0,\n'value-margin-bottom': 0,\n'value-margin-left': 0,\n'value-padding-top': 0,\n'value-padding-right': 0,\n'value-padding-bottom': 0,\n'value-padding-left': 0,\n'label-position': 'left', // top | left | right | bottom\n'margin-top': 0,\n'margin-right': 20,\n'margin-bottom': 0,\n'margin-left': 0,\n'number-columns': 1\n}}});\n\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3820,"y":440,"wires":[["f1e15053.fe9a6"]]},{"id":"9e4c3223.fcebb","type":"function","z":"4c633fc.7d56fc","name":"Route based on action","func":"var Remove, Cancel;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n\nif (PostData.gadgetData.action === 'remove'){\n    msg.page_id = msg.RevotioData.PostData.gadgetData._id\n    Remove = msg;\n} else if (PostData.gadgetData.action === 'cancel'){\n    Cancel = msg;\n}\nreturn [Remove, Cancel];","outputs":"2","noerr":0,"x":3820,"y":560,"wires":[["966947ba.fd7d3","45472c06.3c63bc"],["966947ba.fd7d3"]],"outputLabels":["Remove","Cancel"]},{"id":"966947ba.fd7d3","type":"function","z":"4c633fc.7d56fc","name":"Hide Remove project modal","func":"\nvar gadgetsList =[ {\n                  \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove organization modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'hide'}}];\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4080,"y":580,"wires":[["c9c13987.71067"]]},{"id":"c9c13987.71067","type":"link out","z":"4c633fc.7d56fc","name":"Push gagdets to frontend","links":["ed29e924.d84018","b84e6833.04603","643ec9be.afe5c8","9fa3437a.32fc28","2ef38e9f.9b1652","ff374233.426928","35994986.0c2f46","714d3f49.3cb3c8","77f50e6a.257ba8","e07ac5c9.329c2","e80a4ee8.bc6cc8","91b0d636.30c0a","8f8af900.2d5568","636af534.63fd94","67fafb7c.d55fdc","ceb7cb22.46d6d","62354ab5.8af784","192a7e40.ba47a2","634060be.86e828","bc005923.240b","1f46b80e.c3e75","e9345d01.5c8fb","8378522a.50d3a","8b0389ee.3adf1","6c564fdb.5ca2f8","19d38825.da0488","50b6680f.064ea","dfd0a08e.b83258","59a8bd9.c352fc4"],"x":4215,"y":580,"wires":[]},{"id":"59a2d239.ef0a44","type":"function","z":"4c633fc.7d56fc","name":"Redirect user to application overview","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.payload = { \n    Page : \"application overview\",\n    RevotioData: {\n        organization_id:new ObjectID(msg.RevotioData.FlowData.organization_id),\n        application_id:new ObjectID(msg.RevotioData.FlowData.application_id)\n    }            \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":4530,"y":540,"wires":[["f49e1e1d.16d918"]]},{"id":"5e2cf245.4d3ba4","type":"comment","z":"4c633fc.7d56fc","name":"***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************","info":"","x":2430,"y":200,"wires":[]},{"id":"21f4817b.233e3e","type":"comment","z":"4c633fc.7d56fc","name":"PageOverview","info":"","x":130,"y":260,"wires":[]},{"id":"e44c824e.9be28","type":"comment","z":"4c633fc.7d56fc","name":"Page overview gadgets","info":"","x":1400,"y":220,"wires":[]},{"id":"7ea4b211.7577ec","type":"comment","z":"4c633fc.7d56fc","name":"Pages overview gagdet actions","info":"","x":3270,"y":420,"wires":[]},{"id":"7501bae4.f69f74","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2135,"y":280,"wires":[]},{"id":"ece84ba2.f8d9a8","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2115,"y":320,"wires":[]},{"id":"e689a3b8.65e67","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2575,"y":360,"wires":[]},{"id":"c7eb469.d5e1bb8","type":"debug","z":"4c633fc.7d56fc","name":"Page overview ACTION","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3430,"y":700,"wires":[]},{"id":"f1e15053.fe9a6","type":"link out","z":"4c633fc.7d56fc","name":"","links":["f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","59a8bd9.c352fc4"],"x":3975,"y":440,"wires":[]},{"id":"8fdc27ee.014d3","type":"comment","z":"4c633fc.7d56fc","name":"Push gadget to frontend","info":"","x":4090,"y":460,"wires":[]},{"id":"d7a8bcd7.09dbb","type":"comment","z":"4c633fc.7d56fc","name":"Form","info":"","x":4220,"y":418.3333740234375,"wires":[]},{"id":"3f85c7e5.1d63e","type":"comment","z":"4c633fc.7d56fc","name":"Redirect","info":"","x":4760,"y":540,"wires":[]},{"id":"79d042c2.5cb17c","type":"comment","z":"4c633fc.7d56fc","name":"Delete all organization data","info":"","x":3830,"y":500,"wires":[]},{"id":"49c1a4cf.4a08d4","type":"debug","z":"4c633fc.7d56fc","name":"Page OVERVIEW INIT - 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1410,"y":640,"wires":[]},{"id":"ada665e1.de0e28","type":"subflow:45759581.11da84","z":"4c633fc.7d56fc","name":"","env":[],"x":1950,"y":400,"wires":[["d93d9065.daa08"]]},{"id":"d93d9065.daa08","type":"function","z":"4c633fc.7d56fc","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"e463f60c-0606-fd3e-692c-471692f539fb\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2620,"y":400,"wires":[["f218082b.22709"]]},{"id":"1b412642.d4822a","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":400,"wires":[["ada665e1.de0e28"]]},{"id":"f218082b.22709","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2795,"y":400,"wires":[]},{"id":"b3d5d0e1.94f778","type":"link in","z":"4c633fc.7d56fc","name":"Organization overview - design","links":["2e050c0f.a8cfbc","435bb0f8.9671","14161f6e.4c9909"],"x":955,"y":400,"wires":[["4bb12a55.b026ac"]]},{"id":"b8911926.8345c","type":"http response","z":"4c633fc.7d56fc","name":"","statusCode":"","headers":{},"x":1650,"y":400,"wires":[]},{"id":"a8a5030.b5c87","type":"function","z":"4c633fc.7d56fc","name":"Organization overview -  design","func":"msg.topbarContanerId = \"887ef027-08c1-143b-b3e8-78667a8b6d83\"\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":400,"wires":[["9a48d20a.922258"]]},{"id":"d49958b1.0d0a78","type":"comment","z":"4c633fc.7d56fc","name":"DESIGN","info":"","x":960,"y":360,"wires":[]},{"id":"beb4af02.7db0c8","type":"http in","z":"4c633fc.7d56fc","name":"PageOverview","url":"/PageOverview","method":"post","upload":false,"swaggerDoc":"","x":70,"y":480,"wires":[["70b68737.ec05a","8eea335e.fc8ee"]]},{"id":"14161f6e.4c9909","type":"link out","z":"4c633fc.7d56fc","name":"","links":["b3d5d0e1.94f778"],"x":495,"y":440,"wires":[]},{"id":"d62604b5.cfdc78","type":"link out","z":"4c633fc.7d56fc","name":"","links":["14833431.be5594"],"x":495,"y":480,"wires":[]},{"id":"87e71123.94a068","type":"link out","z":"4c633fc.7d56fc","name":"","links":["3533e10.d5ccf2"],"x":495,"y":520,"wires":[]},{"id":"592b055a.a25fdc","type":"comment","z":"4c633fc.7d56fc","name":"INIT","info":"","x":570,"y":480,"wires":[]},{"id":"a233f55e.bc3f2","type":"comment","z":"4c633fc.7d56fc","name":"DESIGN","info":"","x":580,"y":440,"wires":[]},{"id":"9bbcfe24.d7c7c8","type":"comment","z":"4c633fc.7d56fc","name":"ROUTE","info":"","x":570,"y":520,"wires":[]},{"id":"4bb12a55.b026ac","type":"subflow:39834eee.0dd5a2","z":"4c633fc.7d56fc","name":"","x":1080,"y":400,"wires":[["a8a5030.b5c87"]]},{"id":"f49e1e1d.16d918","type":"subflow:5e9b9c1d.bbe4a4","z":"4c633fc.7d56fc","name":"","env":[],"x":4920,"y":540,"wires":[]},{"id":"75fcbd53.ba66bc","type":"subflow:5e9b9c1d.bbe4a4","z":"4c633fc.7d56fc","name":"","env":[],"x":3780,"y":640,"wires":[]},{"id":"70b68737.ec05a","type":"debug","z":"4c633fc.7d56fc","name":"PageOverview","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":340,"y":420,"wires":[]},{"id":"8eea335e.fc8ee","type":"subflow:a55f7aee.572be","z":"4c633fc.7d56fc","name":"","env":[],"x":330,"y":480,"wires":[["14161f6e.4c9909"],["d62604b5.cfdc78"],["87e71123.94a068"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"a3abff75.bffe38","type":"http request","z":"4c633fc.7d56fc","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":4230,"y":500,"wires":[["59a2d239.ef0a44"]]},{"id":"45472c06.3c63bc","type":"function","z":"4c633fc.7d56fc","name":"Fire remove action","func":"msg.url = global.get(\"DomainProperties.url\") + \"removePage\"\n\nmsg.payload = {\n    page_id : msg.page_id\n}\nreturn msg;","outputs":1,"noerr":0,"x":4050,"y":500,"wires":[["a3abff75.bffe38"]]},{"id":"5d7f0aed.22c454","type":"subflow:3170c4ab.fadb9c","z":"4c633fc.7d56fc","name":"","x":4100,"y":240,"wires":[["ad4db41.3330f48"]]},{"id":"ad4db41.3330f48","type":"link out","z":"4c633fc.7d56fc","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","59a8bd9.c352fc4"],"x":4175,"y":240,"wires":[]},{"id":"19186ffb.2063b","type":"subflow:152aab03.7a806d","z":"4c633fc.7d56fc","name":"","env":[],"x":3780,"y":320,"wires":[["af365661.ede238"]]},{"id":"af365661.ede238","type":"link out","z":"4c633fc.7d56fc","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","59a8bd9.c352fc4"],"x":3855,"y":320,"wires":[]},{"id":"9222ccf2.accf4","type":"subflow:3170c4ab.fadb9c","z":"4c633fc.7d56fc","name":"","env":[],"x":4020,"y":360,"wires":[["d38600e4.84df08"]]},{"id":"d38600e4.84df08","type":"link out","z":"4c633fc.7d56fc","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","59a8bd9.c352fc4"],"x":4155,"y":360,"wires":[]},{"id":"ba44d7cc.267b68","type":"subflow:152aab03.7a806d","z":"4c633fc.7d56fc","name":"","env":[],"x":2060,"y":240,"wires":[["79932173.3677b8"]]},{"id":"79932173.3677b8","type":"link out","z":"4c633fc.7d56fc","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","59a8bd9.c352fc4"],"x":2235,"y":240,"wires":[]},{"id":"db7bce75.7399c8","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1875,"y":240,"wires":[["ba44d7cc.267b68"]]},{"id":"9a48d20a.922258","type":"subflow:2ef93158.ae5276","z":"4c633fc.7d56fc","name":"","env":[],"x":1520,"y":400,"wires":[["b8911926.8345c"]]},{"id":"59a8bd9.c352fc4","type":"link in","z":"4c633fc.7d56fc","name":"","links":["79932173.3677b8","7501bae4.f69f74","ece84ba2.f8d9a8","e689a3b8.65e67","d0d918ae.b85de","f218082b.22709","6655cb34.620dc4","ad4db41.3330f48","af365661.ede238","d38600e4.84df08","64b24870.e0251","f1e15053.fe9a6","c9c13987.71067","8d675ebd.cb8468","995c8f2b.9ee64","17ddbe1a.545f92","aeb20705.2b3438","fae14b99.ce6138","fbaaca9.d365f38","4521f164.38c1f","cf6b1ee9.ca9be8","498ec862.023ba8","8f793cc1.9d4bf","32758ea7.dcecda","222cbf35.d53478"],"x":735,"y":140,"wires":[["3c599111.9bab4e"]]},{"id":"65f9a13a.c7e8b8","type":"subflow:e25f5e2d.45871","z":"4c633fc.7d56fc","name":"","env":[],"x":960,"y":140,"wires":[]},{"id":"3c599111.9bab4e","type":"function","z":"4c633fc.7d56fc","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":60,"wires":[["65f9a13a.c7e8b8","c4baafba.1f8e6"]]},{"id":"5150d340.16393c","type":"debug","z":"4c633fc.7d56fc","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":220,"y":160,"wires":[]},{"id":"8db43c9e.71cdf8","type":"catch","z":"4c633fc.7d56fc","name":"","scope":null,"x":100,"y":160,"wires":[["5150d340.16393c"]]},{"id":"f9085b39.70a9e","type":"function","z":"4c633fc.7d56fc","name":"INIT APP level","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.application_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.ApplicationData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.ApplicationData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1320,"y":520,"wires":[["32640295.665436","db9f9362.68b2f8"]]},{"id":"32640295.665436","type":"debug","z":"4c633fc.7d56fc","name":"Page OVERVIEW INIT - 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1650,"y":600,"wires":[]},{"id":"db9f9362.68b2f8","type":"function","z":"4c633fc.7d56fc","name":"INIT page level","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.page_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.PageData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.PageData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1440,"y":500,"wires":[["d61d5621.9a6a9","c3e65d36.cd787"]]},{"id":"c3e65d36.cd787","type":"debug","z":"4c633fc.7d56fc","name":"Page OVERVIEW INIT - 3","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1750,"y":540,"wires":[]},{"id":"d5eabc8b.c754e","type":"function","z":"4c633fc.7d56fc","name":"Builder gadget","func":"msg.payload = {\n    gadgetsList:[{\n    \"gadgetId\": \"eb1cee2a-b04f-71e7-3169-78068b3c0a8a\",\n    \"gadgetName\": \"page_builder_edit\",\n    \"gadgetType\": \"page-builder\",\n    \"gadgetOptions\": {\n      \"disabled\": false,\n      \"tabsView\": true,\n      \"preview\": true,\n      \"contentType\": \"page\",\n\n    },\n    \"gadgetData\": \n     msg.RevotioData.FlowData.Data.PageData\n    \n  }]}\nreturn msg;","outputs":1,"noerr":0,"x":2400,"y":360,"wires":[["e689a3b8.65e67"]]},{"id":"b27b016a.614bb","type":"function","z":"4c633fc.7d56fc","name":"Update page object","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar data\nif (Array.isArray(msg.RevotioData.PostData.gadgetData)){\n    data = msg.RevotioData.PostData.gadgetData[0]\n} else {\n      data = msg.RevotioData.PostData.gadgetData\n}\n\ndelete data._id\n\nobj = {name : data.name}\n_.each(data, function(value , key){\n    if (typeof value === 'object' && value !== null){\n       obj[key]= value \n    }\n})\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.page_id)}, \n                            update : { \"$set\" : obj},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = {\n                        Page: msg.RevotioData.session.Page,\n                        RevotioData :{\n                            application_id: msg.RevotioData.FlowData.application_id,\n                            organization_id : msg.RevotioData.FlowData.organization_id,\n                            page_id : msg.RevotioData.FlowData.page_id,\n                        }\n                    }\n                    \n                    \n                    node.send(msg) \n            })  \n\n// return msg;","outputs":1,"noerr":0,"x":3960,"y":720,"wires":[["43ef8bc6.94180c"]]},{"id":"aaf94934.0549c8","type":"function","z":"4c633fc.7d56fc","name":"Get page data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.page_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.PageData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.PageData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":2040,"y":360,"wires":[["9bf974b1.0951e8"]]},{"id":"4ee074fd.fd030c","type":"function","z":"4c633fc.7d56fc","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nfindObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.organizations = res\n       \n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.FlowData.page_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Items\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Applications\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications_retention\",\n                                  \"localField\": \"application_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"Application retention\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"pages\",\n                                  \"localField\": \"application_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"Pages\"\n                                }\n                              },\n                               \n                              \n                              {\n                                $lookup: {\n                                  \"from\": \"pages_retention\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"pageId\",\n                                  \"as\": \"Page retention\"\n                                }\n                              },\n                             \n                                                         \n                            //   {\n                            //     $project: {\n                            //       \"_id\": \"$_id\",\n                            //       \"\"\n                            //     }\n                            //   },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                \n                // res[0].Organizations = msg.organizations\n                \n                msg.payload = res\n                \n                node.send(msg) \n                \n            })  \n\n})\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2290,"y":480,"wires":[["46d5405e.662268","34cf74b6.f09fa4"]]},{"id":"d343deac.1f9298","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":480,"wires":[["4ee074fd.fd030c"]]},{"id":"17ddbe1a.545f92","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2795,"y":480,"wires":[]},{"id":"46d5405e.662268","type":"function","z":"4c633fc.7d56fc","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\noptions = []\n    \n _.each(msg.organizations , function(orgRecord, index){\n     \n     if (   msg.RevotioData.FlowData.organization_id && \n            String(msg.RevotioData.FlowData.organization_id) === String(orgRecord._id)){\n                selected = true\n            } else {\n                selected = false\n            }\n            options.push(\n                                        {\n                                          \"title\": orgRecord.name,\n                                           type : orgRecord.name,\n                                            key  : orgRecord.name,\n                                            selected:selected,\n                                            action : {\n                                                \"Page\": \"organization overview\",\n                                                // RevotioData: {\n                                                    \"organization_id\": orgRecord._id,\n                                                // },\n                                            },\n                                            \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        }\n                                      )\n                    })\n            \n            data = [\n                 {\n                    \"buttonData\": {\n                      \"title\": \"Organizations\",\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }]\n            \n\n            _.each(msg.payload[0], function(dataArray, key){\n               \n\n               if (Array.isArray(dataArray) && (\n                   key === \"Page retention\" || \n                   key === \"Pages\" || \n                   key === \"Items\"          ||\n                   key === \"Applications\"   ||\n                   key === \"Application retention\" ||\n                   key === \"Page retention\"\n                   )){\n                    options = []\n                    selectedObj = {}\n\n                    _.each(dataArray , function(valueObject, index){\n                        \n                            // set  RevotioData\n                                      if (key === \"Items\"){\n                                             RevotioData = {\n                                                                        organization_id : valueObject.organization_id,\n                                                                        item_id: valueObject._id,\n                                                                        Page : \"item overview\"\n                                                     }\n                                            // Page = \n                                           \n                                        } else if (key === \"Applications\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id: valueObject._id,\n                                                                          Page : \"application overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application overview\"\n                                        } else if (key === \"Application retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         application_retention_id: valueObject._id,\n                                                                         Page : \"application retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application retention overview\"\n                                        } else if (key === \"Pages\"){\n                                             RevotioData = {\n                                                                        organization_id : valueObject.organization_id,\n                                                                        application_id : valueObject.application_id,\n                                                                        page_id: valueObject._id,\n                                                                        Page : \"page overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page overview\"\n                                        } else if (key === \"Page retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         page_id : valueObject.page_id,\n                                                                         page_retention_id : valueObject._id,\n                                                                         Page : \"page retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page retention overview\"\n                                        }\n                        \n                        // check if value is selected\n                        valueSelectedState = false\n                        _.each(msg.RevotioData.FlowData, function(FlowDataValue, FlowDataValueKey){\n                            \n                            if (String(FlowDataValue) === String(valueObject._id)){\n                                 valueSelectedState = true\n                                 \n                            } \n                        })\n                        \n                        \n                            options.push( {  \n                                          \"title\": valueObject.name,\n                                           type : valueObject.name,\n                                            key  : valueObject.name,\n                                            selected: valueSelectedState,\n                                            action : RevotioData,\n                                            // {\n                                            //     \"Page\": Page,\n                                            //     RevotioData: RevotioData,\n                                            // },\n                                           \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        } )\n                            \n                        })\n                   \n                   \n                    \n                    Obj =    {\n                    \"buttonData\": {\n                      \"title\": key,\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }\n                                  \n                    \n                    data.push(Obj)\n               }\n            })\n            \n            msg.payload = {\n                gadgetsList: [{\n                           \"gadgetId\": \"9df70be4-3911-5b11-881c-8bf1d26617e0\",\n                            \"gadgetName\": \"scopeBreadcrumbs\",\n                            \"gadgetType\": \"revotio-breadcrumbs\",\n                            gadgetData: data\n                          }]}\n\n            \n                    node.send(msg) \n","outputs":1,"noerr":0,"x":2570,"y":480,"wires":[["17ddbe1a.545f92"]]},{"id":"e8e83204.ecdd18","type":"subflow:5e9b9c1d.bbe4a4","z":"19457c3b.7f3ba4","name":"","env":[],"x":420,"y":60,"wires":[]},{"id":"75a214b5.1247dc","type":"function","z":"19457c3b.7f3ba4","name":"Prepair redirect (breadcrumbs)","func":"msg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.selected.Page,\n    RevotioData : msg.RevotioData.PostData.gadgetData.selected.RevotioData,\n}\nreturn msg;","outputs":1,"noerr":0,"x":190,"y":80,"wires":[["e8e83204.ecdd18"]]},{"id":"1501a930.833847","type":"function","z":"4c633fc.7d56fc","name":"Page text","func":"msg.payload = {\n    gadgetsList :[\n    {\n              \"gadgetData\": {\n                \"data\": [\n                  {\n                    \"label\": \"Page name\",\n                    \"value\": msg.RevotioData.FlowData.Data.PageData.name\n                  },\n                  {\n                    \"label\": \"Page label\",\n                    \"value\": msg.RevotioData.FlowData.Data.PageData.label\n                  },\n                 \n                ],\n                \"options\": {}\n              },\n              \"gadgetId\": \"d41ac056-e644-1fa6-f839-8f6c3adffd5c\",\n              \"gadgetName\": \"page text\",\n              \"gadgetType\": \"dynamic-text-area\"\n            }\n     \n    \n    ]\n}\nreturn msg;","outputs":1,"noerr":0,"x":2200,"y":440,"wires":[["aeb20705.2b3438"]]},{"id":"1efb8c2.719daf4","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":440,"wires":[["1501a930.833847"]]},{"id":"aeb20705.2b3438","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2795,"y":440,"wires":[]},{"id":"9c1da85e.48053","type":"function","z":"508957a1.dd5398","name":"Get all org's applications ","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar query = {organization_id : new ObjectID(msg.organization_id)}\nmsg.done = false\n // find  \nfindObj = {\n                    query : {\n                            query :query, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n\n                    _.each(res, function(AppItem,AppItemIndex ){\n                        node.send({application_id :AppItem._id })\n                    })\n                   \n                    msg.done = true\n                    node.send(msg) \n            }) \n","outputs":1,"noerr":0,"x":1510,"y":2060,"wires":[["9548cd04.dd18","b964d4be.164298"]]},{"id":"b964d4be.164298","type":"function","z":"508957a1.dd5398","name":"Send response","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nif (msg.done === true ){\n    node.send(msg)\n}\n","outputs":1,"noerr":0,"x":1820,"y":2060,"wires":[["2e59826a.d8a256"]]},{"id":"2e59826a.d8a256","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":2130,"y":2060,"wires":[]},{"id":"7af2cd05.9b0044","type":"debug","z":"508957a1.dd5398","name":"Remove page","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":530,"y":2420,"wires":[]},{"id":"1ea0e68c.3991f9","type":"debug","z":"508957a1.dd5398","name":"Remove app","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":550,"y":2160,"wires":[]},{"id":"92f7b82b.753758","type":"debug","z":"508957a1.dd5398","name":"Remove org","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":550,"y":1980,"wires":[]},{"id":"a48ff563.913528","type":"function","z":"7ba47ea5.e51c4","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nfindObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.organizations = res\n       \n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.FlowData.application_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Items\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Applications\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications_retention\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"Application retention\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"pages\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"Pages\"\n                                }\n                              },\n                               \n                              \n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"pages_retention\",\n                            //       \"localField\": \"application_id\",\n                            //       \"foreignField\": \"pageId\",\n                            //       \"as\": \"Page retention\"\n                            //     }\n                            //   },\n                             \n                                                         \n                            //   {\n                            //     $project: {\n                            //       \"_id\": \"$_id\",\n                            //       \"\"\n                            //     }\n                            //   },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                \n                // res[0].Organizations = msg.organizations\n                \n                msg.payload = res\n                \n                node.send(msg) \n                \n            })  \n\n})\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2070,"y":800,"wires":[["fd91bc89.305068"]]},{"id":"fd91bc89.305068","type":"function","z":"7ba47ea5.e51c4","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\noptions = []\n    \n _.each(msg.organizations , function(orgRecord, index){\n     \n     if (   msg.RevotioData.FlowData.organization_id && \n            String(msg.RevotioData.FlowData.organization_id) === String(orgRecord._id)){\n                selected = true\n            } else {\n                selected = false\n            }\n            options.push(\n                                        {\n                                          \"title\": orgRecord.name,\n                                           type : orgRecord.name,\n                                            key  : orgRecord.name,\n                                            // options:{\n                                                selected:selected,\n                                            action : {\n                                                \"Page\": \"organization overview\",\n                                                // RevotioData: {\n                                                    \"organization_id\": orgRecord._id,\n                                                // },\n                                            },\n                                            \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        }\n                                      )\n                    })\n            \n            data = [\n                 {\n                    \"buttonData\": {\n                        titleDisplayType: \"selected\",\n                      \"title\": \"Organizations\",\n                      \"allowsearch\": true,\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }]\n            \n\n            _.each(msg.payload[0], function(dataArray, key){\n               \n                found = false\n               if (Array.isArray(dataArray) && \n                    (   key === \"Items\" ||\n                        key === \"Applications\" ||\n                        key === \"Application retention\" ||\n                        key === \"Pages\" ||\n                        key === \"Page retention\"\n                    )\n               ){\n                    options = []\n                    selectedObj = {}\n\n                    _.each(dataArray , function(valueObject, index){\n                        \n                       \n                            // set  RevotioData\n                                       if (key === \"Items\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                        item_id: valueObject._id,\n                                                                        Page : \"item overview\"\n                                                     }\n                                            // Page = \n                                           \n                                        } else if (key === \"Applications\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id: valueObject._id,\n                                                                          Page : \"application overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application overview\"\n                                        } else if (key === \"Application retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         application_retention_id: valueObject._id,\n                                                                         Page : \"application retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application retention overview\"\n                                        } else if (key === \"Pages\"){\n                                             RevotioData = {\n                                                                        organization_id : valueObject.organization_id,\n                                                                        application_id : valueObject.application_id,\n                                                                        page_id: valueObject._id,\n                                                                        Page : \"page overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page overview\"\n                                        } else if (key === \"Page retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         page_id : valueObject.page_id,\n                                                                         page_retention_id : valueObject._id,\n                                                                         Page : \"page retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page retention overview\"\n                                        }\n                        \n                        // check if value is selected\n                        valueSelectedState = false\n                        _.each(msg.RevotioData.FlowData, function(FlowDataValue, FlowDataValueKey){\n                            \n                            if (String(FlowDataValue) === String(valueObject._id)){\n                                 valueSelectedState = true\n                                 \n                            } \n                        })\n                        \n                 \n                            options.push( {  \n                                          \"title\": valueObject.name,\n                                           type : valueObject.name,\n                                            key  : valueObject.name,\n                                            selected: valueSelectedState,\n                                            action : RevotioData,\n                                            // {\n                                            //     \"Page\": Page,\n                                            //     RevotioData: RevotioData,\n                                            // },\n                                           \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        } )\n               \n                        })\n                  \n                    Obj =    {\n                            \"buttonData\": {\n                              \"title\": key,\n                              titleDisplayType: \"selected\",\n                              \"allowsearch\": true,\n                              \"design\": {\n                                \"icon\": \"work_outline\"\n                              },\n                              \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                              \"action\": {}\n                            },\n                            \"buttonOptions\": {\n                              \"dataType\": \"multiple\",\n                              \"displayType\": \"text\"\n                            }\n                          }\n                                          \n                            \n                            data.push(Obj)\n               \n            }\n            })\n            \n            msg.payload = {\n                gadgetsList: [{\n                           \"gadgetId\": \"b5f2be26-6564-8f7f-9bb7-56baf4a1da5d\",\n                            \"gadgetName\": \"scopeBreadcrumbs\",\n                            \"gadgetType\": \"revotio-breadcrumbs\",\n                            gadgetData: data\n                          }]}\n\n            \n                    node.send(msg) \n","outputs":1,"noerr":0,"x":2210,"y":800,"wires":[["e7390970.81ca1"]]},{"id":"a88d7865.54fca8","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":800,"wires":[["a48ff563.913528"]]},{"id":"e7390970.81ca1","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2435,"y":800,"wires":[]},{"id":"f9924b8d.31f458","type":"function","z":"e5822137.be45d","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nfindObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.organizations = res\n       \n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Items\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Applications\"\n                                }\n                              },\n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"applications_retention\",\n                            //       \"localField\": \"_id\",\n                            //       \"foreignField\": \"application_id\",\n                            //       \"as\": \"Application retention\"\n                            //     }\n                            //   },\n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"pages\",\n                            //       \"localField\": \"_id\",\n                            //       \"foreignField\": \"application_id\",\n                            //       \"as\": \"Pages\"\n                            //     }\n                            //   },\n                               \n                              \n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"pages_retention\",\n                            //       \"localField\": \"application_id\",\n                            //       \"foreignField\": \"pageId\",\n                            //       \"as\": \"Page retention\"\n                            //     }\n                            //   },\n                             \n                                                         \n                            //   {\n                            //     $project: {\n                            //       \"_id\": \"$_id\",\n                            //       \"\"\n                            //     }\n                            //   },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                \n                // res[0].Organizations = msg.organizations\n                \n                msg.payload = res\n                \n                node.send(msg) \n                \n            })  \n\n})\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2210,"y":1060,"wires":[["f8bcb7c4.537a48"]]},{"id":"f8bcb7c4.537a48","type":"function","z":"e5822137.be45d","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\noptions = []\n    \n _.each(msg.organizations , function(orgRecord, index){\n     \n     if (   msg.RevotioData.FlowData.organization_id && \n            String(msg.RevotioData.FlowData.organization_id) === String(orgRecord._id)){\n                selected = true\n            } else {\n                selected = false\n            }\n            options.push(\n                                        {\n                                          \"title\": orgRecord.name,\n                                           type : orgRecord.name,\n                                            key  : orgRecord.name,\n                                      \n                                                selected:selected,\n                                            action : {\n                                                \"Page\": \"organization overview\",\n                                                // RevotioData: {\n                                                    \"organization_id\": orgRecord._id,\n                                                // },\n                                            },\n                                            \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        }\n                                      )\n                    })\n            \n            data = [\n                 {\n                    \"buttonData\": {\n                      \"title\": \"Organizations\",\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }]\n            \n\n            _.each(msg.payload[0], function(dataArray, key){\n               \n\n               if (Array.isArray(dataArray)){\n                    options = []\n                    selectedObj = {}\n\n                    _.each(dataArray , function(valueObject, index){\n                        \n                            // set  RevotioData\n                                        if (key === \"Items\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                        item_id: valueObject._id,\n                                                                        Page : \"item overview\"\n                                                     }\n                                            // Page = \n                                           \n                                        } else if (key === \"Applications\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id: valueObject._id,\n                                                                          Page : \"application overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application overview\"\n                                        } else if (key === \"Application retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         application_retention_id: valueObject._id,\n                                                                         Page : \"application retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application retention overview\"\n                                        } else if (key === \"Pages\"){\n                                             RevotioData = {\n                                                                        organization_id : valueObject.organization_id,\n                                                                        application_id : valueObject.application_id,\n                                                                        page_id: valueObject._id,\n                                                                        Page : \"page overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page overview\"\n                                        } else if (key === \"Page retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         page_id : valueObject.page_id,\n                                                                         page_retention_id : valueObject._id,\n                                                                         Page : \"page retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page retention overview\"\n                                        }\n                        \n                        // check if value is selected\n                        valueSelectedState = false\n                        _.each(msg.RevotioData.FlowData, function(FlowDataValue, FlowDataValueKey){\n                            \n                            if (String(FlowDataValue) === String(valueObject._id)){\n                                 valueSelectedState = true\n                                 \n                            } \n                        })\n                        \n                        \n                            options.push( {  \n                                          \"title\": valueObject.name,\n                                           type : valueObject.name,\n                                            key  : valueObject.name,\n                                            selected: valueSelectedState,\n                                            action : RevotioData,\n                                            // {\n                                            //     \"Page\": Page,\n                                            //     RevotioData: RevotioData,\n                                            // },\n                                           \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        } )\n                            \n                        })\n                   \n                    \n                    Obj =    {\n                    \"buttonData\": {\n                      \"title\": key,\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }\n                                  \n                    \n                    data.push(Obj)\n               }\n            })\n            \n            msg.payload = {\n                gadgetsList: [{\n                           \"gadgetId\": \"209162b4-1486-c2ed-4efb-aae3c31f64c6\",\n                            \"gadgetName\": \"scopeBreadcrumbs\",\n                            \"gadgetType\": \"revotio-breadcrumbs\",\n                            gadgetData:data\n                          }]}\n\n            \n                    node.send(msg) \n","outputs":1,"noerr":0,"x":2490,"y":1060,"wires":[["ad6f24d.a8f1758","b9579dac.5b5cc8"]]},{"id":"25f6c989.bf5976","type":"link in","z":"e5822137.be45d","name":"** Gadget Name **","links":["ed7fc388.352d28"],"x":1915,"y":1060,"wires":[["f9924b8d.31f458"]]},{"id":"ad6f24d.a8f1758","type":"link out","z":"e5822137.be45d","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","eefe6ecb.492078","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528"],"x":2815,"y":1060,"wires":[]},{"id":"4b1f0ddc.e33ddc","type":"function","z":"7ba47ea5.e51c4","name":"Move application Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"0e0d7202-a8b8-54b8-9c08-e8f14d9a19d7\",\n            \"gadgetName\":\"Move application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-info\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Move application\"},\n               \"gadgetData\":{\n                    action: \"Move\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2000,"y":840,"wires":[["58be8ed6.4537b"]]},{"id":"72d7057f.2a6e6c","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":840,"wires":[["4b1f0ddc.e33ddc"]]},{"id":"58be8ed6.4537b","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2115,"y":840,"wires":[]},{"id":"27e70359.d7df64","type":"function","z":"7ba47ea5.e51c4","name":"Copy application Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"a104b147-ea32-8699-ef7b-9d6138e5a3a0\",\n            \"gadgetName\":\"Copy application\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Copy application\"},\n                \"gadgetData\":{\n                    action: \"Copy\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2000,"y":880,"wires":[["ee5624fc.6018"]]},{"id":"46bd6ffd.eb357","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":880,"wires":[["27e70359.d7df64"]]},{"id":"ee5624fc.6018","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2115,"y":880,"wires":[]},{"id":"e7106bd8.2b33d8","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2680,"y":1360,"wires":[]},{"id":"e54438d0.dcc4e","type":"function","z":"4c633fc.7d56fc","name":"Move page Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"ae07a56b-2478-2fc7-3a90-7703c11f2bc5\",\n            \"gadgetName\":\"Move page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-info\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Move page\"},\n               \"gadgetData\":{\n                    action: \"Move\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":540,"wires":[["fae14b99.ce6138"]]},{"id":"53fb60ff.e709e8","type":"function","z":"4c633fc.7d56fc","name":"Copy page Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"c24354cd-9537-eb88-6fd2-f03b93c83711\",\n            \"gadgetName\":\"Copy page\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Copy page\"},\n                \"gadgetData\":{\n                    action: \"Copy\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":580,"wires":[["fbaaca9.d365f38"]]},{"id":"d3bebacb.fa55e","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1907,"y":528,"wires":[["e54438d0.dcc4e"]]},{"id":"fd605e92.114ca8","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1895,"y":580,"wires":[["53fb60ff.e709e8"]]},{"id":"fae14b99.ce6138","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2635,"y":540,"wires":[]},{"id":"fbaaca9.d365f38","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2655,"y":580,"wires":[]},{"id":"6214428e.c44ecc","type":"link in","z":"671d608a.039ad","name":"OrganizationOverview - INIT FLOW","links":["d609b87f.7e619","6171b7c5.44b0b","b5fb4d7e.2e87f8","e8c04ea2.cc16d8"],"x":975,"y":520,"wires":[["a7f53e12.2b1518"]]},{"id":"6a7c7acc.23a624","type":"function","z":"671d608a.039ad","name":"Route userAction","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nvar EditMoveCopyItem, FormAction, MenuAction,  CreatePageTrigger , RemovePageTrigger, RemovePageActions,Redirect, builderAction, breadcrumbs;\n\n\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\nif (PostData.gadgetType=== \"dynamic-btn\"){\n    \n    // if ( msg.RevotioData.GadgetPost.gadgetName === \"Add organization to project\"){\n    if (PostData.gadgetName === \"Remove item\"){\n        RemovePageTrigger = msg;\n    } else if ( PostData.gadgetName === \"Edit item\"  ||\n                 PostData.gadgetName === \"Move item\" ||\n                  PostData.gadgetName === \"Copy item\"){\n        \n        EditMoveCopyItem = msg;\n    } \n    // else if ( PostData.gadgetName === \"Edit page\"){\n        \n    //     EditPage = msg;\n    // } \n    else if (PostData.gadgetName === \"Cancel remove item\" || PostData.gadgetName === \"Conform remove item\"){\n        RemovePageActions = msg;\n    } \n} else if (PostData.gadgetType=== \"custom-form\"){\n    FormAction = msg;\n} else if (PostData.gadgetType=== \"Menu\"){\n    MenuAction = msg;\n}  else if (PostData.gadgetType=== \"data-table\" ){\n    if (msg.RevotioData.PostData.gadgetName === \"pages DT\"){\n    \n    if (PostData.gadgetData.hasOwnProperty(\"buttonData\") === true){\n        CreatePageTrigger = msg;\n    } else {\n        msg.payload = { \n                Page : \"page overview\",\n                RevotioData: {\n                    page_id :new ObjectID(msg.RevotioData.PostData.gadgetData.data._id),\n                    organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n                    application_id : new ObjectID(msg.RevotioData.FlowData.application_id)\n                }            \n            };\n\n         Redirect = msg;\n    }} \n}else if (PostData.gadgetType === \"page-builder\"){\n    builderAction = msg;\n}  else if ( PostData.gadgetType === \"revotio-breadcrumbs\"){ \n    breadcrumbs = msg;\n}\n\n\n\nreturn [EditMoveCopyItem, FormAction, MenuAction,  CreatePageTrigger , RemovePageTrigger, RemovePageActions,Redirect, builderAction, breadcrumbs]\n","outputs":9,"noerr":0,"x":3410,"y":540,"wires":[["b8cb196c.f7cb2"],["f10d2fe0.fd227"],["85d6894.9bea1f8"],[],["1dcbb53a.9628d3"],["bfe249f6.b13e"],["9f4579f2.e38938"],["c2047b5f.0af2d"],["501c93f3.e7c11c"]],"outputLabels":["EditMoveCopyItem","FormAction","MenuAction","CreateItemTrigger","RemoveItemTrigger","RemoveItemActions","Redirect","builderAction","breadcrumbs"]},{"id":"cd4a9e79.735d8","type":"link out","z":"671d608a.039ad","name":"Trigger gadgets","links":["ddb9541a.1f7da","ce3ca33c.4ef938","dbd474d8.e62b68","45adff02.ef3c5","7a3f690f.580ea8","883c7cee.db8a6","71bd3b2d.f5e74c","ba4ff609.18c878","bb7d751c.1c7ac8","6a0ec519.4e0f34","f32152b8.b14bf8","bbeef07d.cea3f8","e3c93410.cd389","97fe6585.9a1a6","574da7a4.73af18","781c5d61.e90254","7d33e711.fdeee","6672f60f.4026b8","31f060e1.e7e18"],"x":1495,"y":520,"wires":[]},{"id":"86dea388.93111","type":"comment","z":"671d608a.039ad","name":"INIT FLOW","info":"","x":960,"y":480,"wires":[]},{"id":"84f20a12.533738","type":"function","z":"671d608a.039ad","name":"Remove item btn","func":"msg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"7536d205-807d-3372-f9e0-943c242486db\",\n            \"gadgetName\":\"Remove item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Remove item\" },\n                \"gadgetData\":{}\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1990,"y":280,"wires":[["a9b7686c.5b27b8"]]},{"id":"45adff02.ef3c5","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":280,"wires":[["84f20a12.533738"]]},{"id":"b8cb196c.f7cb2","type":"function","z":"671d608a.039ad","name":"Set Form Data","func":" msg.RevotioData.FlowData.Form = {\n        FormType : \"Item\",\n        FormActionType : msg.RevotioData.PostData.gadgetData.action,\n        FormData: msg.RevotioData.FlowData.Data.ItemData,\n        organization_id : msg.RevotioData.FlowData.organization_id,\n        item_id : msg.RevotioData.FlowData.item_id,\n        // page_id : msg.RevotioData.FlowData.Data.PageData._id\n    };\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":240,"wires":[["720c6096.c8671"]]},{"id":"f10d2fe0.fd227","type":"function","z":"671d608a.039ad","name":"Set Form Data","func":"     msg.RevotioData.FlowData.Form.Type = msg.RevotioData.FlowData.Form.FormActionType\n msg.RevotioData.FlowData.Form.FormActionType = \"Post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":3800,"y":280,"wires":[["720c6096.c8671"]]},{"id":"71bd3b2d.f5e74c","type":"link in","z":"671d608a.039ad","name":"Org overview - DT & Tabs & Card","links":["cd4a9e79.735d8","b47978b8.e72108","501d695c.648ae"],"x":1895,"y":360,"wires":[["89a7c6b1.a0c098"]]},{"id":"90f88309.dcce88","type":"function","z":"671d608a.039ad","name":"Edit Item Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"5343ce4a-7abd-6f7f-2b01-93e745d69713\",\n            \"gadgetName\":\"Edit item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-warning\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Edit item\"},\n                 \"gadgetData\":{\n                    action: \"Edit\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":1970,"y":320,"wires":[["b07a9e0a.cf6e88"]]},{"id":"6a0ec519.4e0f34","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":320,"wires":[["90f88309.dcce88"]]},{"id":"77c51b50.16516c","type":"link in","z":"671d608a.039ad","name":"OrganizationOverview - GadgetAction","links":["7a97faf2.da1704","988606f9.ca8a78","9a802166.407c6"],"x":3275,"y":540,"wires":[["6a7c7acc.23a624","7e9e1a71.fb2314"]]},{"id":"1dcbb53a.9628d3","type":"function","z":"671d608a.039ad","name":"Remove item modal","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove item modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'show'}}];\n\n\n    \ngadgetsList.push({            \n       \"gadgetId\": \"db2252fd-9e1a-44ae-b00c-47ac1fdf4c11\",\n            \"gadgetName\":\"Conform remove item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-danger\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Yes\"},//, remove \" + msg.RevotioData.FlowData.Data.OrganizationData.name},\n                \"gadgetData\":{action : \"remove\", _id: msg.RevotioData.FlowData.Data.ItemData._id}\n       \n   })\n\ngadgetsList.push({            \n       \"gadgetId\": \"47975d37-c5e4-bd28-d0b6-e09d2276bb44\",\n            \"gadgetName\":\"Cancel remove item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\", \"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Cancel\"},\n                \"gadgetData\":{action : \"cancel\"}\n       \n   })\n   \n   \ndata =  [{\nlabel: \"You are about to delete \" + msg.RevotioData.FlowData.Data.ItemData.name + \", are you sure?\", \nvalue: \"\",//+ \" \" +  + \" - GO team \" + msg.RevotioData.FlowData.Data.MembershipsData.TeamData[0].name\noptions: {\n'text-align': 'center', // left | center | right\n'font-size': 25,\n'font-weight': 700,\n'font-family': 'roboto',\n'color': '#003580',\n'value-color': '#003580',\n// 'label-margin-bottom': 20,\n}\n}]\n\n\n\ngadgetsList.push({\n\"gadgetId\": \"1062d5ff-d470-c77c-46a8-68fe55cf6153\",\n\"gadgetName\":\"Remove modal conformation text\",\ngadgetType: 'dynamic-text-area',\ngadgetData: {\ndata: data,\noptions: {\n'display': 'flex', // block | inline-block | flex\n'field-display': 'flex', // block | inline-block | flex\n'text-align': 'center', // left | center | right\n'font-size': 12,\n'font-weight': 400,\n'font-family': 'arial',\n'color': '#ccc',\n'label-font-size': 16,\n'label-font-weight': 400,\n'label-font-family': 'arial',\n'label-color': 'red',\n'label-margin-top': 0,\n'label-margin-right': 10,\n'label-margin-bottom': 10,\n'label-margin-left': 0,\n'label-padding-top': 0,\n'label-padding-right': 0,\n'label-padding-bottom': 0,\n'label-padding-left': 0,\n'value-font-size': 14,\n'value-font-weight': 400,\n'value-family': 'verdana',\n'value-color': '#18a689',\n'value-margin-top': 0,\n'value-margin-right': 0,\n'value-margin-bottom': 0,\n'value-margin-left': 0,\n'value-padding-top': 0,\n'value-padding-right': 0,\n'value-padding-bottom': 0,\n'value-padding-left': 0,\n'label-position': 'left', // top | left | right | bottom\n'margin-top': 0,\n'margin-right': 20,\n'margin-bottom': 0,\n'margin-left': 0,\n'number-columns': 1\n}}});\n\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3820,"y":440,"wires":[["bb16e041.11158"]]},{"id":"bfe249f6.b13e","type":"function","z":"671d608a.039ad","name":"Route based on action","func":"var Remove, Cancel;\nvar PostData    = msg.RevotioData.PostData;\nvar Page        = msg.RevotioData.session.Page;\n\n\n\nif (PostData.gadgetData.action === 'remove'){\n    msg.page_id = msg.RevotioData.PostData.gadgetData._id\n    Remove = msg;\n} else if (PostData.gadgetData.action === 'cancel'){\n    Cancel = msg;\n}\nreturn [Remove, Cancel];","outputs":"2","noerr":0,"x":3820,"y":560,"wires":[["84792b74.4be728","d05dab2f.35ca78"],["84792b74.4be728"]],"outputLabels":["Remove","Cancel"]},{"id":"84792b74.4be728","type":"function","z":"671d608a.039ad","name":"Hide Remove project modal","func":"\nvar gadgetsList =[ {\n                  \"gadgetId\":  \"49f523ee-1da7-4c45-c13c-461f42c933c6\",\n            \"gadgetName\": \"Remove organization modal\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":'hide'}}];\n\n\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":4080,"y":580,"wires":[["cb778c04.d159f8"]]},{"id":"cb778c04.d159f8","type":"link out","z":"671d608a.039ad","name":"Push gagdets to frontend","links":["ed29e924.d84018","b84e6833.04603","643ec9be.afe5c8","9fa3437a.32fc28","2ef38e9f.9b1652","ff374233.426928","35994986.0c2f46","714d3f49.3cb3c8","77f50e6a.257ba8","e07ac5c9.329c2","e80a4ee8.bc6cc8","91b0d636.30c0a","8f8af900.2d5568","636af534.63fd94","67fafb7c.d55fdc","ceb7cb22.46d6d","62354ab5.8af784","192a7e40.ba47a2","634060be.86e828","bc005923.240b","1f46b80e.c3e75","e9345d01.5c8fb","8378522a.50d3a","8b0389ee.3adf1","6c564fdb.5ca2f8","19d38825.da0488","50b6680f.064ea","dfd0a08e.b83258","c35742c.3978e4"],"x":4215,"y":580,"wires":[]},{"id":"228109.8c96eef8","type":"function","z":"671d608a.039ad","name":"Redirect user to application overview","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.payload = { \n    Page : \"application overview\",\n    RevotioData: {\n        organization_id:new ObjectID(msg.RevotioData.FlowData.organization_id),\n        application_id:new ObjectID(msg.RevotioData.FlowData.application_id)\n    }            \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":4530,"y":540,"wires":[["2abe208b.f6c7b8"]]},{"id":"3477064d.d97582","type":"comment","z":"671d608a.039ad","name":"***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************","info":"","x":2430,"y":200,"wires":[]},{"id":"b900fdff.5090d","type":"comment","z":"671d608a.039ad","name":"ItemOverview","info":"","x":130,"y":260,"wires":[]},{"id":"ec64a7c9.5748a8","type":"comment","z":"671d608a.039ad","name":"Page overview gadgets","info":"","x":1400,"y":220,"wires":[]},{"id":"32b13a70.01d03e","type":"comment","z":"671d608a.039ad","name":"Item overview gagdet actions","info":"","x":3260,"y":420,"wires":[]},{"id":"a9b7686c.5b27b8","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2135,"y":280,"wires":[]},{"id":"b07a9e0a.cf6e88","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2115,"y":320,"wires":[]},{"id":"2c455936.63030e","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2515,"y":360,"wires":[]},{"id":"7e9e1a71.fb2314","type":"debug","z":"671d608a.039ad","name":"Item overview ACTION","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3420,"y":700,"wires":[]},{"id":"bb16e041.11158","type":"link out","z":"671d608a.039ad","name":"","links":["f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","c35742c.3978e4"],"x":3975,"y":440,"wires":[]},{"id":"72477ff6.e3d548","type":"comment","z":"671d608a.039ad","name":"Push gadget to frontend","info":"","x":4090,"y":460,"wires":[]},{"id":"957e9460.ef4eb","type":"comment","z":"671d608a.039ad","name":"Form","info":"","x":4220,"y":418.3333740234375,"wires":[]},{"id":"287f8385.fd1afc","type":"comment","z":"671d608a.039ad","name":"Redirect","info":"","x":4760,"y":540,"wires":[]},{"id":"c33afc0a.8dd5a8","type":"comment","z":"671d608a.039ad","name":"Delete all organization data","info":"","x":3830,"y":500,"wires":[]},{"id":"58fa6a4f.df91b4","type":"debug","z":"671d608a.039ad","name":"Item OVERVIEW INIT - 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1410,"y":640,"wires":[]},{"id":"a35eb055.3cdfb8","type":"subflow:45759581.11da84","z":"671d608a.039ad","name":"","env":[],"x":1950,"y":400,"wires":[["64676064.d1b3f8"]]},{"id":"64676064.d1b3f8","type":"function","z":"671d608a.039ad","name":"Topbar item container","func":"msg.payload = { gadgetsList : [{            \n                   \"gadgetId\": \"e463f60c-0606-fd3e-692c-471692f539fb\",\n                   \"gadgetName\": \"topbar\",\n                    \"gadgetType\":\"revotio-custom-item-container\",\n                    \"gadgetData\": msg.topbar,\n                    \"gadgetOptions\" :{\n                        // Type: \"multip\" , // \"multiple\"\n                        // SubType :\"horizontal\" , // }\n                                    }\n                    },]}\n                    \n                    \nreturn msg;","outputs":1,"noerr":0,"x":2620,"y":400,"wires":[["ad3d9349.6f4858"]]},{"id":"ddb9541a.1f7da","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":400,"wires":[["a35eb055.3cdfb8"]]},{"id":"ad3d9349.6f4858","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2795,"y":400,"wires":[]},{"id":"c06c9ee0.d7cbc8","type":"link in","z":"671d608a.039ad","name":"Organization overview - design","links":["2e050c0f.a8cfbc","435bb0f8.9671","f61a0250.2c09e"],"x":955,"y":400,"wires":[["bb50d94b.829e68"]]},{"id":"ec86af5b.0529f8","type":"http response","z":"671d608a.039ad","name":"","statusCode":"","headers":{},"x":1650,"y":400,"wires":[]},{"id":"da7381e9.a6de48","type":"function","z":"671d608a.039ad","name":"Organization overview -  design","func":"msg.topbarContanerId = \"887ef027-08c1-143b-b3e8-78667a8b6d83\"\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":400,"wires":[["e8f2829c.fbf25"]]},{"id":"7b67e562.ecf0a4","type":"comment","z":"671d608a.039ad","name":"DESIGN","info":"","x":960,"y":360,"wires":[]},{"id":"a4a71e2f.7ce1e8","type":"http in","z":"671d608a.039ad","name":"ItemOverview","url":"/ItemOverview","method":"post","upload":false,"swaggerDoc":"","x":70,"y":480,"wires":[["5a398fbf.03fe58","b2f771d2.c3ca28"]]},{"id":"f61a0250.2c09e","type":"link out","z":"671d608a.039ad","name":"","links":["c06c9ee0.d7cbc8"],"x":495,"y":440,"wires":[]},{"id":"e8c04ea2.cc16d8","type":"link out","z":"671d608a.039ad","name":"","links":["6214428e.c44ecc"],"x":495,"y":480,"wires":[]},{"id":"9a802166.407c6","type":"link out","z":"671d608a.039ad","name":"","links":["77c51b50.16516c"],"x":495,"y":520,"wires":[]},{"id":"25c6c16.1f52a3e","type":"comment","z":"671d608a.039ad","name":"INIT","info":"","x":570,"y":480,"wires":[]},{"id":"b0efa3a9.ee885","type":"comment","z":"671d608a.039ad","name":"DESIGN","info":"","x":580,"y":440,"wires":[]},{"id":"45091a9b.6a80ec","type":"comment","z":"671d608a.039ad","name":"ROUTE","info":"","x":570,"y":520,"wires":[]},{"id":"bb50d94b.829e68","type":"subflow:39834eee.0dd5a2","z":"671d608a.039ad","name":"","x":1080,"y":400,"wires":[["da7381e9.a6de48"]]},{"id":"2abe208b.f6c7b8","type":"subflow:5e9b9c1d.bbe4a4","z":"671d608a.039ad","name":"","env":[],"x":4920,"y":540,"wires":[]},{"id":"9f4579f2.e38938","type":"subflow:5e9b9c1d.bbe4a4","z":"671d608a.039ad","name":"","env":[],"x":3800,"y":700,"wires":[]},{"id":"5a398fbf.03fe58","type":"debug","z":"671d608a.039ad","name":"ItemOverview","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":360,"y":360,"wires":[]},{"id":"b2f771d2.c3ca28","type":"subflow:a55f7aee.572be","z":"671d608a.039ad","name":"","env":[],"x":330,"y":480,"wires":[["f61a0250.2c09e"],["e8c04ea2.cc16d8"],["9a802166.407c6"]],"outputLabels":["DESIGN ","INIT","ACTION"]},{"id":"78f940b2.9bcb48","type":"http request","z":"671d608a.039ad","name":"","method":"POST","ret":"txt","paytoqs":false,"url":"","tls":"","proxy":"","authType":"basic","x":4230,"y":500,"wires":[["228109.8c96eef8"]]},{"id":"d05dab2f.35ca78","type":"function","z":"671d608a.039ad","name":"Fire remove action","func":"msg.url = global.get(\"DomainProperties.url\") + \"removeItem\"\n\nmsg.payload = {\n    item_id : msg.item_id\n}\nreturn msg;","outputs":1,"noerr":0,"x":4050,"y":500,"wires":[["78f940b2.9bcb48"]]},{"id":"720c6096.c8671","type":"subflow:3170c4ab.fadb9c","z":"671d608a.039ad","name":"","x":4100,"y":240,"wires":[["37d49d80.a2e85a"]]},{"id":"37d49d80.a2e85a","type":"link out","z":"671d608a.039ad","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","c35742c.3978e4"],"x":4175,"y":240,"wires":[]},{"id":"85d6894.9bea1f8","type":"subflow:152aab03.7a806d","z":"671d608a.039ad","name":"","env":[],"x":3780,"y":320,"wires":[["ed1c72a.d27d21"]]},{"id":"ed1c72a.d27d21","type":"link out","z":"671d608a.039ad","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","c35742c.3978e4"],"x":3855,"y":320,"wires":[]},{"id":"a0b31762.6d8298","type":"subflow:152aab03.7a806d","z":"671d608a.039ad","name":"","env":[],"x":2060,"y":240,"wires":[["da192f74.8ca9e8"]]},{"id":"da192f74.8ca9e8","type":"link out","z":"671d608a.039ad","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","c76409e8.f61b3","6a41100.61cc07","c35742c.3978e4"],"x":2235,"y":240,"wires":[]},{"id":"e3c93410.cd389","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1875,"y":240,"wires":[["a0b31762.6d8298"]]},{"id":"e8f2829c.fbf25","type":"subflow:2ef93158.ae5276","z":"671d608a.039ad","name":"","env":[],"x":1520,"y":400,"wires":[["ec86af5b.0529f8"]]},{"id":"c35742c.3978e4","type":"link in","z":"671d608a.039ad","name":"","links":["da192f74.8ca9e8","a9b7686c.5b27b8","b07a9e0a.cf6e88","2c455936.63030e","d0d918ae.b85de","ad3d9349.6f4858","6655cb34.620dc4","37d49d80.a2e85a","ed1c72a.d27d21","3cb14c96.e518a4","64b24870.e0251","bb16e041.11158","cb778c04.d159f8","8d675ebd.cb8468","995c8f2b.9ee64","9f8b54ac.7c6af","b43f729.3ebe19","e2aea4c5.e33a48","3e4fdd79.d77f72","744b7f5.3afff"],"x":735,"y":140,"wires":[["efc79848.873a8"]]},{"id":"ceeb5aa2.e949f8","type":"subflow:e25f5e2d.45871","z":"671d608a.039ad","name":"","env":[],"x":960,"y":140,"wires":[]},{"id":"efc79848.873a8","type":"function","z":"671d608a.039ad","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":20,"wires":[["ceeb5aa2.e949f8"]]},{"id":"afccc732.bc9f7","type":"debug","z":"671d608a.039ad","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":220,"y":160,"wires":[]},{"id":"9c964308.3721b","type":"catch","z":"671d608a.039ad","name":"","scope":null,"x":100,"y":160,"wires":[["afccc732.bc9f7"]]},{"id":"78b631ed.f65b1","type":"function","z":"671d608a.039ad","name":"INIT Item level","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.item_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.ItemData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.ItemData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":1320,"y":520,"wires":[["aa4304c0.cec6a8","cd4a9e79.735d8"]]},{"id":"aa4304c0.cec6a8","type":"debug","z":"671d608a.039ad","name":"Item OVERVIEW INIT - 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1650,"y":600,"wires":[]},{"id":"665e61d.8dc1ba","type":"function","z":"671d608a.039ad","name":"Builder gadget","func":"msg.payload = {\n    gadgetsList:[{\n    \"gadgetId\": \"eb1cee2a-b04f-71e7-3169-78068b3c0a8a\",\n    \"gadgetName\": \"page_builder_edit\",\n    \"gadgetType\": \"page-builder\",\n    \"gadgetOptions\": {\n      \"disabled\": false,\n      \"disabledTabsview\": false,\n       \"contentType\": \"item\"\n    },\n    \"gadgetData\": \n     msg.RevotioData.FlowData.Data.ItemData\n    \n  }]}\nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":360,"wires":[["2c455936.63030e"]]},{"id":"5c7024d1.897a2c","type":"function","z":"671d608a.039ad","name":"Update item object","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar data\nif (Array.isArray(msg.RevotioData.PostData.gadgetData)){\n    data = msg.RevotioData.PostData.gadgetData[0]\n} else {\n      data = msg.RevotioData.PostData.gadgetData\n}\n\ndelete data._id\n\n// update    \n\nobj = {name:msg.RevotioData.PostData.gadgetData.name}\n_.each(msg.RevotioData.PostData.gadgetData, function(value , key){\n    if (typeof value === 'object' && value !== null){\n       obj[key]= value \n    }\n})\n\n    updateObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.item_id)}, \n                            update : { \"$set\" : obj},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n\n// return msg;","outputs":1,"noerr":0,"x":4070,"y":740,"wires":[["501d695c.648ae"]]},{"id":"501d695c.648ae","type":"link out","z":"671d608a.039ad","name":"","links":["71bd3b2d.f5e74c"],"x":4195,"y":740,"wires":[]},{"id":"89a7c6b1.a0c098","type":"function","z":"671d608a.039ad","name":"Get item data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\nfindOneObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.RevotioData.FlowData.item_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.ItemData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.ItemData  = {}\n                }\n                    \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":2040,"y":360,"wires":[["665e61d.8dc1ba"]]},{"id":"aa59a25d.521bf","type":"function","z":"671d608a.039ad","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n\nfindObj = {\n                    query : {\n                            query :{}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findObj, node, function(res){\n                    msg.organizations = res\n       \n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.FlowData.organization_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Items\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"applications\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"Applications\"\n                                }\n                              },\n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"applications_retention\",\n                            //       \"localField\": \"application_id\",\n                            //       \"foreignField\": \"application_id\",\n                            //       \"as\": \"Application retention\"\n                            //     }\n                            //   },\n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"pages\",\n                            //       \"localField\": \"application_id\",\n                            //       \"foreignField\": \"application_id\",\n                            //       \"as\": \"Pages\"\n                            //     }\n                            //   },\n                               \n                              \n                            //   {\n                            //     $lookup: {\n                            //       \"from\": \"pages_retention\",\n                            //       \"localField\": \"_id\",\n                            //       \"foreignField\": \"pageId\",\n                            //       \"as\": \"Page retention\"\n                            //     }\n                            //   },\n                             \n                                                         \n                            //   {\n                            //     $project: {\n                            //       \"_id\": \"$_id\",\n                            //       \"\"\n                            //     }\n                            //   },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                \n                // res[0].Organizations = msg.organizations\n                \n                msg.payload = res\n                \n                node.send(msg) \n                \n            })  \n\n})\n\n\n\n// return msg;","outputs":1,"noerr":0,"x":2290,"y":480,"wires":[["f95b7101.2d3028"]]},{"id":"781c5d61.e90254","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":480,"wires":[["aa59a25d.521bf"]]},{"id":"9f8b54ac.7c6af","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2795,"y":480,"wires":[]},{"id":"f95b7101.2d3028","type":"function","z":"671d608a.039ad","name":"breadcrumb","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\noptions = []\n    \n _.each(msg.organizations , function(orgRecord, index){\n     \n     if (   msg.RevotioData.FlowData.organization_id && \n            String(msg.RevotioData.FlowData.organization_id) === String(orgRecord._id)){\n                selected = true\n            } else {\n                selected = false\n            }\n            options.push(\n                                        {\n                                          \"title\": orgRecord.name,\n                                           type : orgRecord.name,\n                                            key  : orgRecord.name,\n                                            selected:selected,\n                                            action : {\n                                                \"Page\": \"organization overview\",\n                                                // RevotioData: {\n                                                    \"organization_id\": orgRecord._id,\n                                                // },\n                                            },\n                                            \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        }\n                                      )\n                    })\n            \n            data = [\n                 {\n                    \"buttonData\": {\n                      \"title\": \"Organizations\",\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }]\n            \n\n            _.each(msg.payload[0], function(dataArray, key){\n               \n\n               if (Array.isArray(dataArray)){\n                    options = []\n                    selectedObj = {}\n\n                    _.each(dataArray , function(valueObject, index){\n                        \n                            // set  RevotioData\n                                       if (key === \"Items\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                        item_id: valueObject._id,\n                                                                        Page : \"item overview\"\n                                                     }\n                                            // Page = \n                                           \n                                        } else if (key === \"Applications\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id: valueObject._id,\n                                                                          Page : \"application overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application overview\"\n                                        } else if (key === \"Application retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         application_retention_id: valueObject._id,\n                                                                         Page : \"application retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"application retention overview\"\n                                        } else if (key === \"Pages\"){\n                                             RevotioData = {\n                                                                        organization_id : valueObject.organization_id,\n                                                                        application_id : valueObject.application_id,\n                                                                        page_id: valueObject._id,\n                                                                        Page : \"page overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page overview\"\n                                        } else if (key === \"Page retention\"){\n                                             RevotioData = {\n                                                                         organization_id : valueObject.organization_id,\n                                                                         application_id : valueObject.application_id,\n                                                                         page_id : valueObject.page_id,\n                                                                         page_retention_id : valueObject._id,\n                                                                         Page : \"page retention overview\"\n                                                                      \n                                                     }\n                                            // Page = \"page retention overview\"\n                                        }\n                        \n                        // check if value is selected\n                        valueSelectedState = false\n                        _.each(msg.RevotioData.FlowData, function(FlowDataValue, FlowDataValueKey){\n                            \n                            if (String(FlowDataValue) === String(valueObject._id)){\n                                 valueSelectedState = true\n                                 \n                            } \n                        })\n                        \n                        \n                            options.push( {  \n                                          \"title\": valueObject.name,\n                                           type : valueObject.name,\n                                            key  : valueObject.name,\n                                            selected: valueSelectedState,\n                                            action : RevotioData,\n                                            // {\n                                            //     \"Page\": Page,\n                                            //     RevotioData: RevotioData,\n                                            // },\n                                           \n                                          \"design\": {\n                                            \"icon\": \"work_outline\"\n                                          },\n                                         \n                                        } )\n                            \n                        })\n                   \n                    \n                    Obj =    {\n                    \"buttonData\": {\n                      \"title\": key,\n                      \"allowsearch\": true,\n                      titleDisplayType: \"selected\",\n                      \"design\": {\n                        \"icon\": \"work_outline\"\n                      },\n                      \"options\": lodash.orderBy(options,[\"title\"],[\"asc\"]),\n                      \"action\": {}\n                    },\n                    \"buttonOptions\": {\n                      \"dataType\": \"multiple\",\n                      \"displayType\": \"text\"\n                    }\n                  }\n                                  \n                    \n                    data.push(Obj)\n               }\n            })\n            \n            msg.payload = {\n                gadgetsList: [{\n                           \"gadgetId\": \"c8a07fd0-e256-d92a-db8d-15762894921b\",\n                            \"gadgetName\": \"scopeBreadcrumbs\",\n                            \"gadgetType\": \"revotio-breadcrumbs\",\n                            gadgetData: data\n                          }]}\n\n            \n                    node.send(msg) \n","outputs":1,"noerr":0,"x":2570,"y":480,"wires":[["9f8b54ac.7c6af","b1f00390.6182a8"]]},{"id":"b1f00390.6182a8","type":"debug","z":"671d608a.039ad","name":"aaaa","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2820,"y":600,"wires":[]},{"id":"53aee5c4.37b2ec","type":"function","z":"671d608a.039ad","name":"Item text","func":"msg.payload = {\n    gadgetsList :[\n    {\n              \"gadgetData\": {\n                \"data\": [\n                  {\n                    \"label\": \"Item name\",\n                    \"value\": msg.RevotioData.FlowData.Data.ItemData.name\n                  },\n                  {\n                    \"label\": \"Item label\",\n                    \"value\": msg.RevotioData.FlowData.Data.ItemData.label\n                  },\n                 \n                ],\n                \"options\": {}\n              },\n              \"gadgetId\": \"d41ac056-e644-1fa6-f839-8f6c3adffd5c\",\n              \"gadgetName\": \"item text\",\n              \"gadgetType\": \"dynamic-text-area\"\n            }\n     \n    \n    ]\n}\nreturn msg;","outputs":1,"noerr":0,"x":2270,"y":440,"wires":[["b43f729.3ebe19"]]},{"id":"7d33e711.fdeee","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":440,"wires":[["53aee5c4.37b2ec"]]},{"id":"b43f729.3ebe19","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2795,"y":440,"wires":[]},{"id":"9e3c89ab.8c64a8","type":"function","z":"671d608a.039ad","name":"Move item Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"7a746127-b5e5-7c1c-af47-1b4d06c6ef08\",\n            \"gadgetName\":\"Move item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-info\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Move item\"},\n               \"gadgetData\":{\n                    action: \"Move\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2220,"y":520,"wires":[["e2aea4c5.e33a48"]]},{"id":"20c7b98c.eb45b6","type":"function","z":"671d608a.039ad","name":"Copy item","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n       \"gadgetId\": \"e35e9834-1df2-a1e3-5ff7-36f90b70e29a\",\n            \"gadgetName\":\"Copy item\",\n            \"gadgetType\":\"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Copy item\"},\n                \"gadgetData\":{\n                    action: \"Copy\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \nreturn msg;","outputs":1,"noerr":0,"x":2210,"y":580,"wires":[["3e4fdd79.d77f72"]]},{"id":"6672f60f.4026b8","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1907,"y":528,"wires":[["9e3c89ab.8c64a8"]]},{"id":"31f060e1.e7e18","type":"link in","z":"671d608a.039ad","name":"** Gadget Name **","links":["cd4a9e79.735d8"],"x":1895,"y":580,"wires":[["20c7b98c.eb45b6"]]},{"id":"e2aea4c5.e33a48","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2635,"y":540,"wires":[]},{"id":"3e4fdd79.d77f72","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":2655,"y":580,"wires":[]},{"id":"cd452dc.c71ead","type":"function","z":"f8594dbe.be6f8","name":"Item overview","func":"\nvar gadgetsList =[ {\n            \"gadgetId\":  \"84c4f3f6-6173-a020-5c11-05042758ba2f\",\n            \"gadgetName\": \"item overview\",\n            \"gadgetType\": \"dynamic-modal\",\n            \"gadgetData\": {\"modalStatus\":msg.RevotioData.FlowData.Form.ModalAction}}];\n\nif (msg.RevotioData.FlowData.Form.ModalAction === 'show'){\n\ngadgetsList.push({\n            \"gadgetId\":  \"ef01763d-2f59-05d5-1264-be24c24727c2\",\n            \"gadgetName\":  \"item overview\",\n            \"gadgetType\": \"custom-form\",\n            \"gadgetData\": msg.form})\n}\nmsg.payload = {gadgetsList:gadgetsList};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3380,"y":1000,"wires":[["59ca27a4.ef09b8"]]},{"id":"cd880661.70d688","type":"function","z":"9b47808b.46fed8","name":"create/update page","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'userId'  || key === 'organizationId' || key === 'itemId' || key === 'applicationId' || key === 'pageId' || key === 'gadgetId'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n         else if (key === 'content'){\n             msg.postData[key] = JSON.parse(value)\n        } else if (key === 'groupedObject'){\n             msg.postData[key] = JSON.parse(value)\n        }else if (key === 'customItems'){\n             msg.postData[key] = JSON.parse(value)\n        }else if (key === 'menuSettings'){\n             msg.postData[key] = JSON.parse(value)\n        }  else {\n             msg.postData[key] = value\n        }\n    })\n\n\nif (msg.postData.pageId){\n    msg.payload =  [\n    {_id: new ObjectID(msg.postData.pageId)},\n    {\"$set\" : msg.postData\n},\n{upsert:1}]\nmsg.operation = 'updateOne' ;\n    \n} else {\n    msg.payload =  msg.postData\n    msg.operation = 'insertOne' ;\n}\nreturn msg;  ","outputs":1,"noerr":0,"x":770,"y":2460,"wires":[["bdd43047.5e0e2"]]},{"id":"47b1f29f.e2e4fc","type":"function","z":"9b47808b.46fed8","name":"remove page","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'userId'  || key === 'organizationId' || key === 'itemId' || key === 'applicationId' || key === 'pageId' || key === 'gadgetId'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n    \n   \n     \n\nmsg.payload = {_id: new ObjectID(msg.req.params.id)};\nmsg.postData.pageId = new ObjectID(msg.req.params.id)\n\nmsg.operation = 'deleteOne' ;\n\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":2540,"wires":[["bdd43047.5e0e2"]]},{"id":"69cd28c0.34608","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":2210,"y":2400,"wires":[]},{"id":"f0e32a6b.cef238","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\npages = msg.payload;\n\nmsg.payload = {\n    pages : pages,\n    postData : msg.postData,\n  }\n\n\nmsg.payload.state = \"unknown\"\n\nif ( msg.applicationData.hasOwnProperty(\"organizationData\")){\n    if (    msg.applicationData.organizationData.hasOwnProperty(\"subscriptionDate\") === true ){\n        range = moment.range(moment(), moment(msg.applicationData.organizationData.subscriptionDate));\n        if (moment(msg.applicationData.organizationData.subscriptionDate).isBefore(moment())){\n             msg.payload.state   = \"expired\"\n             msg.payload.days    = range.diff('days')  \n        } else {\n             msg.payload.state   = \"valid\"\n             msg.payload.days    = range.diff('days')  \n        }\n    } \n    \n    if (   msg.applicationData.organizationData.hasOwnProperty(\"subscription\") === true ){\n         msg.payload.subscription = msg.applicationData.organizationData.subscription\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":2010,"y":2400,"wires":[["69cd28c0.34608"]]},{"id":"e481f2f2.8a856","type":"http in","z":"9b47808b.46fed8","name":"","url":"/pages","method":"post","upload":false,"swaggerDoc":"","x":210,"y":2460,"wires":[["77e292a5.5b706c"]]},{"id":"bfb28c5e.40b1c","type":"http in","z":"9b47808b.46fed8","name":"","url":"/pages","method":"delete","upload":false,"swaggerDoc":"","x":220,"y":2540,"wires":[["5f8df6be.e0121"]]},{"id":"5fcf90ae.7e5af","type":"http in","z":"9b47808b.46fed8","name":"","url":"/pages","method":"get","upload":false,"swaggerDoc":"","x":170,"y":2320,"wires":[["9461425f.db848","ba42fcbc.ee5fa"]]},{"id":"ac4e8659.50f17","type":"function","z":"9b47808b.46fed8","name":"Get one, many or all pages(s)","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nmsg.postData = msg.payload;\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nvar error, valid , state ; \n\nif (msg.postData){\n    \n    \n    \n    if (msg.postData.page_id){\n        if (typeof msg.postData.page_id.includes(\",\")){\n                // MANY\n                pageArray = []\n                _.each(msg.postData.page_id.split(','), function(page_id, page_idIndex){\n                    if (ObjectID.isValid(page_id)=== true){\n                        pageArray.push(new ObjectID(page_id))\n                    }\n                })\n                match = {_id :{ \"$in\" : pageArray}, application_id : new ObjectID(msg.postData.application_id)};\n                msg.operation = 'find.toArray' ;\n        } else {\n                // ONE\n                match = {_id : new ObjectID(msg.postData.page_id), application_id : new ObjectID(msg.postData.application_id)};\n                msg.operation = 'find.toArray';   \n        }} \n    else if (msg.postData.pageName){\n                // ONE\n                match = {name : msg.postData.pageName, application_id : new ObjectID(msg.postData.application_id)};\n                msg.operation = 'find.toArray';   \n    }\n    else {\n                // ALL\n               match = { application_id : new ObjectID(msg.postData.application_id)};\n                msg.operation = 'find.toArray' ;\n    }\n    state = true;} \nelse {\n        // msg.payload = \"ERROR you **** :-D\"\n        // valid = msg;\n        \n          // ALL\n                match = { application_id : new ObjectID(msg.postData.application_id)};\n                msg.operation = 'find.toArray' ;\n                state = true;\n    }\n\nmsg.payload = \n    [\n        { \n            \"$match\" : match\n        }, \n        { \n            \"$lookup\" : {\n                \"from\" : \"applications\", \n                \"localField\" : \"application_id\", \n                \"foreignField\" : \"_id\", \n                \"as\" : \"applicationObject\"\n            }\n        }, \n        { \n            \"$unwind\" : {\n                \"path\" : \"$applicationObject\", \n                \"includeArrayIndex\" : \"arrayIndex\", \n                \"preserveNullAndEmptyArrays\" : false\n            }\n        }\n    ], \n    { \n        \"allowDiskUse\" : false\n    }\nmsg.operation = 'aggregate.toArray' ;\n\n  if (state === true){\n    valid = msg;\n} else {\n    error = msg;\n}\n\n\nreturn [error, valid];\n\n","outputs":2,"noerr":0,"x":960,"y":2320,"wires":[["3b429c0b.228304"],["34247824.208968"]],"outputLabels":["error","valid"]},{"id":"9461425f.db848","type":"debug","z":"9b47808b.46fed8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":670,"y":2240,"wires":[]},{"id":"f8b5ada7.1dd27","type":"debug","z":"9b47808b.46fed8","name":"POST Pages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":754,"y":2425,"wires":[]},{"id":"32fd487e.c18e68","type":"debug","z":"9b47808b.46fed8","name":"DETELE Pages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":760,"y":2580,"wires":[]},{"id":"d585718.3f1fd1","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":2150,"y":2500,"wires":[]},{"id":"98eee275.722eb8","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"msg.payload = {\n    postData : msg.postData,\n    pageData : msg.pageData,\n    \n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1990,"y":2500,"wires":[["d585718.3f1fd1"]]},{"id":"df8b668d.9059a","type":"comment","z":"9b47808b.46fed8","name":"GET DOCS ","info":"OPTIONS:\n\nONE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID\n    }\n    \nMULTIPE\n\n    BODY: {\n        pageId :[\"\", \"\"] // an array of valif BSON ID's\n    }\n    \nALL\n\n    BODY: {\n        empty // no data at all, this means that all the page elemets in the db are returned\n    }","x":150,"y":2260,"wires":[]},{"id":"a77dae5.c55c0d","type":"comment","z":"9b47808b.46fed8","name":"POST DOCS ","info":"OPTIONS:\n\n\n\n    BODY: {\n       All the data that is to be saved/ updated\n    }\n    \nCREATE\n\n    BODY: {\n        NO pageId key is included in the body\n    }\n    \nUPDATE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID should be included in the body\n    }","x":150,"y":2420,"wires":[]},{"id":"72031562.ffe59c","type":"comment","z":"9b47808b.46fed8","name":"DELETE DOCS ","info":"OPTIONS:\n\nDELETE\n\n    msg.req.params.id = \"\" , // valid BSON ID of the elememt that is to be deleted\n    ","x":160,"y":2500,"wires":[]},{"id":"da5f531c.eaea68","type":"function","z":"9b47808b.46fed8","name":"Loop through pages records","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":1440,"y":2381,"wires":[["1af5f9a2.53dcae"],["ffcb191f.021698"]]},{"id":"1af5f9a2.53dcae","type":"function","z":"9b47808b.46fed8","name":"Loop in","func":"msg.PageLoopData = {\n    payload : msg.payload,\n    iterationInfo: msg.iterationInfo\n}\nreturn msg;","outputs":1,"noerr":0,"x":1220,"y":2320,"wires":[["d016fff6.98f488"]]},{"id":"d016fff6.98f488","type":"function","z":"9b47808b.46fed8","name":"check customItems is present and if there are items","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nvar ItemsPresent, NoItemsPresent;\n\nif (msg.PageLoopData.payload.customItems && msg.PageLoopData.payload.customItems.length > 0){\n    \n    Item_ids = [];\n    \n    _.each(msg.PageLoopData.payload.customItems , function(Item, Index){\n        Item_ids.push(new ObjectID(Item))\n    })\n    \n    msg.payload = {_id : {\"$in\": Item_ids}}\n    \n    msg.operation = \"find.toArray\";\n    \n    ItemsPresent = msg;\n} else {\n    NoItemsPresent = msg;\n}\n\nreturn [ItemsPresent, NoItemsPresent];","outputs":2,"noerr":0,"x":1470,"y":2320,"wires":[["ea8d6b4f.dc62b8"],["84ed54cf.2f0ed8"]],"outputLabels":["ItemsPresent,","NoItemsPresent"]},{"id":"84ed54cf.2f0ed8","type":"function","z":"9b47808b.46fed8","name":"Defign container","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\nif (msg.PageLoopData.payload.applicationObject && Array.isArray(msg.PageLoopData.payload.applicationObject)){\n    data = msg.PageLoopData.payload.applicationObject[0]\n    msg.PageLoopData.payload.applicationObject = data\n}\n\n\nif (        msg.PageLoopData.payload.applicationObject.hasOwnProperty(\"dockerBasedApp\")         && \n            msg.PageLoopData.payload.applicationObject.dockerBasedApp === true                  &&\n            msg.PageLoopData.payload.applicationObject.hasOwnProperty(\"dockerImageRecords\")     && \n            msg.PageLoopData.payload.applicationObject.dockerImageRecords.length > 0          \n            ) {\n                \n                if (msg.PageLoopData.payload.hasOwnProperty(\"dockerContainerID\") ){\n                    if (lodash.findIndex(msg.PageLoopData.payload.applicationObject.dockerImageRecords , {_id : new ObjectID(msg.PageLoopData.payload.dockerContainerID) }) > -1){\n                        msg.PageLoopData.payload.container =  msg.PageLoopData.payload.applicationObject.dockerImageRecords[lodash.findIndex(msg.PageLoopData.payload.applicationObject.dockerImageRecords , {_id : new ObjectID(msg.PageLoopData.payload.dockerContainerID)})].dockerImageName\n                    } else {\n                         msg.PageLoopData.payload.container =  lodash.orderBy(msg.PageLoopData.payload.applicationObject.dockerImageRecords, [\"dockerImagePrio\"],[\"desc\"])[0].dockerImageName\n                    }\n                } else {\n             \n                         msg.PageLoopData.payload.container =  lodash.orderBy(msg.PageLoopData.payload.applicationObject.dockerImageRecords, [\"dockerImagePrio\"],[\"desc\"])[0].dockerImageName\n                 \n                }\n                \n            } else {\n                         msg.PageLoopData.payload.container =  null\n            }\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2100,"y":2320,"wires":[["f96cfd4.7df7b"]]},{"id":"ae0914d1.7c64b8","type":"function","z":"9b47808b.46fed8","name":"Set items","func":"\n\nmsg.PageLoopData.payload.items = msg.payload;\n\nreturn msg;","outputs":1,"noerr":0,"x":1899,"y":2299,"wires":[["84ed54cf.2f0ed8"]]},{"id":"bdd43047.5e0e2","type":"function","z":"9b47808b.46fed8","name":"Get current page obj","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.query = {\n    payload : msg.payload,\n    operation : msg.operation\n}\n\ndelete msg.payload\ndelete msg.operation\n\nmsg.payload = \n    {_id: new ObjectID(msg.postData.pageId)}\n\nmsg.operation = \"findOne\"\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":2500,"wires":[["4156a903.9aaed8"]]},{"id":"a6df2916.9bbff","type":"function","z":"9b47808b.46fed8","name":"preform db action","func":"\nmsg.payload = msg.query.payload\nmsg.operation = msg.query.operation\n\ndelete msg.query\nreturn msg;","outputs":1,"noerr":0,"x":1670,"y":2500,"wires":[["267f139c.12fc94"]]},{"id":"87fbadbc.c5469","type":"function","z":"9b47808b.46fed8","name":"get retention object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n// find\nfindObj = {\n            query : {\n                    query :{_id: new ObjectID(msg.payload.pageRetentionId)}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'pages_retention',\n            operation:'find',\n            }\n                    \nmongodbTools.resolveAsync(findObj, node, function(res){\n    // node.send(res)\n        msg.payload = res[0]\n            // node.send(msg)\n        \n        if (msg.payload.customItems && msg.payload.customItems.length > -1 ){\n            itemIds = []\n             _.each(msg.payload.customItems, function(customItemItem, customItemItemIndex ){\n                 itemIds.push(new ObjectID(customItemItem))\n             })\n             \n             itemFindObj = {\n                        query : {\n                                query :{ _id: { \"$in\": itemIds}}, \n                                },\n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'items',\n                        operation:'find',\n                        }\n             \n                 mongodbTools.resolveAsync(itemFindObj, node, function(itemsRes){\n                    msg.payload.items = itemsRes\n                    node.send(msg) \n                })  \n\n\n\n        } else {\n            // msg.payload = res\n            node.send(msg) \n        }\n       \n        \n \n\n})   \n\n","outputs":1,"noerr":0,"x":930,"y":2260,"wires":[["65ff0f6c.a693a8"]]},{"id":"65ff0f6c.a693a8","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1070,"y":2260,"wires":[]},{"id":"3b429c0b.228304","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1210,"y":2280,"wires":[]},{"id":"9cc7ab14.a6999","type":"function","z":"9b47808b.46fed8","name":"retention switch","func":"var retention, NonRetention\n\n\nif (msg.payload && msg.payload.pageRetentionId){\n         retention = msg\n    } else {\n        NonRetention = msg;\n    }\nreturn [retention, NonRetention];","outputs":2,"noerr":0,"x":720,"y":2300,"wires":[["87fbadbc.c5469"],["ac4e8659.50f17"]],"outputLabels":["retention, ","NonRetention"]},{"id":"58968876.395bc","type":"function","z":"9b47808b.46fed8","name":"prepair retention insert","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nvar create , other;\nif (msg.payload){\nobj = msg.payload;\n\nobj.pageId = new ObjectID(obj._id)\n\ndelete obj._id\n\nobj.changedDate = new Date()\nmsg.payload = obj\n\nmsg.operation = \"insertOne\"\nother = msg\n} else {\n    create = msg;\n}\nreturn [create , other];","outputs":2,"noerr":0,"x":1440,"y":2520,"wires":[["a6df2916.9bbff"],["6f0fbb53.571ea4"]],"outputLabels":["create , ","other"]},{"id":"26f51251.04991e","type":"function","z":"9b47808b.46fed8","name":"Loop OUT","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\n\n\nmsg.payload = msg.PageLoopData.payload\nmsg.iterationInfo = msg.PageLoopData.iterationInfo\n\ndelete msg.PageLoopData\nreturn msg;","outputs":1,"noerr":0,"x":2490,"y":2320,"wires":[["da5f531c.eaea68"]]},{"id":"f96cfd4.7df7b","type":"function","z":"9b47808b.46fed8","name":"SET container subType","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\n\nif (msg.PageLoopData.payload.content.container.length > 0){\n  \n  if (msg.PageLoopData.payload.content.container[0].hasOwnProperty(\"columns\") && msg.PageLoopData.payload.content.container[0].columns.length > 0){\n  \n          if (msg.PageLoopData.payload.content.container[0].columns[0].hasOwnProperty(\"columns\") && msg.PageLoopData.payload.content.container[0].columns[0].columns.length > 0){\n  \n                if (msg.PageLoopData.payload.content.container[0].columns[0].columns[0].hasOwnProperty(\"content\")  && \n                \n                    msg.PageLoopData.payload.content.container[0].columns[0].columns[0].content[0].type === \"revotio-custom-item-container\" && \n                    msg.PageLoopData.payload.content.container[0].columns[0].columns[0].content[0].customContent.length > 0 &&\n                    msg.PageLoopData.payload.content.container[0].columns[0].columns[0].content[0].customContent[0].name === \"Top bar\"\n                    ){\n\n                         msg.PageLoopData.payload.content.container[0].subType = \"navbar\"   \n  \n  \n  \n                }\n\n  \n                }\n\n  \n            }\n\n  \n    }\n\nreturn msg;","outputs":1,"noerr":0,"x":2290,"y":2320,"wires":[["26f51251.04991e"]]},{"id":"ffcb191f.021698","type":"function","z":"9b47808b.46fed8","name":"Get  msg.applicationData ","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.postData.application_id),\n                                //   \"type\": \"project\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"organizations\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"_id\",\n                                  \"as\": \"organizationData\"\n                                }\n                              },\n                              {\n                                $unwind: {\n                                  \"path\": \"$organizationData\",\n                                  \"includeArrayIndex\": \"arrayIndex\",\n                                  \"preserveNullAndEmptyArrays\": false\n                                }\n                              }\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                if (res){\n                      msg.applicationData = res[0]\n                } else {\n                      msg.applicationData = {}\n                }\n                  \n                    node.send(msg) \n            })  \n\n// return msg;","outputs":1,"noerr":0,"x":1730,"y":2400,"wires":[["f0e32a6b.cef238"]]},{"id":"77624bc2.5736bc","type":"catch","z":"9b47808b.46fed8","name":"","scope":null,"x":120,"y":60,"wires":[["3a546566.b93eb2"]]},{"id":"3a546566.b93eb2","type":"debug","z":"9b47808b.46fed8","name":"ERROR","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":238.33332443237305,"y":59.999996185302734,"wires":[]},{"id":"34247824.208968","type":"function","z":"9b47808b.46fed8","name":"Find pages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'aggregate',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1190,"y":2380,"wires":[["da5f531c.eaea68"]]},{"id":"ea8d6b4f.dc62b8","type":"function","z":"9b47808b.46fed8","name":"Find items","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1770,"y":2300,"wires":[["ae0914d1.7c64b8"]]},{"id":"4156a903.9aaed8","type":"function","z":"9b47808b.46fed8","name":"Find page","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                 if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1200,"y":2520,"wires":[["58968876.395bc"]]},{"id":"267f139c.12fc94","type":"function","z":"9b47808b.46fed8","name":"DB pages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                \n                    msg.payload = res\n                  \n                    \n                    node.send(msg) \n            }) \n            \n                    \n                    \n                    ","outputs":1,"noerr":0,"x":1820,"y":2500,"wires":[["98eee275.722eb8"]]},{"id":"6f0fbb53.571ea4","type":"function","z":"9b47808b.46fed8","name":"DB pages_retention","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                           \n                            \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages_retention',\n                    operation:'update',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                \n                    msg.payload = res\n                  \n                    \n                    node.send(msg) \n            }) \n            \n                    \n                    \n                    ","outputs":1,"noerr":0,"x":1680,"y":2540,"wires":[[]]},{"id":"ac2edffc.9c8c28","type":"comment","z":"9b47808b.46fed8","nameinfo":"","x":2450,"y":2020,"wires":[]},{"id":"164dc798.8bbfd8","type":"comment","z":"9b47808b.46fed8","nameinfo":"","x":2450,"y":2720,"wires":[]},{"id":"be39ad61.5b956","type":"function","z":"9b47808b.46fed8","name":"create/update item","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'user_id'  || key === 'organization_id' || key === 'item_id' || key === 'application_id' || key === 'page_id' || key === 'gadget_id'){\n         \n         if (value !== 'undefined'){\n             msg.postData[key] = new ObjectID(value)\n         }\n         \n          \n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else if (key === 'content'){\n             msg.postData[key] = JSON.parse(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\n\nif (msg.postData.itemId){\n    msg.payload =  [\n    {_id: new ObjectID(msg.postData.item_id)},\n    {\"$set\" : msg.postData\n},\n{upsert:1}]\nmsg.operation = 'updateOne' ;\n    \n    \n} else {\n    msg.payload =  msg.postData\n    msg.operation = 'insertOne' ;\n}\n\nreturn msg;  ","outputs":1,"noerr":0,"x":790,"y":1780,"wires":[["155a0581.6f35d2"]]},{"id":"7ec3feab.6dd1","type":"function","z":"9b47808b.46fed8","name":"remove item","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'user_id'  || key === 'organization_id' || key === 'item_id' || key === 'application_id' || key === 'page_id' || key === 'gadget_id'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\nmsg.payload = {_id: new ObjectID(msg.req.params.id)};\nmsg.postData.itemId = new ObjectID(msg.req.params.id)\n\nmsg.operation = 'deleteOne' ;\n\nreturn msg;","outputs":1,"noerr":0,"x":770,"y":1880,"wires":[["155a0581.6f35d2"]]},{"id":"f390e23.9b25ba","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1410,"y":1600,"wires":[]},{"id":"ddc4e54e.dea94","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"items = msg.payload;\n\nmsg.payload = {\n    items : items,\n    postData : msg.postData,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1190,"y":1640,"wires":[["f390e23.9b25ba"]]},{"id":"bebb85ca.ba6968","type":"http in","z":"9b47808b.46fed8","name":"","url":"/items","method":"post","upload":false,"swaggerDoc":"","x":190,"y":1780,"wires":[["334f5c90.57dfbc","7f87e1cf.2ec298"]]},{"id":"38809c18.26e3c4","type":"http in","z":"9b47808b.46fed8","name":"","url":"/items","method":"delete","upload":false,"swaggerDoc":"","x":190,"y":1880,"wires":[["7ec3feab.6dd1","711129ca.a24c5"]]},{"id":"25e002ff.14dc96","type":"http in","z":"9b47808b.46fed8","name":"","url":"/items","method":"get","upload":false,"swaggerDoc":"","x":160,"y":1600,"wires":[["e615cf26.dfddb","27a4b343.a684f4"]]},{"id":"d98c96af.d29d8","type":"function","z":"9b47808b.46fed8","name":"Get one, many or all item(s)","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = msg.payload;\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nvar error, valid\n\nif (msg.postData ){\n\nif (msg.postData.item_id ){ // && msg.postData.organizationId\n    if (typeof msg.postData.item_id === 'object'){\n            // MANY\n            msg.payload = {_id :{ \"$in\" : msg.postData.item_id}}; // , organizationId : new ObjectID(msg.postData.organizationId)\n            msg.operation = 'find.toArray' ;\n    } else {\n            // ONE\n            msg.payload = {_id : new ObjectID(msg.postData.item_id)}; // , organizationId : new ObjectID(msg.postData.organizationId)\n            msg.operation = 'find.toArray';   \n    }\n} else {\n            // ALL\n            msg.payload = {} // { organizationId : new ObjectID(msg.postData.organizationId)};\n            msg.operation = 'find.toArray' ;\n}\n\nvalid = msg;\n} else {\n    // msg.payload = \"ERROR you **** :-D\"\n    // valid = msg;\n    \n      // ALL\n            msg.payload = { }//{ organizationId : new ObjectID(msg.postData.organizationId)};\n            msg.operation = 'find.toArray' ;\n            valid = msg;\n}\n\n\n\nreturn [error, valid];","outputs":2,"noerr":0,"x":760,"y":1600,"wires":[["f390e23.9b25ba"],["3ddc0e7f.4a9c2a"]],"outputLabels":["error","valid"]},{"id":"334f5c90.57dfbc","type":"debug","z":"9b47808b.46fed8","name":"POST ITEMS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":490,"y":1740,"wires":[]},{"id":"711129ca.a24c5","type":"debug","z":"9b47808b.46fed8","name":"DELETE ITEMS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":772,"y":1835,"wires":[]},{"id":"e615cf26.dfddb","type":"debug","z":"9b47808b.46fed8","name":"GET ITEMS  ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":710,"y":1560,"wires":[]},{"id":"8efa6f99.510cb8","type":"comment","z":"9b47808b.46fed8","name":"GET DOCS ","info":"OPTIONS:\n\nONE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID\n    }\n    \nMULTIPE\n\n    BODY: {\n        pageId :[\"\", \"\"] // an array of valif BSON ID's\n    }\n    \nALL\n\n    BODY: {\n        empty // no data at all, this means that all the page elemets in the db are returned\n    }","x":170,"y":1560,"wires":[]},{"id":"b3b0aa75.b61b9","type":"comment","z":"9b47808b.46fed8","name":"POST DOCS ","info":"OPTIONS:\n\n\n\n    BODY: {\n       All the data that is to be saved/ updated\n    }\n    \nCREATE\n\n    BODY: {\n        NO pageId key is included in the body\n    }\n    \nUPDATE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID should be included in the body\n    }","x":150,"y":1740,"wires":[]},{"id":"2dfae28b.b160ee","type":"comment","z":"9b47808b.46fed8","name":"DELETE DOCS ","info":"OPTIONS:\n\nDELETE\n\n    msg.req.params.id = \"\" , // valid BSON ID of the elememt that is to be deleted\n    ","x":180,"y":1840,"wires":[]},{"id":"c23f33de.75026","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"msg.payload = {\n    postData : msg.postData,\n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1950,"y":1800,"wires":[["c8275a3e.67c2f"]]},{"id":"c8275a3e.67c2f","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":2111,"y":1801,"wires":[]},{"id":"155a0581.6f35d2","type":"function","z":"9b47808b.46fed8","name":"Get current item obj","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.query = {\n    payload : msg.payload,\n    operation : msg.operation\n}\n\nfindManyObj = {\n                    query : {\n                            query : {_id: new ObjectID(msg.postData.item_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                   if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                  node.send(msg)\n            }) \n\n","outputs":1,"noerr":0,"x":1020,"y":1800,"wires":[["ee46bd73.5b2a98"]]},{"id":"ee46bd73.5b2a98","type":"function","z":"9b47808b.46fed8","name":"prepair retention insert","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\nvar create , other;\nif (msg.payload){\n    \n\nobj = msg.payload;\n\nobj.itemId = new ObjectID(obj._id)\n\ndelete obj._id\n\nobj.changedDate = new Date()\nmsg.payload = obj\n\nmsg.operation = \"insertOne\"\nother = msg\n} else {\n    create = msg;\n}\nreturn [create , other];","outputs":2,"noerr":0,"x":1260,"y":1800,"wires":[["18dc711e.747ba7"],["df7376d5.d62e68"]],"outputLabels":["create , ","other"]},{"id":"18dc711e.747ba7","type":"function","z":"9b47808b.46fed8","name":"preform db action","func":"\nmsg.payload = msg.query.payload\nmsg.operation = msg.query.operation\n\ndelete msg.query\nreturn msg;","outputs":1,"noerr":0,"x":1630,"y":1800,"wires":[[]]},{"id":"c34536ad.e97b18","type":"function","z":"9b47808b.46fed8","name":"retention switch","func":"var retention, NonRetention\nif (msg.payload.organizationId){\n    msg.payload.organization_id = msg.payload.organizationId\n}\n\nif (msg.payload.applicationId){\n    msg.payload.application_id = msg.payload.applicationId\n}\nif (msg.payload.pageId){\n    msg.payload.page_id = msg.payload.pageId\n}\nif (msg.payload.itemId){\n    msg.payload.item_id = msg.payload.itemId\n}\n\nif (msg.payload && msg.payload.itemRetentionId){\n         retention = msg\n    } else {\n        NonRetention = msg;\n    }\nreturn [retention, NonRetention];","outputs":2,"noerr":0,"x":480,"y":1600,"wires":[["1611afb7.34f5a"],["d98c96af.d29d8"]],"outputLabels":["retention, ","NonRetention"]},{"id":"1611afb7.34f5a","type":"function","z":"9b47808b.46fed8","name":"get retention object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n// find\nfindObj = {\n            query : {\n                    query :{_id: new ObjectID(msg.payload.itemRetentionId)}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'items_retention',\n            operation:'find',\n            }\n                    \nmongodbTools.resolveAsync(findObj, node, function(res){\n    // node.send(res)\n        msg.payload = res[0]\n           \n            node.send(msg) \n\n       \n        \n \n\n})   \n\n","outputs":1,"noerr":0,"x":730,"y":1520,"wires":[["aec21038.565858"]]},{"id":"aec21038.565858","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":870,"y":1520,"wires":[]},{"id":"bf55c36a.3044f","type":"function","z":"9b47808b.46fed8","name":"retention switch","func":"var retention, NonRetention\n\nif (msg.payload && msg.payload.itemRetentionId){\n         retention = msg\n    } else {\n        NonRetention = msg;\n    }\nreturn [retention, NonRetention];","outputs":2,"noerr":0,"x":560,"y":1780,"wires":[[],["be39ad61.5b956"]],"outputLabels":["retention, ","NonRetention"]},{"id":"69d713c1.6d9a7c","type":"function","z":"9b47808b.46fed8","name":"create/update organization","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\n\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'userId'  || key === 'organizationId' || key === 'itemId' || key === 'applicationId' || key === 'pageId' || key === 'gadgetId'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\nif (msg.postData.organizationId){\n \n    _id =  new ObjectID(msg.postData.organizationId)\n \n    \n} else {\n    _id = new ObjectID()\n  \n}\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:_id}, \n                            update : { \"$set\" : msg.postData},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  \n\n\n\n","outputs":1,"noerr":0,"x":900,"y":420,"wires":[["d86b413a.eae6a"]]},{"id":"6e73b618.f6b","type":"function","z":"9b47808b.46fed8","name":"remove organization","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'userId'  || key === 'organizationId' || key === 'itemId' || key === 'applicationId' || key === 'pageId' || key === 'gadgetId'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\n\nmsg.payload = {_id: new ObjectID(msg.req.params.id)};\n\n// remove \n            removeObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.req.params.id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'remove',\n                    }\n\n            mongodbTools.resolveAsync(removeObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })   \n","outputs":1,"noerr":0,"x":900,"y":500,"wires":[["d86b413a.eae6a"]]},{"id":"e29782c1.506b7","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1570,"y":300,"wires":[]},{"id":"1cdb849b.bf4923","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"organizations = msg.payload;\n\nmsg.payload = {\n    organizations : organizations,\n    postData : msg.postData,\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1330,"y":340,"wires":[["e29782c1.506b7"]]},{"id":"9967a5d9.5d7b18","type":"http in","z":"9b47808b.46fed8","name":"","url":"/organizations","method":"post","upload":false,"swaggerDoc":"","x":190,"y":400,"wires":[["dd8bf20f.6e74b8"]]},{"id":"b87ce672.b6b91","type":"http in","z":"9b47808b.46fed8","name":"","url":"/organizations","method":"delete","upload":false,"swaggerDoc":"","x":200,"y":480,"wires":[["3cbe1f67.e3e358"]]},{"id":"c27d9496.060bf","type":"http in","z":"9b47808b.46fed8","name":"","url":"/organizations","method":"get","upload":false,"swaggerDoc":"","x":130,"y":300,"wires":[["9b89dd75.a425c8"]]},{"id":"d110dc6c.172008","type":"function","z":"9b47808b.46fed8","name":"Get one, many or all organization(s)","func":"\n\n// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nif (msg.payload.organizationId){\n    msg.payload.organization_id = msg.payload.organizationId\n}\n\nif (msg.payload.applicationId){\n    msg.payload.application_id = msg.payload.applicationId\n}\nif (msg.payload.pageId){\n    msg.payload.page_id = msg.payload.pageId\n}\nif (msg.payload.itemId){\n    msg.payload.item_id = msg.payload.itemId\n}\n\nmsg.postData = msg.payload;\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nvar error, valid\n\nif (msg.postData ){\n\nif (msg.postData.organization_id){\n    if (typeof msg.postData.organization_id === 'object'){\n            // MANY\n            msg.payload = {_id :{ \"$in\" : msg.postData.organization_id}, };\n            msg.operation = 'find.toArray' ;\n    } else {\n            // ONE\n            msg.payload = {_id : new ObjectID(msg.postData.organization_id)};\n            msg.operation = 'findOne' ;   \n    }\n} else {\n            // ALL\n            msg.payload = {};\n            msg.operation = 'find.toArray' ;\n}\n\nvalid = msg;\n} else {\n    // msg.payload = \"ERROR you **** :-D\"\n    // valid = msg;\n    \n      // ALL\n            msg.payload = {};\n            msg.operation = 'find.toArray' ;\n            valid = msg;\n}\n\n\n\nreturn [error, valid];","outputs":2,"noerr":0,"x":920,"y":320,"wires":[["e29782c1.506b7"],["ca5e2fb0.378e6"]],"outputLabels":["error","valid"]},{"id":"e495fb0a.f3a848","type":"comment","z":"9b47808b.46fed8","name":"GET DOCS ","info":"OPTIONS:\n\nONE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID\n    }\n    \nMULTIPE\n\n    BODY: {\n        pageId :[\"\", \"\"] // an array of valif BSON ID's\n    }\n    \nALL\n\n    BODY: {\n        empty // no data at all, this means that all the page elemets in the db are returned\n    }","x":130,"y":260,"wires":[]},{"id":"dd08986f.6f8a2","type":"comment","z":"9b47808b.46fed8","name":"POST DOCS ","info":"OPTIONS:\n\n\n\n    BODY: {\n       All the data that is to be saved/ updated\n    }\n    \nCREATE\n\n    BODY: {\n        NO pageId key is included in the body\n    }\n    \nUPDATE\n\n    BODY: {\n        pageId : \"\" // valid BSON ID should be included in the body\n    }","x":130,"y":360,"wires":[]},{"id":"7cce87d9.b42d7","type":"comment","z":"9b47808b.46fed8","name":"DELETE DOCS ","info":"OPTIONS:\n\nDELETE\n\n    msg.req.params.id = \"\" , // valid BSON ID of the elememt that is to be deleted\n    ","x":140,"y":440,"wires":[]},{"id":"d86b413a.eae6a","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"msg.payload = {\n    postData : msg.postData,}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1310,"y":460,"wires":[["89c5821b.62924"]]},{"id":"89c5821b.62924","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1470,"y":460,"wires":[]},{"id":"a815bea6.9c495","type":"comment","z":"9b47808b.46fed8","nameinfo":"","x":2450,"y":180,"wires":[]},{"id":"1bdc6baf.f9df64","type":"function","z":"9b47808b.46fed8","name":"create/update  application","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'user_id'  || key === 'organization_id' || key === 'item_id' || key === 'application_id' || key === 'page_id' || key === 'gadget_id'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\n\n\n\nif (msg.postData.applicationId){\n    msg.payload =  [\n    {_id: new ObjectID(msg.postData.application_id)},\n    {\"$set\" : msg.postData\n},\n{upsert:1}]\n\nmsg.appData = msg.payload\n\nmsg.operation = 'updateOne' ;\n    \n    \n} else {\n    msg.payload =  msg.postData\n    msg.operation = 'insertOne' ;\n}\n\nmsg.appData = msg.payload\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":1020,"wires":[["6a02c17e.15cee8"]]},{"id":"94d01d3.d036ce","type":"function","z":"9b47808b.46fed8","name":"remove application","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.postData = {};\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type'\n};\n\n// format data\n    _.each(msg.payload, function(value, key){\n        newValue = \"\"\n        \n        if (key === 'userId'  || key === 'organizationId' || key === 'itemId' || key === 'applicationId' || key === 'pageId' || key === 'gadgetId'){\n          msg.postData[key] = new ObjectID(value)\n        } \n        else if (key.includes(\"date\") || key.includes(\"Date\") || key.includes(\"timestamp\")   ){\n             msg.postData[key] = new Date(value)\n        }\n        else {\n             msg.postData[key] = value\n        }\n    })\n\n\nmsg.payload = {_id: new ObjectID(msg.req.params.id)};\n\nmsg.postData =  msg.payload \nmsg.postData.applicationId = new ObjectID(msg.req.params.id)\nmsg.appData = msg.payload\n\nmsg.operation = 'deleteOne' ;\n\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":1080,"wires":[["6a02c17e.15cee8"]]},{"id":"35743a21.6141ae","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1650,"y":920,"wires":[]},{"id":"514fc1ab.ecd448","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"applications = msg.payload;\n\nmsg.payload = {\n    applications : applications,\n    postData : msg.postData,\n    appData : msg.appData,\n    \n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS', \n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n    \"Access-Control-Max-Age\": 86400\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1450,"y":960,"wires":[["35743a21.6141ae"]]},{"id":"659dbe63.4efa08","type":"http in","z":"9b47808b.46fed8","name":"","url":"/applications","method":"post","upload":false,"swaggerDoc":"","x":170,"y":1000,"wires":[["2f74ed0b.882062","c8086766.359238"]]},{"id":"eb17d800.03f9c","type":"http in","z":"9b47808b.46fed8","name":"","url":"/applications/:id","method":"delete","upload":false,"swaggerDoc":"","x":200,"y":1060,"wires":[["70246a87.6b080c"]]},{"id":"77868bb1.4621d4","type":"http in","z":"9b47808b.46fed8","name":"","url":"/applications","method":"get","upload":false,"swaggerDoc":"","x":190,"y":880,"wires":[["47aa95e2.9412cc"]]},{"id":"8bffc9f7.3d5038","type":"debug","z":"9b47808b.46fed8","name":"GET APPS ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":530,"y":740,"wires":[]},{"id":"2f74ed0b.882062","type":"debug","z":"9b47808b.46fed8","name":"POST APP","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":810,"y":980,"wires":[]},{"id":"a5d378c2.ceb7f8","type":"function","z":"9b47808b.46fed8","name":"Get one, many or all app(s)","func":"\n\n// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\n\n\nmsg.postData = msg.payload;\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n\nvar error, valid\n\nif (msg.postData){\n\nif (msg.postData.application_id){\n    if (typeof msg.postData.application_id === 'object'){\n            // MANY\n            msg.payload = {_id :{ \"$in\" : msg.postData.application_id}};\n            msg.operation = 'find.toArray' ;\n    } else {\n            // ONE\n            msg.payload = {_id : new ObjectID(msg.postData.application_id)};\n            msg.operation = 'findOne' ;   \n    }\n} else {\n            // ALL\n            msg.payload = {};\n            msg.operation = 'find.toArray' ;\n}\n\nvalid = msg;\n} else {\n    // msg.payload = \"ERROR you **** :-D\"\n    // valid = msg;\n    \n      // ALL\n            msg.payload = {};\n            msg.operation = 'find.toArray' ;\n            valid = msg;\n}\n\n\n\nreturn [error, valid];","outputs":2,"noerr":0,"x":1040,"y":920,"wires":[["35743a21.6141ae"],["e3ce7743.efa4c8"]],"outputLabels":["error","valid"]},{"id":"225384b6.b6f384","type":"debug","z":"9b47808b.46fed8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1650,"y":960,"wires":[]},{"id":"dcb59141.a4aac8","type":"debug","z":"9b47808b.46fed8","name":"DELETE","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":800,"y":1160,"wires":[]},{"id":"768b491a.6e8198","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1790,"y":1040,"wires":[]},{"id":"fca90939.398c58","type":"debug","z":"9b47808b.46fed8","name":"DELETE - 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1090,"y":1120,"wires":[]},{"id":"d84be1b1.f8567","type":"function","z":"9b47808b.46fed8","name":"Create response payload","func":"\nmsg.payload = {\n    postData : msg.postData,\n    appData : msg.appData,\n}\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS', \n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n    \"Access-Control-Max-Age\": 86400\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1630,"y":1040,"wires":[["768b491a.6e8198"]]},{"id":"7f0421b4.d868e8","type":"comment","z":"9b47808b.46fed8","name":"GET DOCS ","info":"OPTIONS:\n\nONE\n\n    BODY: {\n        applicationId : \"\" // valid BSON ID\n    }\n    \nMULTIPE\n\n    BODY: {\n        applicationId :[\"\", \"\"] // an array of valif BSON ID's\n    }\n    \nALL\n\n    BODY: {\n        empty // no data at all, this means that all the elemets in the db are returned\n    }","x":130,"y":840,"wires":[]},{"id":"d11efd7b.5f5c4","type":"comment","z":"9b47808b.46fed8","name":"POST DOCS ","info":"OPTIONS:\n\n\n\n    BODY: {\n       All the data that is to be saved/ updated\n    }\n    \nCREATE\n\n    BODY: {\n        NO applicationId key is included in the body\n    }\n    \nUPDATE\n\n    BODY: {\n        applicationId : \"\" // valid BSON ID should be included in the body\n    }","x":150,"y":960,"wires":[]},{"id":"f833d74a.a470a","type":"comment","z":"9b47808b.46fed8","name":"DELETE DOCS ","info":"OPTIONS:\n\nDELETE\n\n    msg.req.params.id = \"\" , // valid BSON ID of the elememt that is to be deleted\n    ","x":140,"y":1020,"wires":[]},{"id":"5dd15281.68e48c","type":"debug","z":"9b47808b.46fed8","name":"GET APPS 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1314,"y":1014,"wires":[]},{"id":"8818240d.50901","type":"debug","z":"9b47808b.46fed8","name":"GET APPS 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1325,"y":861,"wires":[]},{"id":"6a02c17e.15cee8","type":"function","z":"9b47808b.46fed8","name":"Get current App obj","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.query = {\n    payload : msg.payload,\n    operation : msg.operation\n}\n\n// findOne \nfindOneObj = {\n                    query : {\n                            query : {_id: new ObjectID(msg.postData.applicationId)}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    msg.payload = res[0]\n                } else {\n                    msg.payload = {}\n                }\n                    \n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":1050,"y":1060,"wires":[["cf363118.2342b8"]]},{"id":"6c15f7.82ed6a08","type":"inject","z":"9b47808b.46fed8","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":980,"y":740,"wires":[["a1d9d9be.bf123"]]},{"id":"a1d9d9be.bf123","type":"function","z":"9b47808b.46fed8","name":"update all items","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nmsg.payload = [{}, {\"$set\": {organizationId: new ObjectID(\"5bcd9bf3ede2f43ded73dd62\")}}, {upsert: true}]\n\nmsg.operation = \"updateMany\"\nreturn msg;","outputs":1,"noerr":0,"x":1140,"y":740,"wires":[[]]},{"id":"65793bac.ae55ac","type":"function","z":"9b47808b.46fed8","name":"retention switch","func":"var retention, NonRetention\n\nif (msg.payload.organizationId){\n    msg.payload.organization_id = msg.payload.organizationId\n}\n\nif (msg.payload.applicationId){\n    msg.payload.application_id = msg.payload.applicationId\n}\nif (msg.payload.pageId){\n    msg.payload.page_id = msg.payload.pageId\n}\nif (msg.payload.itemId){\n    msg.payload.item_id = msg.payload.itemId\n}\n\nif (msg.payload && msg.payload.applicationRetentionId){\n         retention = msg\n    } else {\n        NonRetention = msg;\n    }\nreturn [retention, NonRetention];","outputs":2,"noerr":0,"x":780,"y":900,"wires":[["e2ec5344.3789e"],["a5d378c2.ceb7f8"]],"outputLabels":["retention, ","NonRetention"]},{"id":"e2ec5344.3789e","type":"function","z":"9b47808b.46fed8","name":"get retention object","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\n\n// find\nfindObj = {\n            query : {\n                    query :{_id: new ObjectID(msg.payload.applicationRetentionId)}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'applications_retention',\n            operation:'find',\n            }\n                    \nmongodbTools.resolveAsync(findObj, node, function(res){\n\n        msg.payload = res[0]\n\n            node.send(msg) \n\n})   \n\n","outputs":1,"noerr":0,"x":1010,"y":860,"wires":[["965fee75.fa54d"]]},{"id":"965fee75.fa54d","type":"http response","z":"9b47808b.46fed8","name":"","statusCode":"","headers":{},"x":1150,"y":860,"wires":[]},{"id":"cf363118.2342b8","type":"function","z":"9b47808b.46fed8","name":"prepair retention insert","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nvar create , other;\n\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID()}, \n                            update : { \"$set\" : msg.payload },\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    \n            }) \n            \n            \nif (msg.payload){\nobj = msg.payload;\n\nobj.applicationId = new ObjectID(obj._id)\n\ndelete obj._id\n\nobj.changedDate = new Date()\nmsg.payload = obj\n\nmsg.operation = \"insertOne\"\nother = msg\n} else {\n    create = msg;\n}\nreturn [create , other];","outputs":2,"noerr":0,"x":1280,"y":1060,"wires":[["d84be1b1.f8567"],["ef52a464.71e99"]],"outputLabels":["create , ","other"]},{"id":"875be16.ae0202","type":"comment","z":"9b47808b.46fed8","nameinfo":"","x":2430,"y":620,"wires":[]},{"id":"f2d316a3.27ab18","type":"comment","z":"9b47808b.46fed8","nameinfo":"","x":2430,"y":1420,"wires":[]},{"id":"ca5e2fb0.378e6","type":"function","z":"9b47808b.46fed8","name":"Find organizations","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1170,"y":340,"wires":[["1cdb849b.bf4923"]]},{"id":"e3ce7743.efa4c8","type":"function","z":"9b47808b.46fed8","name":"Find applications","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":1230,"y":960,"wires":[["514fc1ab.ecd448"]]},{"id":"ef52a464.71e99","type":"function","z":"9b47808b.46fed8","name":"Insert applications_retention","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID()}, \n                            update : { \"$set\" :msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications_retention',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":1540,"y":1120,"wires":[["d84be1b1.f8567"]]},{"id":"3ddc0e7f.4a9c2a","type":"function","z":"9b47808b.46fed8","name":"Find items","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :msg.payload, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            }) ","outputs":1,"noerr":0,"x":930,"y":1640,"wires":[["ddc4e54e.dea94"]]},{"id":"df7376d5.d62e68","type":"function","z":"9b47808b.46fed8","name":"Insert items_retention","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID()}, \n                            update : { \"$set\" :msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items_retention',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    msg.payload = res\n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":1360,"y":1860,"wires":[["18dc711e.747ba7"]]},{"id":"fce9192.2698268","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":1780,"wires":[["57efc287.c61644"]]},{"id":"a0a8acb1.7ecfd8","type":"function","z":"51f1d48a.bfebf4","name":"Get all original data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \n\n\n      // aggregate\n\n            aggregateObj = {\n                    query : { query : [         { \n                                \"$match\" : { _id : new ObjectID(msg.data.original.application_id)\n                    \n                                }\n                            }, \n                            { \n                                \"$lookup\" : { \n                                    \"from\" : \"pages\", \n                                    \"localField\" : \"_id\", \n                                    \"foreignField\" : \"applicationId\", \n                                    \"as\" : \"pages\"\n                                }\n                            }, \n                            // {\n                            //     \"$unwind\":{\n                            //         path: \"$pages\",\n                            //         \"includeArrayIndex\": \"arrayIndex\",\n                            //         \"preserveNullAndEmptyArrays\": false\n                            //     }\n                            // },\n                            //  {\n                            //     \"$unwind\":{\n                            //         path: \"$pages.customItems\",\n                            //         \"includeArrayIndex\": \"arrayIndex\",\n                            //         \"preserveNullAndEmptyArrays\": true\n                            //     }\n                            // },\n                            // { \n                            //     \"$lookup\" : { \n                            //         \"from\" : \"items\", \n                            //         \"localField\" : \"_id\", \n                            //         \"foreignField\" : \"pages.customItems\", \n                            //         \"as\" : \"pages.items\"\n                            //     }\n                            // },\n                            //   {\n                            //     \"$unwind\":{\n                            //         path: \"$pages.items\",\n                            //         \"includeArrayIndex\": \"arrayIndex\",\n                            //         \"preserveNullAndEmptyArrays\": true\n                            //     }\n                            // },\n                            // {\n                            //     \"$group\":{\n                            //         _id: \"$pages.customItems\",\n                                    \n                            //     }\n                            // }\n                         \n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:\"page-builder\",\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.applications = res[0]\n                    node.send(msg) \n            }) \n                   \n   \n            ","outputs":1,"noerr":0,"x":530,"y":1780,"wires":[["e2674e60.c6ec","cef778d.0484e88"]]},{"id":"62070dfc.c0020c","type":"comment","z":"51f1d48a.bfebf4","name":"Copy app to new env","info":"","x":160,"y":1720,"wires":[]},{"id":"57efc287.c61644","type":"function","z":"51f1d48a.bfebf4","name":"Set msg.data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.data ={\n    original:{\n        application_id: new ObjectID(\"5bacdd9fb9bf1c120bef1088\")\n    },\n    new:{\n        application_id : new ObjectID(),\n        organization_id : new ObjectID(\"5e4bda5a47180dec3821e92f\")\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":1780,"wires":[["a0a8acb1.7ecfd8"]]},{"id":"e2674e60.c6ec","type":"debug","z":"51f1d48a.bfebf4","name":"app data","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":800,"y":1660,"wires":[]},{"id":"cef778d.0484e88","type":"function","z":"51f1d48a.bfebf4","name":"Get all original data 2/2","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar fs = global.get('fsextra');\n      \nitems = [];\nmsg.pages = [];\n\nmsg.applications.originalOrganizationId = new ObjectID(msg.applications.organizationId)\nmsg.applications.originalApplicationId = new ObjectID(msg.applications._id)\n\ndelete msg.applications.originalOrganizationId\ndelete msg.applications.originalApplicationId\n\nmsg.applications._id = new ObjectID(msg.data.new.application_id)\nmsg.applications.organization_id = new ObjectID(msg.data.new.organization_id)\n\n\n\n_.each(msg.applications.pages, function(page, index){\n    if (page.customItems){\n        _.each(page.customItems, function(customItemValue, customItemIndex){\n           items.push(new ObjectID(customItemValue)) \n        })\n    }\n    \n    page.originalPageId = new ObjectID(page._id)\n    page.originalApplicationId = new ObjectID(page.applicationId)\n    page.originalOrganizationId = new ObjectID(page.organizationId)\n    \n    delete page._id\n    delete page.applicationId\n    delete page.organizationId\n    \n    page.application_id = new ObjectID(msg.data.new.application_id)\n    page.organization_id = new ObjectID(msg.data.new.organization_id)\n    \n    msg.pages.push(page)\n})\n\ndelete msg.applications.pages\n\n     // findMany\n\nfindManyObj = {\n                    query : {\n                            query :{_id:{\"$in\": items}}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:\"page-builder\",\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                _.each(res, function(item, index){\n\n                    item.originalItemId = new ObjectID(item._id)\n                  \n                    item.originalOrganizationId = new ObjectID(item.organizationId)\n                    \n                    delete item._id\n                  \n                    delete item.organizationId\n                    item.organization_id = new ObjectID(msg.data.new.organization_id)\n                })\n\n                    msg.items = res\n                    node.send(msg) \n            }) \n\n   \n            ","outputs":1,"noerr":0,"x":770,"y":1780,"wires":[["9ef4c355.ac4a1","aa74945b.0b66f8"]]},{"id":"9ef4c355.ac4a1","type":"debug","z":"51f1d48a.bfebf4","name":"app data 2/2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":950,"y":1940,"wires":[]},{"id":"aa74945b.0b66f8","type":"function","z":"51f1d48a.bfebf4","name":"Insert data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// add items\n\n_.each(msg.items, function(itemRecord,itemRecordIndex ){\n   // update    \n\n    updateObj = {\n                    query : {\n                            query :{\n                                        timestamp:itemRecord.timestamp,\n                                        originalItemId: new ObjectID(itemRecord.originalItemId)\n                                        }, \n                            update : { \"$set\" : itemRecord},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n            })  \n})\n\nnode.send({Info : \"items done\"})\n\n// add items\n\n_.each(msg.pages, function(pageRecord,pageRecordIndex ){\n   // update    \n\n    updateObj = {\n                    query : {\n                            query :{\n                                        timestamp:pageRecord.timestamp,\n                                        originalPageId: new ObjectID(pageRecord.originalPageId)\n                                        }, \n                            update : { \"$set\" : pageRecord},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n            })  \n})\n\nnode.send({Info : \"pages done\"})\n\n\n    updateObj = {\n                    query : {\n                            query :{\n                                        timestamp:msg.applications.timestamp,\n                                        originalApplicationId: new ObjectID(msg.applications.originalApplicationId)\n                                        }, \n                            update : { \"$set\" : msg.applications},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                   \n            })  \n\n\nnode.send({Info : \"app done\"})\n","outputs":1,"noerr":0,"x":1030,"y":1740,"wires":[["1b3e5d2e.c7355b"]]},{"id":"1b3e5d2e.c7355b","type":"debug","z":"51f1d48a.bfebf4","name":"app data 2/2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1082,"y":1645,"wires":[]},{"id":"820eb5ef.100fd8","type":"function","z":"73dff3ad.4e7f84","name":"convert IDs","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.payload.organizationId){\n    msg.payload.organization_id =new ObjectID(msg.payload.organizationId)\n}\n\nif (msg.payload.applicationId){\n    msg.payload.application_id = new ObjectID(msg.payload.applicationId)\n}\nif (msg.payload.pageId){\n    msg.payload.page_id = new ObjectID(msg.payload.pageId)\n}\nif (msg.payload.itemId){\n    msg.payload.item_id = new ObjectID(msg.payload.itemId)\n}\nif (msg.payload.userId){\n    msg.payload.user_id = new ObjectID(msg.payload.userId)\n}\nreturn msg;","outputs":1,"noerr":0,"x":190,"y":80,"wires":[[]]},{"id":"9b89dd75.a425c8","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":630,"y":300,"wires":[["d110dc6c.172008"]]},{"id":"dd8bf20f.6e74b8","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":590,"y":420,"wires":[["69d713c1.6d9a7c"]]},{"id":"3cbe1f67.e3e358","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":590,"y":500,"wires":[["6e73b618.f6b"]]},{"id":"47aa95e2.9412cc","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":510,"y":880,"wires":[["65793bac.ae55ac"]]},{"id":"c8086766.359238","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":550,"y":1020,"wires":[["1bdc6baf.f9df64"]]},{"id":"70246a87.6b080c","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":490,"y":1080,"wires":[["94d01d3.d036ce"]]},{"id":"27a4b343.a684f4","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":290,"y":1620,"wires":[["c34536ad.e97b18"]]},{"id":"7f87e1cf.2ec298","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":350,"y":1800,"wires":[["bf55c36a.3044f"]]},{"id":"ed98aef9.43b198","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":470,"y":1880,"wires":[[]]},{"id":"ba42fcbc.ee5fa","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":490,"y":2300,"wires":[["9cc7ab14.a6999","e4edfb03.15b308"]]},{"id":"77e292a5.5b706c","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":530,"y":2440,"wires":[["f8b5ada7.1dd27","cd880661.70d688"]]},{"id":"5f8df6be.e0121","type":"subflow:73dff3ad.4e7f84","z":"9b47808b.46fed8","name":"","env":[],"x":510,"y":2540,"wires":[["47b1f29f.e2e4fc"]]},{"id":"e4edfb03.15b308","type":"debug","z":"9b47808b.46fed8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":710,"y":2340,"wires":[]},{"id":"95bc7a5d.0aea88","type":"debug","z":"4c633fc.7d56fc","name":"Builder action","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3780,"y":600,"wires":[]},{"id":"3485373f.a42a18","type":"function","z":"4c633fc.7d56fc","name":"Route actionType ","func":"var update, itemsList;\n\nif (msg.RevotioData.PostData.actionType === \"update\"){\n    update = msg;\n} else if (msg.RevotioData.PostData.actionType === \"itemsList\"){\n    itemsList = msg;\n}\nreturn [ update, itemsList];","outputs":2,"noerr":0,"x":3750,"y":760,"wires":[["b27b016a.614bb"],["d5fde114.e477c"]],"outputLabels":[" update, ","itemsList"]},{"id":"d5fde114.e477c","type":"function","z":"4c633fc.7d56fc","name":"get items","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :{organization_id: new ObjectID(msg.RevotioData.FlowData.organization_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = {\n                                    gadgetsList:[{\n                                    \"gadgetId\": \"eb1cee2a-b04f-71e7-3169-78068b3c0a8a\",\n                                    \"gadgetName\": \"page_builder_edit\",\n                                    \"gadgetType\": \"page-builder\",\n                                    \"gadgetOptions\": {\n                                      \"disabled\": false,\n                                      \"disabledTabsview\": false,\n                                      \"contentType\": \"itemsList\"\n                                    },\n                                    \"gadgetData\": res\n                                    \n                                  }]}\n                    node.send(msg) \n            }) \n\n\n\n  \n//   return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":3920,"y":780,"wires":[["4521f164.38c1f"]]},{"id":"4521f164.38c1f","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":4055,"y":780,"wires":[]},{"id":"3306fc85.07cd8c","type":"function","z":"7ba47ea5.e51c4","name":"Template application Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n   \"gadgetId\": \"934dffdd-91a6-4a49-2a4f-cc51614de04f\",\n  \"gadgetName\": \"Convert app to template\",\n  \"gadgetType\": \"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Generate template application\"},\n                \"gadgetData\":{\n                    action: \"Template\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \n\nreturn msg;","outputs":1,"noerr":0,"x":2010,"y":920,"wires":[["c1fcdfad.f08f1"]]},{"id":"b69bcaf5.122f2","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":920,"wires":[["3306fc85.07cd8c"]]},{"id":"c1fcdfad.f08f1","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2115,"y":920,"wires":[]},{"id":"5e996959.4711","type":"function","z":"f8594dbe.be6f8","name":"Route based on form FormType","func":"var Organization, Application, Page, Item, User;\n\nif ( msg.RevotioData.FlowData.Form.FormType === \"Organization\"){\n    Organization = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Application\"){\n    Application = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Page\"){\n    Page = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"Item\"){ \n    Item = msg;\n} else if ( msg.RevotioData.FlowData.Form.FormType === \"User\"){\n    User = msg;\n} \n\n\nreturn [Organization, Application, Page, Item, User];","outputs":5,"noerr":0,"x":1390,"y":1140,"wires":[[],["d72abd53.2a2648"],["13d77d6b.ddba7b"],["ca6fb241.7545d"],[]],"outputLabels":["Organization","Application","Page","Item","User"]},{"id":"615fb178.72384","type":"debug","z":"f8594dbe.be6f8","name":"form Template","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1348.7501220703125,"y":1061.4286804199219,"wires":[]},{"id":"d72abd53.2a2648","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n\nmsg.form = {\n      id: 'template-application',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      application_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n     \n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Template application',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Template name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n            //   {\n            //     name: 'current_organization',\n            //     htmlTag: 'input',  // button | select | textarea\n            //     // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n            //       options: {\n            //         value: currentName,\n            //         label: 'Currently located',\n            //         type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //         placeholder: '',\n            //         required: true, // false by default\n            //         width: 50,\n            //         disabled: true,\n            //       }\n            //     },\n            //     {\n            //     name: 'new_organization',\n            //     htmlTag: 'select',  // button | select | textarea\n            //     optionsGroup:dropDown,\n            //       options: {\n            //         value: \"\",\n            //         label: 'Copy to',\n            //         type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n            //         placeholder: '',\n            //         required: true, // false by default\n            //         width: 50\n            //       }\n            //     },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":1100,"wires":[["2d61e3b2.e57684","bdce7501.0fccf"]]},{"id":"13d77d6b.ddba7b","type":"function","z":"f8594dbe.be6f8","name":"Map application data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\nmsg.form = {\n      id: 'template-page',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      application_id : msg.RevotioData.FlowData.Form.FormData.application_id,\n      page_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'page overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Create new templated based on ' + msg.RevotioData.FlowData.Form.FormData.name,\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1980,"y":1140,"wires":[["37bba173.32e986"]]},{"id":"ca6fb241.7545d","type":"function","z":"f8594dbe.be6f8","name":"Get all organizations","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n\n    findObj = {\n            query : {\n                    query :{}, \n                    },\n            connection:global.get(\"DB_data.connection\"),\n            database:global.get(\"DB_data.appDB\"),\n            collection:'organizations',\n            operation:'find',\n            }\n\n    mongodbTools.resolveAsync(findObj, node, function(res){\n            msg.organizations = res\n            node.send(msg) \n    }) \n\n// return msg;","outputs":1,"noerr":0,"x":1760,"y":1180,"wires":[["d62f1b6b.045918"]]},{"id":"d62f1b6b.045918","type":"function","z":"f8594dbe.be6f8","name":"Map item data","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nvar dropDown = {};\nvar currentId = \"\"\nvar currentName = \"\"\n\n_.each(msg.organizations, function(Item, Index){\n    \n    if (String(Item._id) === String(msg.RevotioData.FlowData.Form.FormData.organization_id) ){\n        currentId = Item._id\n        currentName = Item.name\n        dropDown[Item._id] = Item.name\n    } else {\n        dropDown[Item._id] = Item.name\n    }\n})\n\n\nmsg.form = {\n      id: 'copy-item',\n      canceled: true, // false\n      submitButtonText: 'Submit',\n      prevButtonText: 'Previous',\n      nextButtonText: 'Next',\n      showPrevious: false, //false\n      organization_id : msg.RevotioData.FlowData.Form.FormData.organization_id,\n      item_id : msg.RevotioData.FlowData.Form.FormData._id,\n      FormType : msg.RevotioData.FlowData.Form.FormType ,\n      Page: 'item overview',\n    //   organization_id: msg.RevotioData.FlowData.Form.organization_id,\n      title: 'Move item',\n      steps: [\n           {\n          title: 'General information',\n          subtitle: '',\n          fields: [\n                      {\n              name: 'name',\n              htmlTag: 'input',  // button | select | textarea\n              options: {\n                value:msg.RevotioData.FlowData.Form.FormData.name,\n                label: 'Application name',\n                type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                placeholder: \"\",\n                required: true, // false by default\n                maxlength: 100,\n                // disabled: true,\n              }\n            },\n              {\n                name: 'current_organization',\n                htmlTag: 'input',  // button | select | textarea\n                // optionsGroup:{gold : \"Gold\", platinum:\"Platinum\", titanium:\"Titanium\"},\n                  options: {\n                    value: currentName,\n                    label: 'Currently located',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50,\n                    disabled: true,\n                  }\n                },\n                {\n                name: 'new_organization',\n                htmlTag: 'select',  // button | select | textarea\n                optionsGroup:dropDown,\n                  options: {\n                    value: \"\",\n                    label: 'Move to',\n                    type: 'string', // default: text | button | checkbox | date | email | number | password | radio | submit\n                    placeholder: '',\n                    required: true, // false by default\n                    width: 50\n                  }\n                },\n                ]\n           }]};\n           \n\nreturn msg;","outputs":1,"noerr":0,"x":1960,"y":1180,"wires":[["fbf08439.8ee4e"]]},{"id":"2d61e3b2.e57684","type":"debug","z":"f8594dbe.be6f8","name":"ORG update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2210,"y":1060,"wires":[]},{"id":"bdce7501.0fccf","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":1100,"wires":[]},{"id":"37bba173.32e986","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":1140,"wires":[]},{"id":"fbf08439.8ee4e","type":"link out","z":"f8594dbe.be6f8","name":"","links":["5a81fd95.60dfdc"],"x":2255,"y":1180,"wires":[]},{"id":"cec3ed82.66ec8","type":"function","z":"f8594dbe.be6f8","name":"Get APP data","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"pages\",\n                                  \"localField\": \"_id\",\n                                  \"foreignField\": \"application_id\",\n                                  \"as\": \"pages\"\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"items\"\n                                }\n                              },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = res[0]\n                    node.send(msg) \n            })  \n            \n            \n// return msg;\n","outputs":1,"noerr":0,"x":1920,"y":1440,"wires":[["97e63fc1.6dd83"]]},{"id":"97e63fc1.6dd83","type":"function","z":"f8594dbe.be6f8","name":"generate template files","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// create app folder\nvar appFolder = global.get(\"DomainProperties.filesFolder\")+\"templates/applications/\" +msg.RevotioData.PostData.gadgetData.formData.name\nfs.ensureDirSync(appFolder)\nfs.ensureDirSync(appFolder+\"/backend_flows_files\")\nfs.ensureDirSync(appFolder+\"/items\")\nfs.ensureDirSync(appFolder+\"/pages\")\n\nvar items = msg.result.items\ndelete msg.result.items\n\nvar pages = msg.result.pages\ndelete msg.result.pages\n\n// update application data\ndelete msg.result.organization_id \ndelete msg.result.application_id\ndelete msg.result._id \nmsg.result.name = msg.RevotioData.PostData.gadgetData.formData.name\n\n\n     // copy app files\n        if (msg.result.backend_flows){\n            // ensure dir\n            fs.ensureDirSync(appFolder + \"/backend_flows_files/\") \n        \n            NEW_backend_flows = []\n           \n            _.each(msg.result.backend_flows_files, function(fileItem, fileItemIndex){\n                \n                NEW_backend_flows.push({\n                    title:fileItem.title,\n                    flow_file:{\n                        path:appFolder + \"/backend_flows_files/\"+fileItem.flow_file.name,\n                        size: fileItem.flow_file.size,\n                        name: fileItem.flow_file.name,\n                        uploadFileType:fileItem.flow_file.uploadFileType,\n                        type: fileItem.flow_file.type,\n                    }\n                })\n                fs.copySync(fileItem.flow_file.path,  appFolder+\"/backend_flows_files/\"+fileItem.flow_file.name)\n            })\n            msg.result.backend_flows_files = NEW_backend_flows\n        }\n    \n// update items\n\n\n// create application file\n\nfs.writeJsonSync(appFolder+ \"/application.json\", JSON.stringify(msg.result))\n\n\n    _.each(items, function(itemRecord,itemRecordIndex ){\n        // delete itemRecord._id\n        delete itemRecord.organization_id \n        fs.writeJsonSync(appFolder+ \"/items/\"+new ObjectID()+\".json\", JSON.stringify(itemRecord))\n    })\n\n// update pages\n\n    var newItemArr = []\n    \n    _.each(pages, function(pageRecord, pageRecordItem){\n        \n        delete pageRecord.organization_id \n        delete pageRecord.application_id \n        delete pageRecord._id\n         // copy app files\n        if (pageRecord.backend_flows){\n            // ensure dir\n            fs.ensureDirSync(appFolder+ \"/pages/\"+pageRecord.name) \n        \n            NEW_backend_flows = []\n           \n            _.each(pageRecord.backend_flows_files, function(fileItem, fileItemIndex){\n                \n                NEW_backend_flows.push({\n                    title:fileItem.title,\n                    flow_file:{\n                        path: appFolder+ \"/pages/\"+pageRecord.name + \"/backend_flows_files/\"+fileItem.flow_file.name,\n                        size: fileItem.flow_file.size,\n                        name: fileItem.flow_file.name,\n                        uploadFileType:fileItem.flow_file.uploadFileType,\n                        type: fileItem.flow_file.type,\n                    }\n                })\n                fs.copySync(fileItem.flow_file.path,  appFolder+ \"/pages/\"+pageRecord.name + \"/backend_flows_files/\"+fileItem.flow_file.name)\n            })\n            pageRecord.backend_flows_files = NEW_backend_flows\n        }\n        \n \n        fs.writeJsonSync(appFolder+ \"/pages/\"+new ObjectID()+\".json\", JSON.stringify(pageRecord))\n\n    })\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"x":2120,"y":1440,"wires":[["b19c0af7.a7eee8"]]},{"id":"626a3593.6fee4c","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2540,"y":1440,"wires":[]},{"id":"b19c0af7.a7eee8","type":"function","z":"f8594dbe.be6f8","name":"Create response msg","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: new ObjectID(msg.RevotioData.FlowData.Form.organization_id),\n        organization_id: new ObjectID(msg.RevotioData.FlowData.Form.application_id)\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":2340,"y":1440,"wires":[["626a3593.6fee4c"]]},{"id":"34cf74b6.f09fa4","type":"debug","z":"4c633fc.7d56fc","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2440,"y":520,"wires":[]},{"id":"9bf974b1.0951e8","type":"function","z":"4c633fc.7d56fc","name":"Get customItems data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\nids = []\n_.each(msg.RevotioData.FlowData.Data.PageData.customItems, function(itemId, index){\n    ids.push(new ObjectID(itemId))\n})\nfindOneObj = {\n                    query : {\n                            query :{_id: {\"$in\":ids }} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n           \n                    msg.RevotioData.FlowData.Data.PageData.items = res\n                \n                    node.send(msg) \n            })  \n","outputs":1,"noerr":0,"x":2200,"y":360,"wires":[["d5eabc8b.c754e","384be9d4.4784e6"]]},{"id":"384be9d4.4784e6","type":"debug","z":"4c633fc.7d56fc","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2430,"y":260,"wires":[]},{"id":"f0af276b.615958","type":"function","z":"51f1d48a.bfebf4","name":"remove applications  template folder","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nfs.removeSync(global.get(\"DomainProperties.filesFolder\")+\"templates/applications/\"); \nreturn msg;","outputs":1,"noerr":0,"x":360,"y":1960,"wires":[[]]},{"id":"a73f38c.b0f7f48","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":1880,"wires":[["f0af276b.615958"]]},{"id":"ebc12e05.f0c44","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect APPS","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// check if template is used\n\nif (msg.RevotioData.PostData.gadgetData.formData.use_template){\n    \n    // set Ids \n    application_id = new ObjectID()\n    organization_id = new ObjectID(msg.RevotioData.FlowData.Form.organization_id)\n      \n        json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/application.json\");\n        msg.application = JSON.parse(json);\n        \n        msg.application.organization_id = new ObjectID(organization_id)\n        \n        _.each(msg.RevotioData.PostData.gadgetData.formData, function(value,key){\n            if (key!==\"use_template\" && key!==\"template\")\n            msg.application[key] = value\n        })\n        \n        appFolder = global.get(\"DomainProperties.filesFolder\") +\"applications/\" +application_id\n        fs.ensureDirSync(appFolder) \n        // copy app files\n        if (msg.application.backend_flows){\n            // ensure dir\n          \n            fs.ensureDirSync(appFolder+\"/backend_flows_files/\") \n        \n            NEW_backend_flows = []\n           \n            _.each(msg.application.backend_flows_files, function(fileItem, fileItemIndex){\n                \n                NEW_backend_flows.push({\n                    title:fileItem.title,\n                    flow_file:{\n                        path:appFolder + \"/backend_flows_files/\"+fileItem.flow_file.name,\n                        size: fileItem.flow_file.size,\n                        name: fileItem.flow_file.name,\n                        uploadFileType:fileItem.flow_file.uploadFileType,\n                        type: fileItem.flow_file.type,\n                    }\n                })\n                fs.copySync(fileItem.flow_file.path,  appFolder+\"/backend_flows_files/\"+fileItem.flow_file.name)\n            })\n            msg.application.backend_flows_files = NEW_backend_flows\n        }\n    \n         \n     \n        // copy backend files\n     \n        // insert app    \n            updateObj = {\n                            query : {\n                                    query :{_id:new ObjectID(application_id)}, \n                                    update : { \"$set\" : msg.application},\n                                    options : {upsert: true}\n                                    },\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'applications',\n                            operation:'update', // updateMany , updateOne\n                            }\n        \n                    mongodbTools.resolveAsync(updateObj, node, function(res){\n                        msg.payload = {\n                            Page : \"application overview\",\n                            RevotioData:{\n                                \"organization_id\":organization_id,\n                                \"application_id\":application_id\n                            }\n                        }\n                           node.send(msg)\n                    }) \n    \n    \n            // add items\n            \n           itemIdConversionObj = {}\n            if (fs.existsSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items\")) {\n                \n                _.each(fs.readdirSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items\"), function(fileName, fileIndex){\n                    \n                    json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items/\"+fileName);\n                    itemJson = JSON.parse(json);\n                \n                    newItemId = new ObjectID()\n                    itemIdConversionObj[itemJson._id]= new ObjectID(newItemId)\n                    \n                    delete itemJson._id\n                    \n                    itemJson.organization_id = new ObjectID(organization_id)\n                    \n                    // insert item    \n        \n                    updateObj = {\n                                    query : {\n                                            query :{_id:new ObjectID(newItemId)}, \n                                            update : { \"$set\" : itemJson},\n                                            options : {upsert: true}\n                                            },\n                                    connection:global.get(\"DB_data.connection\"),\n                                    database:global.get(\"DB_data.appDB\"),\n                                    collection:'items',\n                                    operation:'update', // updateMany , updateOne\n                                    }\n                \n                            mongodbTools.resolveAsync(updateObj, node, function(res){\n                                   \n                            }) \n        \n        \n                    \n                })\n                \n                \n                \n            }\n\n            // add pages\n\n            if (fs.existsSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/pages\")) {\n                \n                _.each(fs.readdirSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/pages\"), function(fileName, fileIndex){\n                    \n                    json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/pages/\"+fileName);\n                   \n                    \n                     // replace itemID\n                     _.each(itemIdConversionObj, function(NewId, OldId){\n                        json =  json.replace(new RegExp(`ReGeX${OldId}ReGeX`), NewId)\n                     })\n                    \n                    pageJson = JSON.parse(json);\n                    \n                    newPageId = new ObjectID()\n                    delete pageJson._id\n                    \n                     // copy page files\n                    if (pageJson.backend_flows){\n                        // ensure dir\n                        fs.ensureDirSync(appFolder +\"/pages/\"+ newPageId +\"/backend_flows_files/\") \n                    \n                        NEW_backend_flows = []\n                       \n                        _.each(pageJson.backend_flows_files, function(fileItem, fileItemIndex){\n                            \n                            NEW_backend_flows.push({\n                                title:fileItem.title,\n                                flow_file:{\n                                    path: appFolder + \"/pages/\"+ newPageId +\"/backend_flows_files/\"+fileItem.flow_file.name,\n                                    size: fileItem.flow_file.size,\n                                    name: fileItem.flow_file.name,\n                                    uploadFileType:fileItem.flow_file.uploadFileType,\n                                    type: fileItem.flow_file.type,\n                                }\n                            })\n                            fs.copySync(fileItem.flow_file.path, appFolder + \"/pages/\"+ newPageId +\"/backend_flows_files/\"+fileItem.flow_file.name)\n                        })\n                        pageJson.backend_flows_files = NEW_backend_flows\n                    }\n        \n                    \n                    \n                   \n                    pageJson.application_id = new ObjectID(application_id)\n                    pageJson.organization_id = new ObjectID(organization_id)\n                \n                    // insert item    \n        \n                    updateObj = {\n                                    query : {\n                                            query :{_id:new ObjectID(newPageId)}, \n                                            update : { \"$set\" : pageJson},\n                                            options : {upsert: true}\n                                            },\n                                    connection:global.get(\"DB_data.connection\"),\n                                    database:global.get(\"DB_data.appDB\"),\n                                    collection:'pages',\n                                    operation:'update', // updateMany , updateOne\n                                    }\n                \n                            mongodbTools.resolveAsync(updateObj, node, function(res){\n                                   \n                            }) \n        \n        \n                    \n                })\n                \n                \n                \n            }\n    \n    \n} else {\n\n                \n            msg.payload = {\n                Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n                RevotioData : {\n                    application_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n                    organization_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id)\n                }\n            }\n                            \n                if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('autoSave') === false){\n                    msg.RevotioData.PostData.gadgetData.formData.autoSave = false\n                }\n                if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty('dockerBasedApp') === false){\n                    msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp = false\n                }\n                if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"dockerImageRecords\") === true && msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords.length > 0){\n                    \n                    dockerImageRecords = []\n                    _.each(msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,function(Item, Index){\n                        \n                        // dockerImageRecords.push({\n                        //   dockerImageName :Item.dockerImageName,\n                        //   dockerImagePrio :Item.dockerImagePrio,\n                        //   _id :new ObjectID(Item._id),\n                        // })\n                        if (ObjectID.isValid(Item._id) === false){\n                            Item._id = new ObjectID()\n                        } else {\n                             Item._id = new ObjectID(Item._id)\n                        }\n                        \n                    })\n                    // msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords = dockerImageRecords\n                    \n                }\n                if (msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"environmentsRecords\") === true && msg.RevotioData.PostData.gadgetData.formData.environmentsRecords.length > 0){\n                    \n                    environmentsRecords = []\n                    _.each(msg.RevotioData.PostData.gadgetData.formData.environmentsRecords,function(Item, Index){\n                        \n                        // dockerImageRecords.push({\n                        //   dockerImageName :Item.dockerImageName,\n                        //   dockerImagePrio :Item.dockerImagePrio,\n                        //   _id :new ObjectID(Item._id),\n                        // })\n                        \n                        if (ObjectID.isValid(Item._id) === false){\n                            Item._id = new ObjectID()\n                        } else {\n                             Item._id = new ObjectID(Item._id)\n                        }\n                        \n                    })\n                    // msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords = dockerImageRecords\n                    \n                }\n            \n            \n            // check globalContext Data\n            \n            if (    \n                            msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"environments\") && \n                            msg.RevotioData.PostData.gadgetData.formData.environments === true && \n                            msg.RevotioData.PostData.gadgetData.formData.hasOwnProperty(\"globalContextData\") &&\n                            msg.RevotioData.PostData.gadgetData.formData.globalContextData.length > 0  ){\n                \n                _.each(msg.RevotioData.PostData.gadgetData.formData.globalContextData,function(Item, Index){\n                    \n                    // get envRecord \n                    \n                    Item.environmentName = \"None\"\n                    _.each(msg.RevotioData.PostData.gadgetData.formData.environmentsRecords, function (environmentsRecordsItem, environmentsRecordsIndex){\n                        \n                        if (String(environmentsRecordsItem._id) === String(Item.environment)){\n                            Item.environmentName = environmentsRecordsItem.name\n                            \n                        }\n                        \n                    })\n                    \n                    \n                    \n                })\n                \n            }\n            \n            \n            if (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-application\"){\n                \n                             updateObj = {\n                                query : {\n                                        query :  { _id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)},\n                                        update :   { \n                                                    organization_id:new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n                                                    name : msg.RevotioData.PostData.gadgetData.formData.name,\n                                                    domain: msg.RevotioData.PostData.gadgetData.formData.domain,\n                                                    adminSettings: {\n                                                        autoSave: msg.RevotioData.PostData.gadgetData.formData.autoSave,\n                                                    },\n                                                 \n                                                    github: msg.RevotioData.PostData.gadgetData.formData.github,\n                                                    githubUrl: msg.RevotioData.PostData.gadgetData.formData.githubUrl,\n                                                    githubHTTPS: msg.RevotioData.PostData.gadgetData.formData.githubHTTPS,\n                                                    githubSSH : msg.RevotioData.PostData.gadgetData.formData.githubSSH,\n                                                    api: msg.RevotioData.PostData.gadgetData.formData.api,\n                                                    updated : new Date(),\n                                                    dockerImageRecords  :msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,\n                                                    dockerBasedApp :msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp,\n                                                    globalContextData : msg.RevotioData.PostData.gadgetData.formData.globalContextData,\n                                                    environments :  msg.RevotioData.PostData.gadgetData.formData.environments,\n                                                    environmentsRecords: msg.RevotioData.PostData.gadgetData.formData.environmentsRecords\n                                         },\n                                        options : {upsert: true}\n                                        },\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'applications',\n                                operation:'update', // updateMany , updateOne\n                                }\n            \n                        mongodbTools.resolveAsync(updateObj, node, function(res){\n                               \n                                node.send(msg) \n                        })  \n                       \n            \n            \n            \n            } else {\n                \n                // adminSettings = {}\n                \n                \n            AppfindObj = { \n                    query : {query:{_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)} },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'applications',\n                    operation:\"findOne\",\n                }\n                \n            \n                \n            \n                \n                // node.send(msg) \n                    mongodbTools.resolveAsync(AppfindObj, node, function(res){\n                        \n                        \n                            \n                        res.changedDate = new Date()\n                        res.application_id = new ObjectID(res._id)\n                        delete res._id\n                        AppretentionInsertObj = { \n                            query : {\n                                    query : {_id: new ObjectID()},\n                                        update : {\"$set\": res},\n                                            options : {upsert : true }\n                                        },\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'applications_retention',\n                            operation:\"update\",\n                        }\n                        \n                        mongodbTools.resolveAsync(AppretentionInsertObj, node, function(res){\n            \n                        })\n                        \n                    \n                        \n                             updateObj = {\n                                query : {\n                                        query :  {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id)},\n                                        update :  {\"$set\": { \n                                        name : msg.RevotioData.PostData.gadgetData.formData.name,\n                                        domain: msg.RevotioData.PostData.gadgetData.formData.domain,\n                                        adminSettings: {\n                                            autoSave: msg.RevotioData.PostData.gadgetData.formData.autoSave,\n                                        },\n                                     \n                                        github: msg.RevotioData.PostData.gadgetData.formData.github,\n                                        githubUrl: msg.RevotioData.PostData.gadgetData.formData.githubUrl,\n                                        githubHTTPS: msg.RevotioData.PostData.gadgetData.formData.githubHTTPS,\n                                        githubSSH : msg.RevotioData.PostData.gadgetData.formData.githubSSH,\n                                        api: msg.RevotioData.PostData.gadgetData.formData.api,\n                                        updated : new Date(),\n                                        dockerImageRecords  :msg.RevotioData.PostData.gadgetData.formData.dockerImageRecords,\n                                        dockerBasedApp :msg.RevotioData.PostData.gadgetData.formData.dockerBasedApp,\n                                        globalContextData : msg.RevotioData.PostData.gadgetData.formData.globalContextData,\n                                        environments :  msg.RevotioData.PostData.gadgetData.formData.environments,\n                                        environmentsRecords: msg.RevotioData.PostData.gadgetData.formData.environmentsRecords\n                                    }},\n                                        options : {upsert: true}\n                                        },\n                                connection:global.get(\"DB_data.connection\"),\n                                database:global.get(\"DB_data.appDB\"),\n                                collection:'applications',\n                                operation:'update', // updateMany , updateOne\n                                }\n            \n                        mongodbTools.resolveAsync(updateObj, node, function(res){\n                               \n                                node.send(msg) \n                        })  \n                            \n                      \n            \n                    })\n            \n            \n            \n            }\n\n\n}\n\n// return msg;","outputs":1,"noerr":0,"x":2010,"y":1340,"wires":[["dc63f899.4477"]]},{"id":"dc63f899.4477","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2340,"y":1340,"wires":[]},{"id":"cc5f7365.d0315","type":"debug","z":"f8594dbe.be6f8","name":"AAA@@@@","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2490,"y":1220,"wires":[]},{"id":"95639df4.8a42f","type":"function","z":"4c633fc.7d56fc","name":"Template page Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n \"gadgetId\": \"26a85191-e50b-7ab8-769e-656a84d1362e\",\n  \"gadgetName\": \"Generate page template\",\n  \"gadgetType\": \"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Generate template page\"},\n                \"gadgetData\":{\n                    action: \"Template\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \n\nreturn msg;","outputs":1,"noerr":0,"x":2270,"y":640,"wires":[["cf6b1ee9.ca9be8"]]},{"id":"60f3d403.da9484","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1915,"y":640,"wires":[["95639df4.8a42f"]]},{"id":"cf6b1ee9.ca9be8","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2675,"y":640,"wires":[]},{"id":"8fd74c57.fdd9c","type":"function","z":"4c633fc.7d56fc","name":"Node Red flow Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[{            \n  \"gadgetId\": \"e9da28c8-33a8-525f-7b14-0b42a3a7cfd6\",\n  \"gadgetName\": \"Add Node-Red flow\",\n  \"gadgetType\": \"dynamic-btn\",\n            \"gadgetOptions\":\n                {\"types\":\"\",\n                \"styles\":[\"btn-embossed\",\n                \"btn-success\",\"btn-square\"],\n                \"buttonalign\":\"right\",\n                \"textcolor\":\"black\",\n                \"buttonlabel\":\"Add Node Red flow\"},\n                \"gadgetData\":{\n                    action: \"Node-Red-flow\"\n                }\n       \n   }]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \n\nreturn msg;","outputs":1,"noerr":0,"x":2270,"y":700,"wires":[["498ec862.023ba8"]]},{"id":"368c92c8.b35696","type":"link in","z":"4c633fc.7d56fc","name":"** Gadget Name **","links":["d61d5621.9a6a9"],"x":1915,"y":700,"wires":[["8fd74c57.fdd9c"]]},{"id":"498ec862.023ba8","type":"link out","z":"4c633fc.7d56fc","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","59a8bd9.c352fc4"],"x":2675,"y":700,"wires":[]},{"id":"6b844e7d.6bc8c","type":"function","z":"f8594dbe.be6f8","name":"Get PAGE data","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n\n// aggregate\n            aggregateObj = {\n                    query : { query : [{\n                                $match: {\n                                  \"_id\": new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id),\n                                }\n                              },\n                              {\n                                $lookup: {\n                                  \"from\": \"items\",\n                                  \"localField\": \"organization_id\",\n                                  \"foreignField\": \"organization_id\",\n                                  \"as\": \"items\"\n                                }\n                              },\n                            ],},\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'aggregate',\n                    }\n                    \n            mongodbTools.resolveAsync(aggregateObj, node, function(res){\n                    msg.result = res[0]\n                    node.send(msg) \n            })  \n            \n            \n// return msg;\n","outputs":1,"noerr":0,"x":1860,"y":1680,"wires":[["57441234.6b9bbc","e32c4b7b.b232a8"]]},{"id":"57441234.6b9bbc","type":"function","z":"f8594dbe.be6f8","name":"generate template files","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\n// create app folder\nvar appFolder = global.get(\"DomainProperties.filesFolder\")+\"templates/pages/\" +msg.RevotioData.PostData.gadgetData.formData.name\nfs.ensureDirSync(appFolder)\nfs.ensureDirSync(appFolder+\"/items\")\n\nvar items = msg.result.items\ndelete msg.result.items\n\n\n// update application data\ndelete msg.result.organization_id \ndelete msg.result.application_id\ndelete msg.result._id \n    msg.result.name = msg.RevotioData.PostData.gadgetData.formData.name\n// update items\n\n    // copy app files\n        if (msg.result.backend_flows){\n            // ensure dir\n           \n        \n            NEW_backend_flows = []\n           \n            _.each(msg.result.backend_flows_files, function(fileItem, fileItemIndex){\n                \n                NEW_backend_flows.push({\n                    title:fileItem.title,\n                    flow_file:{\n                        path: appFolder + \"/backend_flows_files/\"+fileItem.flow_file.name,\n                        size: fileItem.flow_file.size,\n                        name: fileItem.flow_file.name,\n                        uploadFileType:fileItem.flow_file.uploadFileType,\n                        type: fileItem.flow_file.type,\n                    }\n                })\n                fs.copySync(fileItem.flow_file.path,  appFolder + \"/backend_flows_files/\"+fileItem.flow_file.name)\n            })\n            msg.result.backend_flows_files = NEW_backend_flows\n        }\n        \n// create page file\n\nfs.writeJsonSync(appFolder+ \"/page.json\", JSON.stringify(msg.result))\n\n// check and if needed add item\n\n    _.each(items, function(itemRecord,itemRecordIndex ){\n        \n        // check if item is used by page\n        _.each(msg.result.customItems, function(itemId, itemIdIndex){\n            if (String(itemId) === String(itemRecord._id) ){\n                delete itemRecord.organization_id \n                fs.writeJsonSync(appFolder+ \"/items/\"+new ObjectID()+\".json\", JSON.stringify(itemRecord))\n            }\n        })\n    })\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"x":2060,"y":1680,"wires":[["e0699f7e.fb6328"]]},{"id":"29ae50e6.46e2b","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2480,"y":1680,"wires":[]},{"id":"e0699f7e.fb6328","type":"function","z":"f8594dbe.be6f8","name":"Create response msg","func":"var Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\n\nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: new ObjectID(msg.RevotioData.FlowData.Form.organization_id),\n        page_id: new ObjectID(msg.RevotioData.FlowData.Form.page_id),\n        organization_id: new ObjectID(msg.RevotioData.FlowData.Form.organization_id)\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":2280,"y":1680,"wires":[["29ae50e6.46e2b"]]},{"id":"e32c4b7b.b232a8","type":"debug","z":"f8594dbe.be6f8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2220,"y":1700,"wires":[]},{"id":"2f981aec.22be6e","type":"function","z":"f8594dbe.be6f8","name":"Set , save/ update && prepair redirect PAGES","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// check if template is used\n\nif (msg.RevotioData.PostData.gadgetData.formData.use_template){\n    \n    // set Ids \n    organization_id = new ObjectID(msg.RevotioData.FlowData.Form.organization_id)\n    application_id = new ObjectID(msg.RevotioData.FlowData.Form.application_id)\n    \n  \n  \n        // check if folderContentItem is applicaction Object\n        \n    // fs.readdirSync(global.get(\"DomainProperties.filesFolder\")+\"templates/applications\")\n       \n      \n        json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/page.json\");\n        msg.page = JSON.parse(json);\n \n            // add items\n            \n           itemIdConversionObj = {}\n            if (fs.existsSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items\")) {\n                \n                _.each(fs.readdirSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items\"), function(fileName, fileIndex){\n                    \n                    json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/items/\"+fileName);\n                    itemJson = JSON.parse(json);\n                \n                    // check if item is used by page\n                    \n                    _.each(msg.page.customItems, function(customItemsValue, customItemsIndex){\n                        if (String(itemJson._id) === String(customItemsValue)){\n                            newItemId = new ObjectID()\n                            \n                            itemIdConversionObj[itemJson._id]= new ObjectID(newItemId)\n                            \n                            delete itemJson._id\n                            \n                            itemJson.organization_id = new ObjectID(organization_id)\n                            \n                            // insert item    \n                \n                            updateObj = {\n                                            query : {\n                                                    query :{_id:new ObjectID(newItemId)}, \n                                                    update : { \"$set\" : itemJson},\n                                                    options : {upsert: true}\n                                                    },\n                                            connection:global.get(\"DB_data.connection\"),\n                                            database:global.get(\"DB_data.appDB\"),\n                                            collection:'items',\n                                            operation:'update', // updateMany , updateOne\n                                            }\n                        \n                                    mongodbTools.resolveAsync(updateObj, node, function(res){\n                                           \n                                    }) \n                        }\n                    })\n                })\n            }\n\n            // add page\n            \n            json = fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template+\"/page.json\");\n            \n             // replace itemID\n             _.each(itemIdConversionObj, function(NewId, OldId){\n                json =  json.replace(new RegExp(`ReGeX${OldId}ReGeX`), NewId)\n             })\n            \n            pageJson = JSON.parse(json);\n            \n            newPageId = new ObjectID()\n            delete pageJson._id\n            \n            appFolder = global.get(\"DomainProperties.filesFolder\")+\"applications/\"+application_id\n                                 // copy page files\n                    if (pageJson.backend_flows){\n                        // ensure dir\n                        fs.ensureDirSync(appFolder +\"/pages/\"+ newPageId +\"/backend_flows_files/\") \n                    \n                        NEW_backend_flows = []\n                       \n                        _.each(pageJson.backend_flows_files, function(fileItem, fileItemIndex){\n                            \n                            NEW_backend_flows.push({\n                                title:fileItem.title,\n                                flow_file:{\n                                    path: appFolder + \"/pages/\"+ newPageId +\"/backend_flows_files/\"+fileItem.flow_file.name,\n                                    size: fileItem.flow_file.size,\n                                    name: fileItem.flow_file.name,\n                                    uploadFileType:fileItem.flow_file.uploadFileType,\n                                    type: fileItem.flow_file.type,\n                                }\n                            })\n                            fs.copySync(fileItem.flow_file.path, appFolder + \"/pages/\"+ newPageId +\"/backend_flows_files/\"+fileItem.flow_file.name)\n                        })\n                        pageJson.backend_flows_files = NEW_backend_flows\n                    }\n        \n            \n             pageJson.organization_id = new ObjectID(organization_id)\n             pageJson.application_id = new ObjectID(application_id)\n                \n                _.each(msg.RevotioData.PostData.gadgetData.formData, function(value,key){\n                    if (key!==\"use_template\" && key!==\"template\")\n                    pageJson[key] = value\n                })\n\n\n          \n        \n            // insert item    \n\n            updateObj = {\n                            query : {\n                                    query :{_id:new ObjectID(newPageId)}, \n                                    update : { \"$set\" : pageJson},\n                                    options : {upsert: true}\n                                    },\n                            connection:global.get(\"DB_data.connection\"),\n                            database:global.get(\"DB_data.appDB\"),\n                            collection:'pages',\n                            operation:'update', // updateMany , updateOne\n                            }\n        \n                    mongodbTools.resolveAsync(updateObj, node, function(res){\n                            msg.payload = {\n                            Page : \"page overview\",\n                            RevotioData:{\n                                \"organization_id\":organization_id,\n                                \"application_id\":application_id,\n                                \"page_id\":newPageId\n                            }\n                        }\n                           node.send(msg)\n                           \n                    }) \n\n        \n                    \n           \n                \n                \n                \n          \n    \n    \n} else {\n\n\nmsg.payload = {\n    Page : msg.RevotioData.PostData.gadgetData.formObj.Page,\n    RevotioData : {\n        application_id: msg.RevotioData.PostData.gadgetData.formObj.application_id,\n        page_id: msg.RevotioData.PostData.gadgetData.formObj.page_id,\n        organization_id: msg.RevotioData.PostData.gadgetData.formObj.organization_id\n    }\n}\n    \nif (msg.RevotioData.PostData.gadgetData.formObj.id === \"create-page\"){\n\n    // check if template is used\n    if (msg.RevotioData.PostData.gadgetData.formData.use_template){\n      \n            // content = JSON.parse()\n              content =   fs.readJsonSync(msg.RevotioData.PostData.gadgetData.formData.template)\n               \n    } else {\n        content = { \"container\" : []}\n    }\n\n    query = {\n        query : {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},\n        update : {\"$set\": { \n            label:msg.RevotioData.PostData.gadgetData.formData.label,\n            page_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id),\n            timestamp : new Date(),\n            application_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.application_id),\n            organization_id : new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.organization_id),\n            name : msg.RevotioData.PostData.gadgetData.formData.name,\n           \"content\" : content, \n            groupedObject : {},\n            menuSettings : {},\n            customItems:[],\n            dockerContainerID : new ObjectID(msg.RevotioData.PostData.gadgetData.formData.dockerContainerID)\n            \n        }},\n        options : {upsert : true }\n    }\n    \n    \n    \n     Obj = { \n            query : query,\n        \n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'pages',\n        operation:\"update\",\n                }\n                // node.send(msg) \n        mongodbTools.resolveAsync(Obj, node, function(res){\n            // msg.result = res\n            // result = res;\n            // create new token string\n   \n        \n            node.send(msg)\n        })\n} else {\n\nAppfindObj = { \n        query : {query: {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},},\n        connection:global.get(\"DB_data.connection\"),\n        database:global.get(\"DB_data.appDB\"),\n        collection:'pages',\n        operation:\"findOne\",\n    }\n    \n    // node.send(msg) \n        mongodbTools.resolveAsync(AppfindObj, node, function(res){\n            \n            \n                \n            res.changedDate = new Date()\n            res.page_id = new ObjectID(res._id)\n            \n            delete res._id\n            AppretentionInsertObj = { \n                query : {\n                        query : {_id: new ObjectID()},\n                                \n                                update : {\"$set\": res},\n                                options : {upsert : true }\n                            },\n                connection:global.get(\"DB_data.connection\"),\n                database:global.get(\"DB_data.appDB\"),\n                collection:'pages_retention',\n                operation:\"update\",\n            }\n            \n            mongodbTools.resolveAsync(AppretentionInsertObj, node, function(res){\n\n           \n            \n                        query = {\n                        query :  {_id: new ObjectID(msg.RevotioData.PostData.gadgetData.formObj.page_id)},\n                        update : {\"$set\": { \n                             label:msg.RevotioData.PostData.gadgetData.formData.label,\n                            name : msg.RevotioData.PostData.gadgetData.formData.name,\n                            dockerContainerID : new ObjectID(msg.RevotioData.PostData.gadgetData.formData.dockerContainerID),\n                            updated : new Date()\n                        }},\n                        options : {upsert : true }\n                    }\n                    \n                AppUpdateObj = { \n                        query : query,\n                        connection:global.get(\"DB_data.connection\"),\n                        database:global.get(\"DB_data.appDB\"),\n                        collection:'pages',\n                        operation:\"update\",\n                    }\n            \n               mongodbTools.resolveAsync(AppUpdateObj, node, function(res){\n\n                \n            \n                node.send(msg)\n               })\n                })\n\n        })\n\n\n\n}}\n\n\n// return msg;","outputs":1,"noerr":0,"x":1940,"y":1560,"wires":[["bfa5ede7.cc74d8"]]},{"id":"bfa5ede7.cc74d8","type":"subflow:5e9b9c1d.bbe4a4","z":"f8594dbe.be6f8","name":"","env":[],"x":2180,"y":1560,"wires":[]},{"id":"43ef8bc6.94180c","type":"subflow:5e9b9c1d.bbe4a4","z":"4c633fc.7d56fc","name":"","env":[],"x":4140,"y":720,"wires":[]},{"id":"c456991.34d5368","type":"function","z":"5c6b8786.2f63d","name":"Init org level","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// makesure FlowData.Data exists\n\nif (!msg.RevotioData.FlowData ){\n    msg.RevotioData.FlowData  = {}\n}\n\nif (!msg.RevotioData.FlowData.Data ){\n    msg.RevotioData.FlowData.Data  = {}\n}\n\n\n findOneObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.RevotioData.FlowData.organization_id)} \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'organizations',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n               if (res.length > 0){\n                    msg.RevotioData.FlowData.Data.OrganizationData = res[0]\n                } else {\n                    msg.RevotioData.FlowData.Data.OrganizationData  = {}\n                }\n                    \n                    node.send(msg) \n            })  ","outputs":1,"noerr":0,"x":190,"y":80,"wires":[[]]},{"id":"ee919d54.dc1568","type":"subflow:5c6b8786.2f63d","z":"7ba47ea5.e51c4","name":"","env":[],"x":1160,"y":880,"wires":[["d31c1dfd.40a08"]]},{"id":"12877cee.3216e3","type":"subflow:5c6b8786.2f63d","z":"2294209a.0c95b","name":"","env":[],"x":1070,"y":620,"wires":[["aea25a8a.fa4a58"]]},{"id":"a38dd37b.1a2f8","type":"subflow:5c6b8786.2f63d","z":"e5822137.be45d","name":"","env":[],"x":1170,"y":820,"wires":[["ed7fc388.352d28"]]},{"id":"fbfda81e.0bead","type":"subflow:5c6b8786.2f63d","z":"4c633fc.7d56fc","name":"","env":[],"x":1150,"y":560,"wires":[["f9085b39.70a9e"]]},{"id":"a7f53e12.2b1518","type":"subflow:5c6b8786.2f63d","z":"671d608a.039ad","name":"","env":[],"x":1090,"y":520,"wires":[["78b631ed.f65b1"]]},{"id":"91d23ba1.ffd018","type":"debug","z":"e25f5e2d.45871","name":"IN Gen. Response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":170,"y":180,"wires":[]},{"id":"a90cea2a.7d8828","type":"function","z":"f8594dbe.be6f8","name":"Ensure FS & entity sync","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// Get all files in folder\nfs.ensureDirSync(global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.PostData.gadgetData.formObj.application_id+\"/backend_flows_files\")\nfiles = fs.readdirSync( global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.PostData.gadgetData.formObj.application_id+\"/backend_flows_files\" )\n\nmsg.files = files\n\n_.each(files, function(fileItem, fileItemIndex){\n    \n    var found = false\n    _.each(msg.RevotioData.PostData.gadgetData.formData.backend_flows_files, function(file, index){\n        \n        if (file.flow_file.name ===  fileItem){\n            found = true\n        }\n    })\n   if (found === false){\n        fs.removeSync(global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.PostData.gadgetData.formObj.application_id+\"/backend_flows_files/\"+fileItem)\n \n   }\n    \n})\n\nreturn msg;","outputs":1,"noerr":0,"x":2290,"y":1300,"wires":[["34854bfd.42aabc","cc5f7365.d0315"]]},{"id":"395b6a0a.00b266","type":"function","z":"f8594dbe.be6f8","name":"Ensure FS & entity sync","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nif (msg.RevotioData.PostData.gadgetData.formData.backend_flows){\n// Get all files in folder\nfolder = global.get(\"DomainProperties.rootPath\")+ \"applications/\"+msg.RevotioData.PostData.gadgetData.formObj.application_id+\"/pages/\"+msg.RevotioData.PostData.gadgetData.formObj.page_id +\"/backend_flows_files/\"\n\nfiles = fs.readdirSync( folder)\n\nmsg.files = files\n\n_.each(files, function(fileItem, fileItemIndex){\n    \n    var found = false\n    _.each(msg.RevotioData.PostData.gadgetData.formData.backend_flows_files, function(file, index){\n        \n        if (file.flow_file.name ===  fileItem){\n            found = true\n        }\n    })\n   if (found === false){\n        fs.removeSync(folder+fileItem)\n \n   }\n    \n})\n}\nreturn msg;","outputs":1,"noerr":0,"x":2250,"y":1520,"wires":[["bb6f57c9.0c75a8"]]},{"id":"297daff1.fbe6d","type":"debug","z":"7ba47ea5.e51c4","name":"GEn res","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":860,"y":260,"wires":[]},{"id":"c4baafba.1f8e6","type":"debug","z":"4c633fc.7d56fc","name":"Pre res gen Page ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":980,"y":80,"wires":[]},{"id":"3e1f8725.fd49b","type":"function","z":"7ba47ea5.e51c4","name":"\"Application text\" Btn","func":"\nmsg.payload = \n    {\n   \"gadgetsList\":[\n       {\n              \"gadgetData\": {\n                \"data\": [\n                  {\n                    \"label\": \"Name\",\n                    \"value\": msg.RevotioData.FlowData.Data.ApplicationData.name\n                  },\n                 {\n                    \"label\": \"ID\",\n                    \"value\": msg.RevotioData.FlowData.Data.ApplicationData._id\n                  },\n                 \n                ],\n                \"options\": {}\n              },\n              \"gadgetId\": \"cee29ae5-36ec-bfbd-f72b-bc1eb32e10e5\",\n              \"gadgetName\": \"Application text\",\n              \"gadgetType\": \"dynamic-text-area\"\n            }\n                  ]\n\n                // \"gadgetData\":{\"DropdownData\":[{\"label\":\"Employee based\",\"action\":\"Employee\"},{\"label\":\"Project based\",\"action\":\"Project\"}]}}]\n\n} ;   \n\nreturn msg;","outputs":1,"noerr":0,"x":2000,"y":960,"wires":[["93499b81.012378"]]},{"id":"5f4e05d3.244a84","type":"link in","z":"7ba47ea5.e51c4","name":"** Gadget Name **","links":["31177cae.22305c"],"x":1895,"y":960,"wires":[["3e1f8725.fd49b"]]},{"id":"93499b81.012378","type":"link out","z":"7ba47ea5.e51c4","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","db667e4b.c50578"],"x":2115,"y":960,"wires":[]},{"id":"d9a31cb4.de7588","type":"debug","z":"508957a1.dd5398","name":"ACTION post A","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":700,"y":680,"wires":[]},{"id":"e4b702f8.2026a","type":"function","z":"8db3b81a.693fd","name":"Route BreadCrumb action","func":"var redirect, newEntity , formAction;\nif (msg.RevotioData.PostData.gadgetData.type &&\n    msg.RevotioData.PostData.gadgetData.type === \"button\" &&\n    msg.RevotioData.PostData.gadgetData.selected){\n    \n     msg.RevotioData.FlowData.Form = msg.RevotioData.PostData.gadgetData.selected;\n    \n  formAction = msg;  \n}\nelse if (msg.RevotioData.PostData.gadgetData.selected){\n     msg.payload = {\n        Page : msg.RevotioData.PostData.gadgetData.selected.Page,\n        RevotioData : {\n            organization_id : msg.RevotioData.PostData.gadgetData.selected.organization_id,\n            page_id : msg.RevotioData.PostData.gadgetData.selected.page_id,\n            application_id : msg.RevotioData.PostData.gadgetData.selected.application_id,\n            item_id : msg.RevotioData.PostData.gadgetData.selected.item_id,\n        }\n    }\n    \n    redirect= msg\n} else if (msg.RevotioData.PostData.gadgetData.Page) {\n    \n     msg.payload = {\n        Page : msg.RevotioData.PostData.gadgetData.Page,\n        RevotioData : {\n            organization_id : msg.RevotioData.PostData.gadgetData.data[0].organization_id,\n            page_id : msg.RevotioData.PostData.gadgetData.data[0].page_id,\n            application_id : msg.RevotioData.PostData.gadgetData.data[0].application_id,\n            item_id : msg.RevotioData.PostData.gadgetData.data[0].item_id,\n            // employee_id : msg.RevotioData.PostData.gadgetData.data[0].employee_id,\n        }\n    }\n    \n    \n   redirect= msg\n} else {\n     newEntity = msg;\n}\n\n\nreturn [redirect, newEntity, formAction];","outputs":3,"noerr":0,"x":200,"y":80,"wires":[[],["f2f17cd0.7f59a8"],[]],"outputLabels":["redirect","newEntity","formAction"]},{"id":"f2f17cd0.7f59a8","type":"function","z":"8db3b81a.693fd","name":"Prepair form","func":"// Get libraries\nconst Moment = global.get('moment');\nconst MomentRange = global.get('momentrange');\nconst moment = MomentRange.extendMoment(Moment);\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting'); \nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\n\n\nmsg.RevotioData.FlowData.Form = {\n        FormType  :  msg.RevotioData.PostData.gadgetData.FormType,\n        FormActionType: \"Create\"\n    }\n    \n    if (msg.RevotioData.PostData.gadgetData.organization_id){\n       msg.RevotioData.FlowData.Form.organization_id = new ObjectID(msg.RevotioData.PostData.gadgetData.organization_id)\n    }else if (msg.RevotioData.FlowData.organization_id){\n       msg.RevotioData.FlowData.Form.organization_id = new ObjectID(msg.RevotioData.FlowData.organization_id)\n    }\n    \n    if (msg.RevotioData.PostData.gadgetData.project_id){\n       msg.RevotioData.FlowData.Form.project_id = new ObjectID(msg.RevotioData.PostData.gadgetData.project_id)\n    }else if (msg.RevotioData.FlowData.project_id){\n       msg.RevotioData.FlowData.Form.project_id = new ObjectID(msg.RevotioData.FlowData.project_id)\n    }    \n    \n    if (msg.RevotioData.PostData.gadgetData.work_package_id){\n       msg.RevotioData.FlowData.Form.work_package_id = new ObjectID(msg.RevotioData.PostData.gadgetData.work_package_id)\n    }else if (msg.RevotioData.FlowData.work_package_id){\n       msg.RevotioData.FlowData.Form.work_package_id = new ObjectID(msg.RevotioData.FlowData.work_package_id)\n    }  \n    \n    if (msg.RevotioData.PostData.gadgetData.participant_id){\n       msg.RevotioData.FlowData.Form.participant_id = new ObjectID(msg.RevotioData.PostData.gadgetData.participant_id)\n    }else if (msg.RevotioData.FlowData.participant_id){\n       msg.RevotioData.FlowData.Form.participant_id = new ObjectID(msg.RevotioData.FlowData.participant_id)\n    } \n    \n    \n    // organization_id : \n    //      : new ObjectID(msg.RevotioData.FlowData.project_id),\n    //      : new ObjectID(msg.RevotioData.FlowData.work_package_id),\n    //      : new ObjectID(msg.RevotioData.FlowData.participant_id),\n     \n\n\n// if (msg.RevotioData.session.Page === \"project overview\"){\n//     msg.RevotioData.FlowData.Form = {\n//         organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n//         project_id : new ObjectID(msg.RevotioData.FlowData.project_id),\n//         FormType  :  \"WorkPackage\",\n//         FormActionType: \"Create\"\n//     }\n// } else if (msg.RevotioData.session.Page === \"organization overview\"){\n//     msg.RevotioData.FlowData.Form = {\n//         organization_id : new ObjectID(msg.RevotioData.FlowData.organization_id),\n//         FormType  :  \"Project\",\n//         FormActionType: \"Create\"\n//     }\n// } else if (msg.RevotioData.session.Page === \"organization global\"){\n//     msg.RevotioData.FlowData.Form = {\n//         FormType  :  \"Organization\",\n//         FormActionType: \"Create\"\n//     }\n// } else if (msg.RevotioData.session.Page === \"work package overview\"){\n//     msg.RevotioData.FlowData.Form = {\n//         FormType  :  \"Organization\",\n//         FormActionType: \"Create\"\n//     }\n// }\n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":80,"wires":[[]]},{"id":"860d2caf.36873","type":"subflow:8db3b81a.693fd","z":"e5822137.be45d","name":"BreadCrumbsAction","env":[],"x":3680,"y":440,"wires":[["6e95417b.0deff"],["bcb372ba.8288e8"]]},{"id":"3eb63118.c5d786","type":"subflow:5e9b9c1d.bbe4a4","z":"e5822137.be45d","name":"","env":[],"x":4040,"y":1060,"wires":[]},{"id":"f5e0160d.8f24a","type":"subflow:3170c4ab.fadb9c","z":"e5822137.be45d","name":"","x":4040,"y":1100,"wires":[["33287b30.e85ea4"]]},{"id":"33287b30.e85ea4","type":"link out","z":"e5822137.be45d","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":4115,"y":1100,"wires":[]},{"id":"3697fd3b.4de2b2","type":"subflow:8db3b81a.693fd","z":"e5822137.be45d","name":"BreadCrumbsAction","env":[],"x":3840,"y":1080,"wires":[["3eb63118.c5d786"],["f5e0160d.8f24a"]]},{"id":"afd1ac1e.d5b9f","type":"subflow:5e9b9c1d.bbe4a4","z":"4c633fc.7d56fc","name":"","env":[],"x":3980,"y":860,"wires":[]},{"id":"55063556.db8694","type":"subflow:3170c4ab.fadb9c","z":"4c633fc.7d56fc","name":"","x":3980,"y":900,"wires":[["b51910ff.83ca18"]]},{"id":"b51910ff.83ca18","type":"link out","z":"4c633fc.7d56fc","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":4055,"y":900,"wires":[]},{"id":"3e082bf0.404b0c","type":"subflow:8db3b81a.693fd","z":"4c633fc.7d56fc","name":"BreadCrumbsAction","env":[],"x":3780,"y":880,"wires":[["afd1ac1e.d5b9f"],["55063556.db8694"]]},{"id":"803c09fe.b5d0d","type":"subflow:5e9b9c1d.bbe4a4","z":"671d608a.039ad","name":"","env":[],"x":4080,"y":820,"wires":[]},{"id":"eb1c6be2.81f1c","type":"subflow:3170c4ab.fadb9c","z":"671d608a.039ad","name":"","x":4080,"y":860,"wires":[["6c9f0870.13af78"]]},{"id":"6c9f0870.13af78","type":"link out","z":"671d608a.039ad","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":4155,"y":860,"wires":[]},{"id":"501c93f3.e7c11c","type":"subflow:8db3b81a.693fd","z":"671d608a.039ad","name":"BreadCrumbsAction","env":[],"x":3880,"y":840,"wires":[["803c09fe.b5d0d"],["eb1c6be2.81f1c"]]},{"id":"35be6126.46c506","type":"subflow:5e9b9c1d.bbe4a4","z":"7ba47ea5.e51c4","name":"","env":[],"x":4040,"y":1040,"wires":[]},{"id":"fe9758c1.fd71c8","type":"subflow:3170c4ab.fadb9c","z":"7ba47ea5.e51c4","name":"","x":4040,"y":1080,"wires":[["324de421.bf1f2c"]]},{"id":"324de421.bf1f2c","type":"link out","z":"7ba47ea5.e51c4","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":4115,"y":1080,"wires":[]},{"id":"e828eb77.629c7","type":"subflow:8db3b81a.693fd","z":"7ba47ea5.e51c4","name":"BreadCrumbsAction","env":[],"x":3840,"y":1060,"wires":[["35be6126.46c506"],["fe9758c1.fd71c8"]]},{"id":"6bfbfd2b.204aec","type":"subflow:5e9b9c1d.bbe4a4","z":"2294209a.0c95b","name":"","env":[],"x":3220,"y":640,"wires":[]},{"id":"42bc1f60.995e2","type":"subflow:3170c4ab.fadb9c","z":"2294209a.0c95b","name":"","x":3220,"y":680,"wires":[["6f9cee85.74eff8"]]},{"id":"6f9cee85.74eff8","type":"link out","z":"2294209a.0c95b","name":"Topbar  frontend post","links":["23272508.4d696a","2475f18f.18f84e","f85b9845.a955d","8b4ff2ec.3247b","bfe4a65b.e868c","68a613e1.7d23cc","a8407940.280928","cd2e935f.5b6348","c6ab18b6.cf792","915fe08d.d804b","839882ba.4c8cf8","4248f1d.8cffc1","fa74879d.d6538","dfb2e790.ced988","5152dc4f.eabc94","271f0775.5ac628","7b149429.0d56fc","7a011268.2223d4","26dc0660.b1e4ba","59afb9fb.3ba0c8","9c32caf9.c7e008","8be6a719.2a64e","a6ee6331.070228","6a41100.61cc07","c76409e8.f61b3"],"x":3295,"y":680,"wires":[]},{"id":"de0a486c.213f5","type":"subflow:8db3b81a.693fd","z":"2294209a.0c95b","name":"BreadCrumbsAction","env":[],"x":3020,"y":660,"wires":[["6bfbfd2b.204aec"],["42bc1f60.995e2"]]},{"id":"15674f5d.4e9629","type":"function","z":"51f1d48a.bfebf4","name":"Create DB sms record && send sms message","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\nvar twilio = global.get('twilio');\n\nif (!global.get(\"twilioData\") ){\n    accountSid =  'AC75096246fef15fd61a92e26b38bcccee';\n    authToken = 'dfffb5a9e8617fbcf8cffa41682e46a9';\n} else {\n    accountSid = global.get(\"twilioData.accountSid\");\n    authToken = global.get(\"twilioData.authToken\");\n}\n\nvar client = twilio(accountSid, authToken);\n\nmsg.payload.timestamp = new Date();\n\n\n// add sms to DB    \n    updateObj = {\n                    query : {\n                            query :msg.payload, \n                            update : { \"$set\" : msg.payload},\n                            options : {upsert: true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sms',\n                    operation:'update', // updateMany , updateOne\n                    }\n\n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                     client.messages\n                          .create({from: msg.payload.from, body: msg.payload.body, to: msg.payload.to})\n                          .then(message => node.send({res:msg.res, req:msg.req, payload : {payload : msg.payload , message:message, sid:message.sid}}));\n       \n                        })  \n\n\n\n","outputs":1,"noerr":0,"x":2700,"y":140,"wires":[["46d71dd2.c62c4c","af79791.57e6908"]]},{"id":"811ae5cc.7541f","type":"inject","z":"51f1d48a.bfebf4","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":2520,"y":300,"wires":[["d73252bb.140ab8"]]},{"id":"d73252bb.140ab8","type":"function","z":"51f1d48a.bfebf4","name":"Libs","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\nvar twilio = global.get('twilio');\n\nconst accountSid = 'AC75096246fef15fd61a92e26b38bcccee';\nconst authToken = 'dfffb5a9e8617fbcf8cffa41682e46a9';\nconst client = twilio(accountSid, authToken);\n\nconst http = require('http');\nconst express = require('express');\nconst MessagingResponse = require('twilio').twiml.MessagingResponse;\n\nconst app = express();\n\napp.post('/sms', (req, res) => {\n  const twiml = new MessagingResponse();\n\n  twiml.message('The Robots are coming! Head for the hills!');\n\n  res.writeHead(200, {'Content-Type': 'text/xml'});\n  res.end(twiml.toString());\n});\n\nhttp.createServer(app).listen(1337, () => {\n  console.log('Express server listening on port 1337');\n});\n\n\n\n// msg.client = client\n// node.send(msg)\nclient.messages\n      .create({from: '+3197010252524', body: 'HALLO SANDRA A text via the app', to: '+31641491420'})\n      .then(message => node.send({message:message, sid:message.sid}));\n\nclient.messages\n      .create({from: '+3197010252524', body: 'HALLO SANDRA A text via the app', to: '+31641218865'})\n      .then(message => node.send({message:message, sid:message.sid}));\n\n\n// return msg;","outputs":1,"noerr":0,"x":2670,"y":300,"wires":[["c2edd225.471e5"]]},{"id":"c2edd225.471e5","type":"debug","z":"51f1d48a.bfebf4","name":"response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2840,"y":380,"wires":[]},{"id":"e719fc59.b825d","type":"http in","z":"51f1d48a.bfebf4","name":"SMS","url":"/sms","method":"post","upload":false,"swaggerDoc":"","x":2330,"y":460,"wires":[["b9c357ac.461c6","9137b75f.21d668"]]},{"id":"b9c357ac.461c6","type":"debug","z":"51f1d48a.bfebf4","name":"INBOUND SMS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2560,"y":520,"wires":[]},{"id":"c70ca3e8.3b615","type":"http response","z":"51f1d48a.bfebf4","name":"","statusCode":"","headers":{},"x":2890,"y":460,"wires":[]},{"id":"9137b75f.21d668","type":"function","z":"51f1d48a.bfebf4","name":"","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// get DB record\n\n// findOne\n        findOneObj = {\n                    query : {\n                            query :{to:msg.payload.From } \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'sms',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findOneObj, node, function(res){\n                if (res.length > 0){\n                    obj = lodash.orderBy(res, [\"timestamp\"][\"asc\"])[0]\n                } else {\n                    obj = {}\n                }\n                \n                msg.payload = { \n                                    Response: {\n                                                // Message : \"We got your message, is this message referring to '\"+ obj.body+\"' ?\",\n                                                Message : \"We got your message, thanks!\",\n                                                code : 200\n                                    }\n                                }\n                                \n                                node.send(msg)\n                            })  \n\n","outputs":1,"noerr":0,"x":2530,"y":460,"wires":[["12af824f.4e560e","cff3965b.1eea28"]]},{"id":"12af824f.4e560e","type":"debug","z":"51f1d48a.bfebf4","name":"INBOUND SMS @","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2830,"y":520,"wires":[]},{"id":"cff3965b.1eea28","type":"xml","z":"51f1d48a.bfebf4","name":"","property":"payload","attr":"","chr":"","x":2730,"y":460,"wires":[["c70ca3e8.3b615","c2edd225.471e5"]]},{"id":"7409bea3.50b4e","type":"http in","z":"51f1d48a.bfebf4","name":"sms_api","url":"/sms_api","method":"post","upload":true,"swaggerDoc":"","x":2060,"y":180,"wires":[["b37a472d.abef28","49384b7f.2e5d2c"]]},{"id":"b37a472d.abef28","type":"debug","z":"51f1d48a.bfebf4","name":"SMS API","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2300,"y":120,"wires":[]},{"id":"49384b7f.2e5d2c","type":"function","z":"51f1d48a.bfebf4","name":"Validate and route call","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\nvar to, from, body, app, user;\nvar errorsArray  = []\n\nvar sms , error;\n\n// validate call\nif (msg.payload && typeof msg.payload === \"object\"){\n    \n    if (msg.payload.hasOwnProperty(\"to\")){\n        to = msg.payload.to\n    } else {\n        errorsArray.push({key : \"to\",\n                    message : \"To - needs to be present\"\n        })\n    }\n    \n    if (msg.payload.hasOwnProperty(\"from\")){\n        from = msg.payload.from\n    } else {\n        errorsArray.push({key : \"from\",\n                    message : \"From - Needs to be present\"\n        })\n    }\n    \n    if (msg.payload.hasOwnProperty(\"body\")){\n        body = msg.payload.body\n    } else {\n        errorsArray.push({key : \"body\",\n                    message : \"Body - needs to be present\"\n        })\n    }\n    \n    if (msg.payload.hasOwnProperty(\"app\")){\n        app = msg.payload.app\n    } else {\n        errorsArray.push({key : \"app\",\n                    message : \"App - needs to be present\"\n        })\n    } \n    \n    if (msg.payload.hasOwnProperty(\"user\")){\n        user = msg.payload.user\n    } else {\n        errorsArray.push({key : \"user\",\n                    message : \"User - needs to be present\"\n        })\n    } \n}\n\nif (errorsArray.length > 0){\n    \n    msg.payload.error = errorsArray\n    msg.payload.code = 400\n    error = msg\n} else {\n    sms = msg;\n    \n}\n\n\nreturn [sms , error];","outputs":2,"noerr":0,"x":2300,"y":180,"wires":[["15674f5d.4e9629","7a2519cf.79c3a8"],["46d71dd2.c62c4c","f3b0067c.255d8"]],"outputLabels":["sms","error"]},{"id":"46d71dd2.c62c4c","type":"http response","z":"51f1d48a.bfebf4","name":"","statusCode":"","headers":{},"x":3070,"y":260,"wires":[]},{"id":"7a2519cf.79c3a8","type":"debug","z":"51f1d48a.bfebf4","name":"response - sms - 1/2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2600,"y":100,"wires":[]},{"id":"f3b0067c.255d8","type":"debug","z":"51f1d48a.bfebf4","name":"response - error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2540,"y":240,"wires":[]},{"id":"af79791.57e6908","type":"debug","z":"51f1d48a.bfebf4","name":"response - sms - 2/2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":3080,"y":160,"wires":[]},{"id":"b5530b8c.66e958","type":"debug","z":"508957a1.dd5398","name":"EXIT post post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":260,"y":1240,"wires":[]},{"id":"728e249.bd3ca5c","type":"json","z":"508957a1.dd5398","name":"","property":"payload","action":"","pretty":false,"x":210,"y":1300,"wires":[["920da7ee.18772","b5530b8c.66e958"]]},{"id":"9c6fb265.83a68","type":"inject","z":"a2b40f09.d18fd8","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":620,"y":500,"wires":[["894b9def.6e6e08"]]},{"id":"894b9def.6e6e08","type":"function","z":"a2b40f09.d18fd8","name":"get pages","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :{application_id: new ObjectID(\"5f22ab9e5c29cbe8cc52540c\")},\n                            // query :{application_id: \"test styles\"},\n                           \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                \n                \n                    msg.payload = res\n                    node.send(msg) \n            }) \n\n// return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":740,"y":500,"wires":[["2740f15f.cbea9e","93a104c5.6d253"]]},{"id":"7445b821.81b84","type":"debug","z":"a2b40f09.d18fd8","name":"B","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":890,"y":460,"wires":[]},{"id":"2740f15f.cbea9e","type":"function","z":"a2b40f09.d18fd8","name":"CLEAR styles","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nstylesUpdate = function(array) {\n\n   _.each(array, function(arrayItem, arrayIndex){\n       if (arrayItem.hasOwnProperty(\"styles\") &&\n       typeof arrayItem.styles === 'object'\n       ){\n           array[arrayIndex].styles_old = arrayItem.styles\n           oldWidth = array[arrayIndex].styles.width\n           delete  array[arrayIndex].styles\n           array[arrayIndex].styles = {\n               width : oldWidth\n           }\n       }\n       \n       if ( arrayItem.hasOwnProperty(\"columns\") &&\n            Array.isArray(arrayItem.columns)  &&\n            arrayItem.columns.length >  0)\n            {\n               array[arrayIndex].columns =   stylesUpdate( array[arrayIndex].columns)\n            }\n        \n        if ( arrayItem.hasOwnProperty(\"container\") &&\n            Array.isArray(arrayItem.container)  &&\n            arrayItem.container.length >  0)\n            {\n               array[arrayIndex].container =   stylesUpdate( array[arrayIndex].container)\n            }\n        if ( arrayItem.hasOwnProperty(\"content\") &&\n            Array.isArray(arrayItem.content)  &&\n            arrayItem.content.length >  0)\n            {\n               array[arrayIndex].content =   stylesUpdate( array[arrayIndex].content)\n            }\n        if ( arrayItem.hasOwnProperty(\"content\") &&\n            typeof arrayItem.content === \"object\"  &&\n            arrayItem.content.hasOwnProperty(\"container\") &&\n            Array.isArray(arrayItem.content.container)  &&\n            arrayItem.content.container.length >  0\n            )\n            {\n               array[arrayIndex].content.container =   stylesUpdate( array[arrayIndex].content.container)\n            }\n            \n            if ( arrayItem.hasOwnProperty(\"customContent\") &&\n            Array.isArray(arrayItem.customContent)  &&\n            arrayItem.customContent.length >  0)\n            {\n               array[arrayIndex].customContent =   stylesUpdate( array[arrayIndex].customContent)\n            }\n            \n             if ( arrayItem.hasOwnProperty(\"screenProfiles\") &&\n            typeof arrayItem.screenProfiles === \"object\" ){\n                _.each(Object.keys(arrayItem.screenProfiles), function(key, index){\n                    if (arrayItem.screenProfiles[key].hasOwnProperty(\"content\") &&\n                        arrayItem.screenProfiles[key].content.hasOwnProperty(\"container\") &&\n                        Array.isArray(arrayItem.screenProfiles[key].content.container)  &&\n                        arrayItem.screenProfiles[key].content.container.length >  0 )\n                        {\n                           array[arrayIndex].screenProfiles[key].content.container =   stylesUpdate( array[arrayIndex].screenProfiles[key].content.container)\n                        }\n                })\n                \n            }  \n   })\n   \n   \n   \n   return array\n};\n\nmsg.oldPayload = msg.payload\n\nmsg.payload = stylesUpdate(msg.oldPayload)\n\n\n\nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":880,"y":500,"wires":[["7445b821.81b84","d006d01c.64c73"]]},{"id":"93a104c5.6d253","type":"debug","z":"a2b40f09.d18fd8","name":"A","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":710,"y":460,"wires":[]},{"id":"d786c21a.7337e","type":"function","z":"a2b40f09.d18fd8","name":"Update page","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n    // updateObj = {\n    //                 query : {\n    //                         query :{name:\"Guam\"}, \n    //                         update : { \"$set\" : {newName : new Date()}},\n    //                         options : {upsert: true}\n    //                         },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'countries',\n    //                 operation:'update', // updateMany , updateOne\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateObj, node, function(res){\n    //                 msg.payload = res\n    //                 node.send(msg) \n    //         }) \n            \nif (msg.payload.hasOwnProperty(\"content\") && \n    msg.payload.hasOwnProperty(\"_id\")\n    ){\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : {\"$set\":{content: msg.payload.content}}, \n                            options :{upsert:true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n            \n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            })  \n            \n} else {\n    return msg\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1110,"y":460,"wires":[["d006d01c.64c73"]]},{"id":"d006d01c.64c73","type":"function","z":"a2b40f09.d18fd8","name":"Loop through page records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":1120,"y":500,"wires":[["d786c21a.7337e"],["45e2cc70.b316ec","da1a8b28.ae983"]]},{"id":"45e2cc70.b316ec","type":"debug","z":"a2b40f09.d18fd8","name":"C","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1470,"y":580,"wires":[]},{"id":"2bca907.ccc3ff","type":"function","z":"a2b40f09.d18fd8","name":"Update old_page","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n    // updateObj = {\n    //                 query : {\n    //                         query :{name:\"Guam\"}, \n    //                         update : { \"$set\" : {newName : new Date()}},\n    //                         options : {upsert: true}\n    //                         },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'countries',\n    //                 operation:'update', // updateMany , updateOne\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateObj, node, function(res){\n    //                 msg.payload = res\n    //                 node.send(msg) \n    //         }) \n            \nif (msg.payload.hasOwnProperty(\"content\") && \n    msg.payload.hasOwnProperty(\"_id\")\n    ){\n// update    \n\n    updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : {\"$set\": msg.payload}, \n                            options :{upsert:true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages_old',\n                    operation:'update', // updateMany , updateOne\n                    }\n            \n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            })  \n            \n} else {\n    return msg\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1630,"y":460,"wires":[["16fc021f.6e6ae6"]]},{"id":"16fc021f.6e6ae6","type":"function","z":"a2b40f09.d18fd8","name":"Loop through page records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":1640,"y":500,"wires":[["2bca907.ccc3ff"],["bd6c6da6.ff5d58"]]},{"id":"da1a8b28.ae983","type":"function","z":"a2b40f09.d18fd8","name":"Set oldPayload to msg.payload","func":"msg.payload = msg.oldPayload\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1390,"y":500,"wires":[["16fc021f.6e6ae6"]]},{"id":"bd6c6da6.ff5d58","type":"debug","z":"a2b40f09.d18fd8","name":"DONE CRON","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1910,"y":440,"wires":[]},{"id":"f1d0effd.3ba548","type":"debug","z":"7ba47ea5.e51c4","name":"APP OVERVIEW INIT - 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":2330,"y":660,"wires":[]},{"id":"daa9a8e9.835f08","type":"inject","z":"a2b40f09.d18fd8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":680,"y":680,"wires":[["eb57492b.32a1f8"]]},{"id":"eb57492b.32a1f8","type":"function","z":"a2b40f09.d18fd8","name":"get pages ","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nfindManyObj = {\n                    query : {\n                            query :{application_id: new ObjectID(\"5ee9cfe81f91fdb63c18ae74\")}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                \n                \n                    msg.payload = res\n                    node.send(msg) \n            }) \n// return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":870,"y":680,"wires":[["44b48788.999c48"]]},{"id":"c9ea9e0e.2daa3","type":"function","z":"a2b40f09.d18fd8","name":"Update page","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nif (msg.payload.hasOwnProperty(\"content\") && \n    msg.payload.hasOwnProperty(\"_id\")\n    ){\n\nfindManyObj = {\n                    query : {\n                            query :{_id: new ObjectID(msg.payload._id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages_old',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                \n                if (res && res.length > 0){\n                    msg.payload.contentOLD = msg.payload.content\n                    msg.payload.content = res[0].content\n                }\n                \n                 updateObj = {\n                    query : {\n                            query :{_id:new ObjectID(msg.payload._id)}, \n                            update : {\"$set\":{contentOLD: msg.payload.contentOLD, content: msg.payload.content}}, \n                            options :{upsert:true}\n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'pages',\n                    operation:'update', // updateMany , updateOne\n                    }\n            \n            mongodbTools.resolveAsync(updateObj, node, function(res){\n                    // msg.payload = res\n                    node.send(msg) \n            })  \n                \n                   \n            }) \n    // updateObj = {\n    //                 query : {\n    //                         query :{name:\"Guam\"}, \n    //                         update : { \"$set\" : {newName : new Date()}},\n    //                         options : {upsert: true}\n    //                         },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'countries',\n    //                 operation:'update', // updateMany , updateOne\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateObj, node, function(res){\n    //                 msg.payload = res\n    //                 node.send(msg) \n    //         }) \n            \n// if (msg.payload.hasOwnProperty(\"content\") && \n//     msg.payload.hasOwnProperty(\"_id\")\n//     ){\n// // update    \n\n//     updateObj = {\n//                     query : {\n//                             query :{_id:new ObjectID(msg.payload._id)}, \n//                             update : {\"$set\":{content: msg.payload.content}}, \n//                             options :{upsert:true}\n//                             },\n//                     connection:global.get(\"DB_data.connection\"),\n//                     database:global.get(\"DB_data.appDB\"),\n//                     collection:'pages',\n//                     operation:'update', // updateMany , updateOne\n//                     }\n            \n//             mongodbTools.resolveAsync(updateObj, node, function(res){\n//                     // msg.payload = res\n//                     node.send(msg) \n//             })  \n            \n} else {\n    return msg\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1150,"y":660,"wires":[["44b48788.999c48"]]},{"id":"44b48788.999c48","type":"function","z":"a2b40f09.d18fd8","name":"Loop through page records ","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":1160,"y":700,"wires":[["c9ea9e0e.2daa3"],["51132278.37cdec"]]},{"id":"51132278.37cdec","type":"debug","z":"a2b40f09.d18fd8","name":"C DONE","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1420,"y":760,"wires":[]},{"id":"b3196b0c.517678","type":"debug","z":"f8594dbe.be6f8","name":"AAA@@@@","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2250,"y":1480,"wires":[]},{"id":"3eaaac4f.be9de4","type":"function","z":"53926ffd.c5a74","name":"Validate","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n        \ntokenState = \"invalid\"\nTokenContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n      if (decoded !== undefined){\n          tokenState = \"valid\"\n          TokenContent = decoded\n      }\n    });\n    \n    msg.tokenResult = {\n        \n        token : msg.token  ,\n        tokenState : tokenState,\n        key: TokenContent.key, \n        TokenContent:TokenContent\n    }\n    return msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":200,"y":80,"wires":[[]]},{"id":"41552a5.922cdd4","type":"function","z":"508957a1.dd5398","name":"Generate","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n            msg.PostPayload.content.type = \"unauthorized\"\n            msg.PostPayload.content.key  = new ObjectID()\n            \n            payload = {type : msg.PostPayload.type, token : jsonwebtoken.sign(msg.PostPayload.content, global.get(\"SystemVars.secret\"))};\n            \n            msg.PostPayload.content.token = payload.token\n            \n            msg.payload = payload\n            \n            // update     \n            \n            msg.payload.key =  msg.PostPayload.content.key\n           \nreturn msg;\n    // updateObj = {\n    //                 query : {\n    //                         query :{\n    //                                 revotioSessionId:msg.PostPayload.content.revotioSessionId, \n    //                                 deviceId : msg.PostPayload.content.deviceId\n    //                         }, \n    //                         update : { \"$set\" : msg.PostPayload.content},\n    //                         options : {upsert: true}\n    //                         },\n    //                 connection:global.get(\"DB_data.connection\"),\n    //                 database:global.get(\"DB_data.appDB\"),\n    //                 collection:'sessions',\n    //                 operation:'update', // updateMany , updateOne\n    //                 }\n\n    //         mongodbTools.resolveAsync(updateObj, node, function(res){\n    //               findOneObj = {\n    //                             query : {\n    //                                     query :{revotioSessionId:msg.PostPayload.content.revotioSessionId, \n    //                                             deviceId : msg.PostPayload.content.deviceId} \n    //                                     },\n    //                             connection:global.get(\"DB_data.connection\"),\n    //                             database:global.get(\"DB_data.appDB\"),\n    //                             collection:'sessions',\n    //                             operation:'find',\n    //                             }\n            \n    //                     mongodbTools.resolveAsync(findOneObj, node, function(res){\n    //                         if (res.length > 0){\n    //                             msg.payload.key = res[0]._id\n    //                         } \n                                \n    //                             node.send(msg) \n    //                     })  \n    //         })  \n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":460,"y":1080,"wires":[["ed8a39bb.178cb8","de8d58b0.db8028"]]},{"id":"8cd256fa.8b7098","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":990,"y":1140,"wires":[]},{"id":"ed8a39bb.178cb8","type":"debug","z":"508957a1.dd5398","name":"TOKEN post GENERATE","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":670,"y":1040,"wires":[]},{"id":"de8d58b0.db8028","type":"function","z":"508957a1.dd5398","name":"Get /Set key","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n\nreturn msg;\n// Get key\n\n// if ( typeof msg.payload.TokenContent === \"object\" && \n//     msg.payload.TokenContent.deviceId   && \n//     msg.payload.TokenContent.revotioSessionId\n//     ){\n    \n    \n    \n\n//     findOneObj = {\n//                         query : {\n//                                 query :{\n//                                     revotioSessionId:msg.payload.TokenContent.revotioSessionId,\n//                                     deviceId:msg.payload.TokenContent.deviceId\n//                                 } \n//                                 },\n//                         connection:global.get(\"DB_data.connection\"),\n//                         database:global.get(\"DB_data.appDB\"),\n//                         collection:'sessions',\n//                         operation:'find',\n//                         }\n    \n//                 mongodbTools.resolveAsync(findOneObj, node, function(res){\n//                     if (res.length > 0){\n//                         msg.payload.key = res[0]._id\n//                     } \n    \n//                         node.send(msg) \n//                 })  \n\n// } else {\n//     node.send(msg)\n// }\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":750,"y":1140,"wires":[["8cd256fa.8b7098","4ce2ca4d.4241f4"]]},{"id":"4ce2ca4d.4241f4","type":"debug","z":"508957a1.dd5398","name":"TOKEN post 11","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":860,"y":1080,"wires":[]},{"id":"996a3cfa.05bf8","type":"function","z":"508957a1.dd5398","name":"Token API","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar jsonwebtoken = global.get('jsonwebtoken');\n\nvar generate, validate, key, error;\n\nif (typeof msg.payload === 'string'){\n    payload = JSON.parse(msg.payload)\n    msg.payload = payload;\n} \nif (typeof msg.payload === 'string'){\n    payload = JSON.parse(msg.payload)\n    msg.payload = payload;\n} \nif (typeof msg.payload.content === 'string'){\n    var content = JSON.parse(msg.payload.content)\n    msg.payload.content = content;\n} \n\nmsg.PostPayload  = msg.payload;\n\nmsg.token = msg.PostPayload.token\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n        if (msg.PostPayload.type === \"generate\"  && msg.PostPayload.content && msg.PostPayload.content.deviceId){\n\n            generate = msg;\n        } else if (msg.PostPayload.type === \"validate\" &&  msg.PostPayload.token){\n            validate = msg;\n            \n        } else if (msg.PostPayload.type === \"key\" &&  msg.PostPayload.token ){\n            key = msg;\n            \n        } else {\n          error = msg\n        }\n\nreturn [generate, validate, key, error];","outputs":4,"noerr":0,"initialize":"","finalize":"","x":240,"y":1140,"wires":[["41552a5.922cdd4"],["f8b44c33.0e10e8"],["226f35a1.a26af2"],["1d43c493.374b03"]],"outputLabels":["generate","validate","key","error"]},{"id":"379f923d.b717b6","type":"function","z":"508957a1.dd5398","name":"KEY","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\ntokenState = \"invalid\"\nTokenContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.PostPayload.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n      if (decoded !== undefined){\n          tokenState = \"valid\"\n          TokenContent = decoded\n      }\n    });\n    \n    payload = { type:msg.PostPayload.type, token : msg.PostPayload.token  , tokenState : tokenState,key: TokenContent.key }; //, TokenContent:TokenContent\n    \n    msg.payload = payload ;\n    return msg;\n    // findOneObj = {\n    //                             query : {\n    //                                     query :{revotioSessionId:msg.PostPayload.content.revotioSessionId, \n    //                                             deviceId : msg.PostPayload.content.deviceId} \n    //                                     },\n    //                             connection:global.get(\"DB_data.connection\"),\n    //                             database:global.get(\"DB_data.appDB\"),\n    //                             collection:'sessions',\n    //                             operation:'find',\n    //                             }\n            \n    //                     mongodbTools.resolveAsync(findOneObj, node, function(res){\n    //                         if (res.length > 0){\n    //                             msg.payload.key = res[0]._id\n    //                         } \n                        //   node.send(msg)  \n                        // })\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":1160,"wires":[["de8d58b0.db8028","362e9b63.4d47e4"]]},{"id":"1d43c493.374b03","type":"function","z":"508957a1.dd5398","name":"error","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\nmsg.payload = \"invalid post request - type\";\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":530,"y":1200,"wires":[["8cd256fa.8b7098"]]},{"id":"981105c.76618f8","type":"debug","z":"508957a1.dd5398","name":"TOKEN post Validate","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":1080,"wires":[]},{"id":"362e9b63.4d47e4","type":"debug","z":"508957a1.dd5398","name":"TOKEN post KEY","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":750,"y":1180,"wires":[]},{"id":"f8b44c33.0e10e8","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":400,"y":1120,"wires":[["981105c.76618f8","14c396a8.50ea69"]]},{"id":"14c396a8.50ea69","type":"function","z":"508957a1.dd5398","name":"Validate","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n    \n    msg.payload = { type:msg.PostPayload.type, token : msg.tokenResult.token  , tokenState : msg.tokenResult.tokenState,key: msg.tokenResult.key }; // TokenContent:TokenContent\n    \n   \n    return msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":1120,"wires":[["de8d58b0.db8028"]]},{"id":"226f35a1.a26af2","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":400,"y":1160,"wires":[["379f923d.b717b6"]]},{"id":"7eafc839.978f28","type":"http response","z":"508957a1.dd5398","name":"","statusCode":"","headers":{},"x":450,"y":1040,"wires":[]},{"id":"f17c765e.408ab8","type":"function","z":"508957a1.dd5398","name":"Token API","func":"var BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\n\nvar jsonwebtoken = global.get('jsonwebtoken');\n\n\n\nif (typeof msg.payload === 'string'){\n    var payload = JSON.parse(msg.payload)\n    msg.payload = payload;\n} \nif (typeof msg.payload === 'string'){\n    payload = JSON.parse(msg.payload)\n    msg.payload = payload;\n} \nif (typeof msg.payload.content === 'string'){\n    var content = JSON.parse(msg.payload.content)\n    msg.payload.content = content;\n} \n\nPostPayload = msg.payload;\n\n        if (PostPayload.type === \"generate\"  && PostPayload.content && PostPayload.content.deviceId){\n          \n            PostPayload.content.type = \"unauthorized\"\n            payload = {token : jsonwebtoken.sign(PostPayload.content, global.get(\"SystemVars.secret\"))};\n            \n            msg.payload = payload\n        } else if (PostPayload.type === \"validate\" &&  PostPayload.token){\n        \n            tokenState = \"invalid\"\n            TokenContent = {};\n            // verify a token symmetric\n                jsonwebtoken.verify(PostPayload.token, global.get(\"SystemVars.secret\"), function(err, decoded) {\n                  if (decoded !== undefined){\n                      tokenState = \"valid\"\n                      TokenContent = decoded\n                  }\n                });\n                \n                payload = { token : PostPayload.token  , tokenState : tokenState, TokenContent:TokenContent };\n                \n                msg.payload = payload ;\n        } else {\n            msg.payload = \"invalid post request - type\";\n        }\n\n\nmsg.headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT,GET,POST,DELETE,OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'content-type': 'application/json',\n};\n\n   msg.PostPayload = PostPayload \n    \n\n\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":1040,"wires":[["7eafc839.978f28"]]},{"id":"f6b3771f.d41548","type":"function","z":"508957a1.dd5398","name":"Set msg.token","func":"\nmsg.token = msg.payload.token\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":620,"y":200,"wires":[["64e3cabd.69b9a4"]]},{"id":"c56320d9.082008","type":"function","z":"508957a1.dd5398","name":"Decrypt","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n        \ndataState = \"invalid\"\ndataContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.payload.data, msg.tokenResult.key, function(err, decoded) {\n      if (decoded !== undefined){\n          dataState = \"valid\"\n          dataContent = decoded\n      }\n    });\n    \n    msg.dataResult = {\n        \n        data : msg.payload.data  ,\n        dataState : dataState,\n        key: msg.tokenResult.key, \n        dataContent:dataContent\n    }\n    return msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":200,"wires":[["bbdc3383.cf54c8","eed30f49.b6e39"]]},{"id":"64e3cabd.69b9a4","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":800,"y":200,"wires":[["c56320d9.082008"]]},{"id":"13c4294b.23613f","type":"function","z":"508957a1.dd5398","name":"Set msg.token","func":"\nmsg.token = msg.payload.token\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":520,"wires":[["e9fecf9f.d34c5"]]},{"id":"de8fb949.f20788","type":"function","z":"508957a1.dd5398","name":"Decrypt","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n        \ndataState = \"invalid\"\ndataContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.payload.data, msg.tokenResult.key, function(err, decoded) {\n      if (decoded !== undefined){\n          dataState = \"valid\"\n          dataContent = decoded\n      }\n    });\n    \n    msg.dataResult = {\n        \n        data : msg.payload.data  ,\n        dataState : dataState,\n        key: msg.tokenResult.key, \n        dataContent:dataContent\n    }\n    return msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":520,"wires":[["8cd48535.9010d8","12a86303.f876ed"]]},{"id":"e9fecf9f.d34c5","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":500,"y":520,"wires":[["de8fb949.f20788"]]},{"id":"1d0b4bad.c78bcc","type":"function","z":"508957a1.dd5398","name":"Set msg.token","func":"\nmsg.token = msg.payload.token\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":720,"wires":[["89178cce.64905"]]},{"id":"7f2dce42.419168","type":"function","z":"508957a1.dd5398","name":"Decrypt","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n        \ndataState = \"invalid\"\ndataContent = {};\n// verify a token symmetric\n    jsonwebtoken.verify(msg.payload.data, msg.tokenResult.key, function(err, decoded) {\n      if (decoded !== undefined){\n          dataState = \"valid\"\n          dataContent = decoded\n      }\n    });\n    \n    msg.dataResult = {\n        \n        data : msg.payload.data  ,\n        dataState : dataState,\n        key: msg.tokenResult.key, \n        dataContent:dataContent\n    }\n    return msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":670,"y":720,"wires":[["bb744419.3b4b","d9a31cb4.de7588"]]},{"id":"89178cce.64905","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":490,"y":720,"wires":[["7f2dce42.419168"]]},{"id":"843a9ad4.9424b8","type":"function","z":"508957a1.dd5398","name":"Encrypt data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\npayload = {\n    data : jsonwebtoken.sign(msg.payload, msg.tokenResult.key),\n    token:msg.payload.token,\n    // revotioSessionId:msg.payload.revotioSessionId ,\n    // deviceId: msg.payload.deviceId\n}\n\nmsg.payload = payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2210,"y":1100,"wires":[["cf8d96f9.9c98d"]]},{"id":"4c1b020f.633964","type":"function","z":"508957a1.dd5398","name":"Set msg.token","func":"msg.token = msg.payload.token\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1920,"y":1100,"wires":[["eb4d6343.533e18"]]},{"id":"eb4d6343.533e18","type":"subflow:53926ffd.c5a74","z":"508957a1.dd5398","name":"","env":[],"x":2080,"y":1100,"wires":[["843a9ad4.9424b8"]]},{"id":"2dee3212.2703a6","type":"function","z":"e25f5e2d.45871","name":"Set msg.token","func":"msg.token = msg.payload.token\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1120,"y":120,"wires":[["6d7694a6.cb54cc"]]},{"id":"b991d80a.80afa","type":"function","z":"e25f5e2d.45871","name":"Encrypt data","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\npayload = {\n    \n    data : jsonwebtoken.sign(msg.payload, msg.tokenResult.key),\n    token:msg.payload.token,\n    // revotioSessionId:msg.payload.revotioSessionId ,\n    // deviceId: msg.payload.deviceId\n}\n// msg.payload.data = payload.data\n\nmsg.payload = payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1430,"y":120,"wires":[["9690ddef.823e3"]]},{"id":"6d7694a6.cb54cc","type":"subflow:53926ffd.c5a74","z":"e25f5e2d.45871","name":"","x":1280,"y":120,"wires":[["b991d80a.80afa"]]},{"id":"eed30f49.b6e39","type":"debug","z":"508957a1.dd5398","name":"ENTERANCE post","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1230,"y":180,"wires":[]},{"id":"3fabef5c.663f88","type":"inject","z":"508957a1.dd5398","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":780,"y":1900,"wires":[["89d60b53.ef9038"]]},{"id":"89d60b53.ef9038","type":"function","z":"508957a1.dd5398","name":"Libs","func":"var request = global.get('request');\nvar Moment = global.get('moment');\nvar MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\nvar unzipper =  global.get('unzipper')","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1040,"y":1860,"wires":[[]]},{"id":"c2047b5f.0af2d","type":"function","z":"671d608a.039ad","name":"Route actionType ","func":"var update, itemsList;\n\nif (msg.RevotioData.PostData.actionType === \"update\"){\n    update = msg;\n} else if (msg.RevotioData.PostData.actionType === \"itemsList\"){\n    itemsList = msg;\n}\nreturn [ update, itemsList];","outputs":2,"noerr":0,"x":3850,"y":760,"wires":[["5c7024d1.897a2c"],["b4d2194c.5c5b18"]],"outputLabels":[" update, ","itemsList"]},{"id":"b4d2194c.5c5b18","type":"function","z":"671d608a.039ad","name":"get items","func":"var request = global.get('request');\nvar Moment = global.get('moment');var MomentRange = global.get('momentrange');\nvar moment = MomentRange.extendMoment(Moment)\nvar crypto = global.get('crypto');\nvar momentTimezone = global.get('moment_timezone');\nvar lodash = global.get('lodash');\nvar _ = global.get('underscore');\nvar BSON = global.get('bson');\nvar ObjectID = BSON.ObjectID;\nvar accounting = global.get('accounting');\nvar accountingoptions = {\tsymbol : \"€\",\tdecimal : \".\", \tthousand: \" \", \tprecision : 0, \tformat: \"%s %v\"}; // example = Output = accounting.formatMoney(Number, accountingoptions );\nvar jsonwebtoken = global.get('jsonwebtoken');\nvar mongodbTools = global.get('mongodbTools');\nvar excelToJson = global.get('excelToJson');\nvar Excel = global.get('exceljs');\nvar fs = global.get('fsextra');\nvar xml2js = global.get('xml2js');\nvar json2xls = global.get('json2xls');\nvar nodemailer = global.get('nodemailer');\nvar mg = global.get('nodemailer_mailgun_transport');\n\n\n// findMany\n\nfindManyObj = {\n                    query : {\n                            query :{organization_id: new ObjectID(msg.RevotioData.FlowData.organization_id)}, \n                            },\n                    connection:global.get(\"DB_data.connection\"),\n                    database:global.get(\"DB_data.appDB\"),\n                    collection:'items',\n                    operation:'find',\n                    }\n\n            mongodbTools.resolveAsync(findManyObj, node, function(res){\n                    msg.payload = {\n                                    gadgetsList:[{\n                                  \"gadgetId\": \"eb1cee2a-b04f-71e7-3169-78068b3c0a8a\",\n                                        \"gadgetName\": \"page_builder_edit\",\n                                        \"gadgetType\": \"page-builder\",\n                                    \"gadgetOptions\": {\n                                      \"disabled\": false,\n                                      \"disabledTabsview\": false,\n                                      \"contentType\": \"itemsList\"\n                                    },\n                                    \"gadgetData\": res\n                                    \n                                  }]}\n                    node.send(msg) \n            }) \n\n\n\n  \n//   return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":4040,"y":780,"wires":[["744b7f5.3afff"]]},{"id":"744b7f5.3afff","type":"link out","z":"671d608a.039ad","name":"","links":["e840ddd7.11a94","b4124e7e.13a8c8","f08dbd30.19106","ade0a880.e9e3","8ad43811.fd07d","74cebd07.0f68ec","ca494f41.c9ae08","c0a93485.127778","9c22e19d.5d8b4","8b5b3ea9.8d95d","a290aa5e.2d5bd8","62cd4701.1412e8","ec762598.4c2af8","9f7a0e6d.1758e8","c26c7f96.20094","3284eff1.d8cd78","d5c0b170.80cb78","11b5fac2.b2221d","4c93583.818b628","283ed720.02f7a","8414ff77.fcbb8","ded62554.44e988","33d6d74c.25aeb8","aba290c9.ab162","c37dfc7e.43b73","df85e4a9.ff02f8","527cdfb6.14653","7f33fea0.9165c","a23ff887.2048e8","4fdab1fb.c42528","c35742c.3978e4"],"x":4155,"y":780,"wires":[]}]